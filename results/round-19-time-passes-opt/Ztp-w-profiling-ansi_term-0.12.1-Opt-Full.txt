time:   0.001; rss:   59MB ->   59MB (   +0MB)	parse_crate
time:   0.000; rss:   59MB ->   59MB (   +0MB)	attributes_injection
time:   0.000; rss:   61MB ->   61MB (   +0MB)	plugin_loading
time:   0.000; rss:   61MB ->   61MB (   +0MB)	plugin_registration
time:   0.000; rss:   61MB ->   61MB (   +0MB)	crate_injection
time:   0.025; rss:   61MB ->   96MB (  +35MB)	expand_crate
time:   0.000; rss:   96MB ->   96MB (   +0MB)	check_unused_macros
time:   0.025; rss:   61MB ->   96MB (  +35MB)	macro_expand_crate
time:   0.000; rss:   96MB ->   96MB (   +0MB)	maybe_building_test_harness
time:   0.000; rss:   96MB ->   97MB (   +0MB)	AST_validation
time:   0.000; rss:   97MB ->   97MB (   +0MB)	maybe_create_a_macro_crate
time:   0.000; rss:   97MB ->   97MB (   +0MB)	finalize_imports
time:   0.000; rss:   97MB ->   97MB (   +0MB)	resolve_access_levels
time:   0.000; rss:   97MB ->   97MB (   +0MB)	finalize_macro_resolutions
time:   0.002; rss:   97MB ->   99MB (   +3MB)	late_resolve_crate
time:   0.000; rss:   99MB ->   99MB (   +0MB)	resolve_main
time:   0.000; rss:   99MB ->   99MB (   +0MB)	resolve_check_unused
time:   0.000; rss:   99MB ->   99MB (   +0MB)	resolve_report_errors
time:   0.000; rss:   99MB ->   99MB (   +0MB)	resolve_postprocess
time:   0.003; rss:   97MB ->   99MB (   +3MB)	resolve_crate
time:   0.000; rss:   99MB ->   99MB (   +0MB)	complete_gated_feature_checking
time:   0.029; rss:   61MB ->   99MB (  +38MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmpB2h1is/target/release/deps/ansi_term-f7138eaa2ea3bafc.d","emit":"dep-info"}
time:   0.000; rss:   99MB ->   99MB (   +0MB)	prepare_outputs
time:   0.004; rss:   99MB ->  102MB (   +3MB)	hir_lowering
{"message":"associated type `wstr` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/write.rs","byte_start":59,"byte_end":63,"line_start":6,"line_end":6,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    type wstr: ?Sized;","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/write.rs","byte_start":59,"byte_end":63,"line_start":6,"line_end":6,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    type wstr: ?Sized;","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":"Wstr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated type `wstr` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/write.rs:6:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    type wstr: ?Sized;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case (notice the capitalization): `Wstr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
time:   0.001; rss:  102MB ->  102MB (   +0MB)	early_lint_checks
time:   0.000; rss:  102MB ->  102MB (   +0MB)	drop_ast
time:   0.000; rss:  103MB ->  103MB (   +0MB)	setup_global_ctxt
time:   0.000; rss:  106MB ->  106MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:  106MB ->  106MB (   +0MB)	looking_for_derive_registrar
{"message":"unused attribute","code":{"code":"unused_attributes","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":9399,"byte_end":9423,"line_start":234,"line_end":234,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#![crate_type = \"dylib\"]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_attributes)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"attribute also specified here","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":9375,"byte_end":9398,"line_start":233,"line_end":233,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"#![crate_type = \"rlib\"]","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"remove this attribute","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":9399,"byte_end":9423,"line_start":234,"line_end":234,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#![crate_type = \"dylib\"]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused attribute\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:234:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#![crate_type = \"dylib\"]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this attribute\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_attributes)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: attribute also specified here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:233:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#![crate_type = \"rlib\"]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\n"}
time:   0.002; rss:  106MB ->  106MB (   +0MB)	misc_checking_1
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/write.rs","byte_start":266,"byte_end":281,"line_start":15,"line_end":15,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":23,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(bare_trait_objects)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/write.rs","byte_start":266,"byte_end":266,"line_start":15,"line_end":15,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/write.rs","byte_start":281,"byte_end":281,"line_start":15,"line_end":15,"column_start":38,"column_end":38,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":38,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/write.rs:15:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<'a> AnyWrite for fmt::Write + 'a {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(bare_trait_objects)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mimpl<'a> AnyWrite for fmt::Write + 'a {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mimpl<'a> AnyWrite for \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write + 'a {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/write.rs","byte_start":605,"byte_end":619,"line_start":29,"line_end":29,"column_start":23,"column_end":37,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":23,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/write.rs","byte_start":605,"byte_end":605,"line_start":29,"line_end":29,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/write.rs","byte_start":619,"byte_end":619,"line_start":29,"line_end":29,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/write.rs:29:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<'a> AnyWrite for io::Write + 'a {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mimpl<'a> AnyWrite for io::Write + 'a {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mimpl<'a> AnyWrite for \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mio::Write + 'a {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
time:   0.003; rss:  106MB ->  111MB (   +4MB)	type_collecting
time:   0.000; rss:  111MB ->  111MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  111MB ->  111MB (   +0MB)	unsafety_checking
time:   0.010; rss:  111MB ->  134MB (  +24MB)	coherence_checking
time:   0.010; rss:  134MB ->  136MB (   +2MB)	wf_checking
time:   0.001; rss:  136MB ->  136MB (   +0MB)	item_types_checking
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/ansi.rs","byte_start":8989,"byte_end":8999,"line_start":279,"line_end":279,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/ansi.rs","byte_start":8989,"byte_end":8989,"line_start":279,"line_end":279,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/ansi.rs","byte_start":8999,"byte_end":8999,"line_start":279,"line_end":279,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ansi.rs:279:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/ansi.rs","byte_start":9302,"byte_end":9312,"line_start":291,"line_end":291,"column_start":29,"column_end":39,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/ansi.rs","byte_start":9302,"byte_end":9302,"line_start":291,"line_end":291,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/ansi.rs","byte_start":9312,"byte_end":9312,"line_start":291,"line_end":291,"column_start":39,"column_end":39,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":39,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ansi.rs:291:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                let f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/ansi.rs","byte_start":9434,"byte_end":9444,"line_start":295,"line_end":295,"column_start":29,"column_end":39,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/ansi.rs","byte_start":9434,"byte_end":9434,"line_start":295,"line_end":295,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/ansi.rs","byte_start":9444,"byte_end":9444,"line_start":295,"line_end":295,"column_start":39,"column_end":39,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":39,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ansi.rs:295:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m295\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m295\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m295\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                let f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/ansi.rs","byte_start":9755,"byte_end":9765,"line_start":308,"line_end":308,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/ansi.rs","byte_start":9755,"byte_end":9755,"line_start":308,"line_end":308,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/ansi.rs","byte_start":9765,"byte_end":9765,"line_start":308,"line_end":308,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ansi.rs:308:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m308\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m308\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m308\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/display.rs","byte_start":5959,"byte_end":5969,"line_start":201,"line_end":201,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let w: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/display.rs","byte_start":5959,"byte_end":5959,"line_start":201,"line_end":201,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let w: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/display.rs","byte_start":5969,"byte_end":5969,"line_start":201,"line_end":201,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"        let w: &mut fmt::Write = f;","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/display.rs:201:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let w: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let w: &mut fmt::Write = f;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let w: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/display.rs","byte_start":6275,"byte_end":6284,"line_start":210,"line_end":210,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/display.rs","byte_start":6275,"byte_end":6275,"line_start":210,"line_end":210,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/display.rs","byte_start":6284,"byte_end":6284,"line_start":210,"line_end":210,"column_start":30,"column_end":30,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":30,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/display.rs:210:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let w: &mut io::Write = w;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let w: &mut io::Write = w;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let w: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mio::Write = w;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/display.rs","byte_start":6861,"byte_end":6871,"line_start":229,"line_end":229,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/display.rs","byte_start":6861,"byte_end":6861,"line_start":229,"line_end":229,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/display.rs","byte_start":6871,"byte_end":6871,"line_start":229,"line_end":229,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/display.rs:229:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/display.rs","byte_start":7201,"byte_end":7210,"line_start":239,"line_end":239,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/display.rs","byte_start":7201,"byte_end":7201,"line_start":239,"line_end":239,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/display.rs","byte_start":7210,"byte_end":7210,"line_start":239,"line_end":239,"column_start":30,"column_end":30,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":30,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/display.rs:239:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let w: &mut io::Write = w;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let w: &mut io::Write = w;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let w: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mio::Write = w;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
time:   0.049; rss:  136MB ->  143MB (   +7MB)	item_bodies_checking
time:   0.073; rss:  106MB ->  143MB (  +37MB)	type_check_crate
time:   0.001; rss:  143MB ->  143MB (   +0MB)	match_checking
time:   0.001; rss:  143MB ->  143MB (   +0MB)	liveness_and_intrinsic_checking
time:   0.002; rss:  143MB ->  143MB (   +0MB)	misc_checking_2
time:   0.042; rss:  143MB ->  152MB (   +9MB)	MIR_borrow_checking
time:   0.000; rss:  152MB ->  152MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  152MB ->  152MB (   +0MB)	layout_testing
time:   0.001; rss:  152MB ->  153MB (   +1MB)	death_checking
time:   0.000; rss:  153MB ->  153MB (   +0MB)	unused_lib_feature_checking
time:   0.002; rss:  153MB ->  153MB (   +0MB)	crate_lints
time:   0.001; rss:  153MB ->  153MB (   +0MB)	module_lints
time:   0.003; rss:  153MB ->  153MB (   +0MB)	lint_checking
time:   0.001; rss:  153MB ->  153MB (   +0MB)	privacy_checking_modules
time:   0.006; rss:  152MB ->  153MB (   +1MB)	misc_checking_3
time:   0.011; rss:  153MB ->  155MB (   +2MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmpB2h1is/target/release/deps/libansi_term-f7138eaa2ea3bafc.rmeta","emit":"metadata"}
time:   0.000; rss:  156MB ->  156MB (   +0MB)	monomorphization_collector_root_collections
time:   0.017; rss:  156MB ->  160MB (   +4MB)	monomorphization_collector_graph_walk
time:   0.003; rss:  160MB ->  160MB (   +0MB)	partition_and_assert_distinct_symbols
time:   0.000; rss:  160MB ->  160MB (   +0MB)	find_cgu_reuse
time:   0.042; rss:  160MB ->  186MB (  +26MB)	codegen_to_LLVM_IR
time:   0.064; rss:  156MB ->  186MB (  +30MB)	codegen_crate
time:   0.000; rss:  186MB ->  186MB (   +0MB)	serialize_dep_graph
time:   0.009; rss:  186MB ->  134MB (  -52MB)	free_global_ctxt
time:   0.003; rss:  135MB ->  139MB (   +4MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.8)
time:   0.003; rss:  135MB ->  140MB (   +5MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.15)
time:   0.002; rss:  138MB ->  140MB (   +2MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.14)
time:   0.003; rss:  137MB ->  141MB (   +3MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.11)
time:   0.003; rss:  137MB ->  141MB (   +3MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.9)
time:   0.003; rss:  137MB ->  141MB (   +3MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.12)
time:   0.003; rss:  137MB ->  141MB (   +3MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.10)
time:   0.004; rss:  135MB ->  141MB (   +5MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.6)
time:   0.003; rss:  138MB ->  141MB (   +2MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.13)
time:   0.008; rss:  138MB ->  144MB (   +6MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.7)
time:   0.013; rss:  138MB ->  146MB (   +7MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.1)
time:   0.014; rss:  138MB ->  146MB (   +7MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.3)
time:   0.013; rss:  141MB ->  146MB (   +5MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.4)
time:   0.019; rss:  140MB ->  146MB (   +6MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.2)
time:   0.025; rss:  141MB ->  147MB (   +7MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.5)
time:   0.056; rss:  140MB ->  150MB (  +11MB)	LLVM_lto_optimize(ansi_term.f0cdcc71-cgu.0)
time:   0.219; rss:  165MB ->  150MB (  -15MB)	LLVM_passes(crate)
time:   0.000; rss:  150MB ->  150MB (   +0MB)	join_worker_thread
time:   0.175; rss:  134MB ->  150MB (  +16MB)	finish_ongoing_codegen
time:   0.000; rss:  150MB ->  150MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  150MB ->  150MB (   +0MB)	serialize_work_products
time:   0.000; rss:  150MB ->  150MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.001; rss:  150MB ->  151MB (   +0MB)	link_rlib
{"artifact":"/usr/home/liquid/tmp/.tmpB2h1is/target/release/deps/libansi_term-f7138eaa2ea3bafc.rlib","emit":"link"}
time:   0.000; rss:  151MB ->  151MB (   +0MB)	link_binary_remove_temps
time:   0.002; rss:  150MB ->  151MB (   +0MB)	link_binary
time:   0.002; rss:  150MB ->  151MB (   +0MB)	link_crate
time:   0.177; rss:  134MB ->  151MB (  +17MB)	link
{"message":"12 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 12 warnings emitted\u001b[0m\n\n"}
time:   0.429; rss:   46MB ->  152MB ( +105MB)	total
