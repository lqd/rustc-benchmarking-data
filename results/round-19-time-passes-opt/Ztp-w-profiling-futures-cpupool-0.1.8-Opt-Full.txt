time:   0.004; rss:   60MB ->   63MB (   +3MB)	parse_crate
time:   0.000; rss:   63MB ->   63MB (   +0MB)	attributes_injection
time:   0.000; rss:   65MB ->   65MB (   +0MB)	plugin_loading
time:   0.000; rss:   65MB ->   65MB (   +0MB)	plugin_registration
time:   0.000; rss:   65MB ->   65MB (   +0MB)	crate_injection
time:   0.016; rss:   65MB ->   99MB (  +34MB)	expand_crate
time:   0.000; rss:   99MB ->   99MB (   +0MB)	check_unused_macros
time:   0.016; rss:   65MB ->   99MB (  +34MB)	macro_expand_crate
time:   0.000; rss:   99MB ->   99MB (   +0MB)	maybe_building_test_harness
time:   0.000; rss:   99MB ->   99MB (   +0MB)	AST_validation
time:   0.000; rss:   99MB ->   99MB (   +0MB)	maybe_create_a_macro_crate
time:   0.000; rss:   99MB ->   99MB (   +0MB)	finalize_imports
time:   0.000; rss:   99MB ->   99MB (   +0MB)	resolve_access_levels
time:   0.000; rss:   99MB ->   99MB (   +0MB)	finalize_macro_resolutions
time:   0.003; rss:   99MB ->  102MB (   +3MB)	late_resolve_crate
time:   0.000; rss:  102MB ->  102MB (   +0MB)	resolve_main
time:   0.000; rss:  102MB ->  102MB (   +0MB)	resolve_check_unused
time:   0.000; rss:  102MB ->  102MB (   +0MB)	resolve_report_errors
time:   0.000; rss:  102MB ->  102MB (   +0MB)	resolve_postprocess
time:   0.004; rss:   99MB ->  102MB (   +3MB)	resolve_crate
time:   0.000; rss:  102MB ->  102MB (   +0MB)	complete_gated_feature_checking
time:   0.021; rss:   65MB ->  102MB (  +38MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmpclmk9P/target/release/deps/futures_cpupool-2c9886f2f6d82670.d","emit":"dep-info"}
time:   0.000; rss:  102MB ->  102MB (   +0MB)	prepare_outputs
time:   0.003; rss:  102MB ->  104MB (   +2MB)	hir_lowering
time:   0.000; rss:  104MB ->  104MB (   +0MB)	early_lint_checks
time:   0.000; rss:  104MB ->  104MB (   +0MB)	drop_ast
time:   0.000; rss:  105MB ->  105MB (   +0MB)	setup_global_ctxt
time:   0.000; rss:  105MB ->  105MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:  105MB ->  105MB (   +0MB)	looking_for_derive_registrar
time:   0.002; rss:  105MB ->  109MB (   +3MB)	misc_checking_1
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":3010,"byte_end":3028,"line_start":85,"line_end":85,"column_start":29,"column_end":47,"is_primary":true,"text":[{"text":"    after_start: Option<Arc<Fn() + Send + Sync>>,","highlight_start":29,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(bare_trait_objects)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3010,"byte_end":3010,"line_start":85,"line_end":85,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"    after_start: Option<Arc<Fn() + Send + Sync>>,","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":3028,"byte_end":3028,"line_start":85,"line_end":85,"column_start":47,"column_end":47,"is_primary":true,"text":[{"text":"    after_start: Option<Arc<Fn() + Send + Sync>>,","highlight_start":47,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:85:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    after_start: Option<Arc<Fn() + Send + Sync>>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(bare_trait_objects)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    after_start: Option<Arc<Fn() + Send + Sync>>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    after_start: Option<Arc<\u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mFn() + Send + Sync>>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":3060,"byte_end":3078,"line_start":86,"line_end":86,"column_start":29,"column_end":47,"is_primary":true,"text":[{"text":"    before_stop: Option<Arc<Fn() + Send + Sync>>,","highlight_start":29,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3060,"byte_end":3060,"line_start":86,"line_end":86,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"    before_stop: Option<Arc<Fn() + Send + Sync>>,","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":3078,"byte_end":3078,"line_start":86,"line_end":86,"column_start":47,"column_end":47,"is_primary":true,"text":[{"text":"    before_stop: Option<Arc<Fn() + Send + Sync>>,","highlight_start":47,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:86:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    before_stop: Option<Arc<Fn() + Send + Sync>>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    before_stop: Option<Arc<Fn() + Send + Sync>>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    before_stop: Option<Arc<\u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mFn() + Send + Sync>>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":8468,"byte_end":8486,"line_start":252,"line_end":252,"column_start":44,"column_end":62,"is_primary":true,"text":[{"text":"    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {","highlight_start":44,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":8468,"byte_end":8468,"line_start":252,"line_end":252,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":8486,"byte_end":8486,"line_start":252,"line_end":252,"column_start":62,"column_end":62,"is_primary":true,"text":[{"text":"    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {","highlight_start":62,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:252:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn work(&self, after_start: Option<Arc<\u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mFn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":8514,"byte_end":8532,"line_start":252,"line_end":252,"column_start":90,"column_end":108,"is_primary":true,"text":[{"text":"    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {","highlight_start":90,"highlight_end":108}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":8514,"byte_end":8514,"line_start":252,"line_end":252,"column_start":90,"column_end":90,"is_primary":true,"text":[{"text":"    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {","highlight_start":90,"highlight_end":90}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":8532,"byte_end":8532,"line_start":252,"line_end":252,"column_start":108,"column_end":108,"is_primary":true,"text":[{"text":"    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {","highlight_start":108,"highlight_end":108}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:252:90\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<Fn() + Send + Sync>>) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn work(&self, after_start: Option<Arc<Fn() + Send + Sync>>, before_stop: Option<Arc<\u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mFn() + Send + Sync>>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
time:   0.004; rss:  109MB ->  113MB (   +4MB)	type_collecting
time:   0.000; rss:  113MB ->  113MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  113MB ->  113MB (   +0MB)	unsafety_checking
time:   0.013; rss:  113MB ->  134MB (  +21MB)	coherence_checking
time:   0.005; rss:  134MB ->  139MB (   +4MB)	wf_checking
time:   0.001; rss:  139MB ->  139MB (   +0MB)	item_types_checking
time:   0.018; rss:  139MB ->  143MB (   +4MB)	item_bodies_checking
time:   0.041; rss:  109MB ->  143MB (  +34MB)	type_check_crate
time:   0.000; rss:  143MB ->  143MB (   +0MB)	match_checking
time:   0.000; rss:  143MB ->  143MB (   +0MB)	liveness_and_intrinsic_checking
time:   0.001; rss:  143MB ->  143MB (   +0MB)	misc_checking_2
time:   0.016; rss:  143MB ->  151MB (   +7MB)	MIR_borrow_checking
time:   0.000; rss:  151MB ->  151MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  151MB ->  151MB (   +0MB)	layout_testing
time:   0.000; rss:  151MB ->  151MB (   +0MB)	death_checking
time:   0.000; rss:  151MB ->  151MB (   +0MB)	unused_lib_feature_checking
time:   0.002; rss:  151MB ->  151MB (   +1MB)	crate_lints
time:   0.000; rss:  151MB ->  151MB (   +0MB)	module_lints
time:   0.002; rss:  151MB ->  151MB (   +1MB)	lint_checking
time:   0.001; rss:  151MB ->  151MB (   +0MB)	privacy_checking_modules
time:   0.003; rss:  151MB ->  151MB (   +1MB)	misc_checking_3
time:   0.004; rss:  151MB ->  153MB (   +2MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmpclmk9P/target/release/deps/libfutures_cpupool-2c9886f2f6d82670.rmeta","emit":"metadata"}
time:   0.000; rss:  153MB ->  153MB (   +0MB)	monomorphization_collector_root_collections
time:   0.033; rss:  153MB ->  164MB (  +11MB)	monomorphization_collector_graph_walk
time:   0.006; rss:  164MB ->  165MB (   +1MB)	partition_and_assert_distinct_symbols
time:   0.000; rss:  165MB ->  165MB (   +0MB)	find_cgu_reuse
time:   0.161; rss:  165MB ->  201MB (  +36MB)	codegen_to_LLVM_IR
time:   0.203; rss:  153MB ->  201MB (  +48MB)	codegen_crate
time:   0.000; rss:  201MB ->  202MB (   +1MB)	serialize_dep_graph
time:   0.010; rss:  202MB ->  143MB (  -59MB)	free_global_ctxt
time:   0.006; rss:  147MB ->  152MB (   +5MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.11)
time:   0.007; rss:  147MB ->  152MB (   +5MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.8)
time:   0.012; rss:  148MB ->  155MB (   +7MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.12)
time:   0.012; rss:  149MB ->  155MB (   +7MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.9)
time:   0.012; rss:  149MB ->  156MB (   +6MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.14)
time:   0.019; rss:  151MB ->  158MB (   +7MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.15)
time:   0.022; rss:  150MB ->  159MB (   +9MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.13)
time:   0.028; rss:  150MB ->  158MB (   +8MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.6)
time:   0.029; rss:  149MB ->  158MB (   +9MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.4)
time:   0.043; rss:  150MB ->  159MB (   +9MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.1)
time:   0.043; rss:  150MB ->  159MB (   +9MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.10)
time:   0.041; rss:  152MB ->  159MB (   +7MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.5)
time:   0.058; rss:  152MB ->  161MB (   +9MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.7)
time:   0.064; rss:  152MB ->  161MB (   +9MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.0)
time:   0.071; rss:  150MB ->  162MB (  +12MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.3)
time:   0.070; rss:  156MB ->  162MB (   +7MB)	LLVM_lto_optimize(futures_cpupool.f075aa76-cgu.2)
time:   0.360; rss:  172MB ->  164MB (   -8MB)	LLVM_passes(crate)
time:   0.000; rss:  164MB ->  164MB (   +0MB)	join_worker_thread
time:   0.202; rss:  143MB ->  164MB (  +21MB)	finish_ongoing_codegen
time:   0.000; rss:  164MB ->  164MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  164MB ->  164MB (   +0MB)	serialize_work_products
time:   0.000; rss:  164MB ->  164MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.001; rss:  164MB ->  165MB (   +0MB)	link_rlib
{"artifact":"/usr/home/liquid/tmp/.tmpclmk9P/target/release/deps/libfutures_cpupool-2c9886f2f6d82670.rlib","emit":"link"}
time:   0.000; rss:  165MB ->  165MB (   +0MB)	link_binary_remove_temps
time:   0.002; rss:  164MB ->  165MB (   +0MB)	link_binary
time:   0.003; rss:  164MB ->  152MB (  -12MB)	link_crate
time:   0.204; rss:  143MB ->  152MB (   +9MB)	link
{"message":"4 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 4 warnings emitted\u001b[0m\n\n"}
time:   0.522; rss:   46MB ->  150MB ( +103MB)	total
