time:   0.012; rss:   56MB ->   62MB (   +5MB)	parse_crate
time:   0.000; rss:   62MB ->   62MB (   +0MB)	attributes_injection
time:   0.000; rss:   63MB ->   63MB (   +0MB)	plugin_loading
time:   0.000; rss:   63MB ->   63MB (   +0MB)	plugin_registration
time:   0.000; rss:   63MB ->   63MB (   +0MB)	crate_injection
time:   0.008; rss:   63MB ->   93MB (  +31MB)	expand_crate
time:   0.000; rss:   93MB ->   93MB (   +0MB)	check_unused_macros
time:   0.008; rss:   63MB ->   93MB (  +31MB)	macro_expand_crate
time:   0.000; rss:   93MB ->   93MB (   +0MB)	maybe_building_test_harness
time:   0.000; rss:   93MB ->   93MB (   +0MB)	AST_validation
time:   0.000; rss:   93MB ->   93MB (   +0MB)	maybe_create_a_macro_crate
time:   0.000; rss:   93MB ->   93MB (   +0MB)	finalize_imports
time:   0.000; rss:   93MB ->   93MB (   +0MB)	resolve_access_levels
time:   0.000; rss:   93MB ->   93MB (   +0MB)	finalize_macro_resolutions
time:   0.001; rss:   93MB ->   95MB (   +2MB)	late_resolve_crate
time:   0.000; rss:   95MB ->   95MB (   +0MB)	resolve_main
time:   0.000; rss:   95MB ->   95MB (   +0MB)	resolve_check_unused
time:   0.000; rss:   95MB ->   95MB (   +0MB)	resolve_report_errors
time:   0.000; rss:   95MB ->   95MB (   +0MB)	resolve_postprocess
time:   0.002; rss:   93MB ->   95MB (   +2MB)	resolve_crate
time:   0.000; rss:   95MB ->   95MB (   +0MB)	complete_gated_feature_checking
time:   0.011; rss:   63MB ->   95MB (  +33MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmp2FysAd/target/release/deps/vec_map-5264a4f267057a6e.d","emit":"dep-info"}
time:   0.000; rss:   95MB ->   95MB (   +0MB)	prepare_outputs
time:   0.003; rss:   95MB ->   98MB (   +3MB)	hir_lowering
{"message":"unnecessary parentheses around type","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":27322,"byte_end":27323,"line_start":1010,"line_end":1010,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"    fn next(&mut self) -> Option<(&'a V)> { self.iter.next().map(|e| e.1) }","highlight_start":34,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":27328,"byte_end":27329,"line_start":1010,"line_end":1010,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    fn next(&mut self) -> Option<(&'a V)> { self.iter.next().map(|e| e.1) }","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":27322,"byte_end":27323,"line_start":1010,"line_end":1010,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"    fn next(&mut self) -> Option<(&'a V)> { self.iter.next().map(|e| e.1) }","highlight_start":34,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":27328,"byte_end":27329,"line_start":1010,"line_end":1010,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    fn next(&mut self) -> Option<(&'a V)> { self.iter.next().map(|e| e.1) }","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1010:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1010\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn next(&mut self) -> Option<(&'a V)> { self.iter.next().map(|e| e.1) }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1010\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn next(&mut self) -> Option<\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0m&'a V\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m> { self.iter.next().map(|e| e.1) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1010\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn next(&mut self) -> Option<&'a V> { self.iter.next().map(|e| e.1) }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"unnecessary parentheses around type","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":27586,"byte_end":27587,"line_start":1017,"line_end":1017,"column_start":39,"column_end":40,"is_primary":true,"text":[{"text":"    fn next_back(&mut self) -> Option<(&'a V)> { self.iter.next_back().map(|e| e.1) }","highlight_start":39,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":27592,"byte_end":27593,"line_start":1017,"line_end":1017,"column_start":45,"column_end":46,"is_primary":true,"text":[{"text":"    fn next_back(&mut self) -> Option<(&'a V)> { self.iter.next_back().map(|e| e.1) }","highlight_start":45,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":27586,"byte_end":27587,"line_start":1017,"line_end":1017,"column_start":39,"column_end":40,"is_primary":true,"text":[{"text":"    fn next_back(&mut self) -> Option<(&'a V)> { self.iter.next_back().map(|e| e.1) }","highlight_start":39,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":27592,"byte_end":27593,"line_start":1017,"line_end":1017,"column_start":45,"column_end":46,"is_primary":true,"text":[{"text":"    fn next_back(&mut self) -> Option<(&'a V)> { self.iter.next_back().map(|e| e.1) }","highlight_start":45,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1017:39\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1017\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn next_back(&mut self) -> Option<(&'a V)> { self.iter.next_back().map(|e| e.1) }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1017\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn next_back(&mut self) -> Option<\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0m&'a V\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m> { self.iter.next_back().map(|e| e.1) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1017\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn next_back(&mut self) -> Option<&'a V> { self.iter.next_back().map(|e| e.1) }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"unnecessary parentheses around type","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":27742,"byte_end":27743,"line_start":1023,"line_end":1023,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"    fn next(&mut self) -> Option<(&'a mut V)> { self.iter_mut.next().map(|e| e.1) }","highlight_start":34,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":27752,"byte_end":27753,"line_start":1023,"line_end":1023,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"    fn next(&mut self) -> Option<(&'a mut V)> { self.iter_mut.next().map(|e| e.1) }","highlight_start":44,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":27742,"byte_end":27743,"line_start":1023,"line_end":1023,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"    fn next(&mut self) -> Option<(&'a mut V)> { self.iter_mut.next().map(|e| e.1) }","highlight_start":34,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":27752,"byte_end":27753,"line_start":1023,"line_end":1023,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"    fn next(&mut self) -> Option<(&'a mut V)> { self.iter_mut.next().map(|e| e.1) }","highlight_start":44,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1023:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1023\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn next(&mut self) -> Option<(&'a mut V)> { self.iter_mut.next().map(|e| e.1) }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1023\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn next(&mut self) -> Option<\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0m&'a mut V\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m> { self.iter_mut.next().map(|e| e.1) }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1023\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn next(&mut self) -> Option<&'a mut V> { self.iter_mut.next().map(|e| e.1) }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
time:   0.001; rss:   98MB ->   98MB (   +0MB)	early_lint_checks
time:   0.000; rss:   98MB ->   98MB (   +0MB)	drop_ast
time:   0.000; rss:   98MB ->   98MB (   +0MB)	setup_global_ctxt
time:   0.000; rss:  101MB ->  101MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:  101MB ->  101MB (   +0MB)	looking_for_derive_registrar
time:   0.001; rss:  101MB ->  105MB (   +4MB)	misc_checking_1
time:   0.002; rss:  105MB ->  109MB (   +4MB)	type_collecting
time:   0.000; rss:  109MB ->  109MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  109MB ->  109MB (   +0MB)	unsafety_checking
time:   0.010; rss:  109MB ->  131MB (  +21MB)	coherence_checking
time:   0.009; rss:  131MB ->  134MB (   +3MB)	wf_checking
time:   0.003; rss:  134MB ->  134MB (   +1MB)	item_types_checking
time:   0.030; rss:  134MB ->  140MB (   +6MB)	item_bodies_checking
time:   0.054; rss:  105MB ->  140MB (  +35MB)	type_check_crate
time:   0.001; rss:  140MB ->  140MB (   +0MB)	match_checking
time:   0.000; rss:  140MB ->  140MB (   +0MB)	liveness_and_intrinsic_checking
time:   0.001; rss:  140MB ->  140MB (   +0MB)	misc_checking_2
time:   0.030; rss:  140MB ->  147MB (   +7MB)	MIR_borrow_checking
time:   0.000; rss:  147MB ->  147MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  147MB ->  147MB (   +0MB)	layout_testing
time:   0.000; rss:  147MB ->  147MB (   +0MB)	death_checking
time:   0.000; rss:  147MB ->  147MB (   +0MB)	unused_lib_feature_checking
time:   0.002; rss:  147MB ->  148MB (   +0MB)	crate_lints
time:   0.000; rss:  148MB ->  148MB (   +0MB)	module_lints
time:   0.002; rss:  147MB ->  148MB (   +0MB)	lint_checking
time:   0.001; rss:  148MB ->  148MB (   +0MB)	privacy_checking_modules
time:   0.004; rss:  147MB ->  148MB (   +0MB)	misc_checking_3
time:   0.012; rss:  148MB ->  151MB (   +3MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmp2FysAd/target/release/deps/libvec_map-5264a4f267057a6e.rmeta","emit":"metadata"}
time:   0.000; rss:  151MB ->  151MB (   +0MB)	monomorphization_collector_root_collections
time:   0.000; rss:  151MB ->  151MB (   +0MB)	monomorphization_collector_graph_walk
time:   0.000; rss:  151MB ->  151MB (   +0MB)	partition_and_assert_distinct_symbols
time:   0.000; rss:  151MB ->  151MB (   +0MB)	find_cgu_reuse
time:   0.000; rss:  151MB ->  151MB (   +0MB)	codegen_to_LLVM_IR
time:   0.001; rss:  151MB ->  151MB (   +0MB)	codegen_crate
time:   0.000; rss:  151MB ->  151MB (   +0MB)	serialize_dep_graph
time:   0.000; rss:  108MB ->  107MB (   +0MB)	LLVM_lto_optimize(vec_map.ecefc380-cgu.0)
time:   0.004; rss:  151MB ->  106MB (  -45MB)	free_global_ctxt
time:   0.006; rss:  151MB ->  109MB (  -42MB)	LLVM_passes(crate)
time:   0.000; rss:  109MB ->  109MB (   +0MB)	join_worker_thread
time:   0.002; rss:  106MB ->  109MB (   +3MB)	finish_ongoing_codegen
time:   0.000; rss:  109MB ->  109MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  109MB ->  109MB (   +0MB)	serialize_work_products
time:   0.000; rss:  109MB ->  109MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.001; rss:  109MB ->  110MB (   +1MB)	link_rlib
{"artifact":"/usr/home/liquid/tmp/.tmp2FysAd/target/release/deps/libvec_map-5264a4f267057a6e.rlib","emit":"link"}
time:   0.000; rss:  110MB ->  110MB (   +0MB)	link_binary_remove_temps
time:   0.001; rss:  109MB ->  110MB (   +1MB)	link_binary
time:   0.001; rss:  109MB ->  110MB (   +1MB)	link_crate
time:   0.003; rss:  106MB ->  110MB (   +4MB)	link
{"message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}
time:   0.144; rss:   46MB ->  109MB (  +63MB)	total
