time:   0.002; rss:   56MB ->   60MB (   +5MB)	parse_crate
time:   0.000; rss:   60MB ->   60MB (   +0MB)	attributes_injection
time:   0.000; rss:   60MB ->   60MB (   +0MB)	plugin_loading
time:   0.000; rss:   60MB ->   60MB (   +0MB)	plugin_registration
time:   0.000; rss:   63MB ->   63MB (   +0MB)	crate_injection
time:   0.038; rss:   63MB ->  108MB (  +45MB)	expand_crate
time:   0.000; rss:  108MB ->  108MB (   +0MB)	check_unused_macros
time:   0.038; rss:   63MB ->  108MB (  +45MB)	macro_expand_crate
time:   0.000; rss:  108MB ->  108MB (   +0MB)	maybe_building_test_harness
time:   0.001; rss:  108MB ->  108MB (   +0MB)	AST_validation
time:   0.000; rss:  108MB ->  108MB (   +0MB)	maybe_create_a_macro_crate
time:   0.000; rss:  108MB ->  108MB (   +0MB)	finalize_imports
time:   0.000; rss:  108MB ->  108MB (   +0MB)	resolve_access_levels
time:   0.000; rss:  108MB ->  108MB (   +0MB)	finalize_macro_resolutions
time:   0.007; rss:  108MB ->  111MB (   +4MB)	late_resolve_crate
time:   0.000; rss:  111MB ->  111MB (   +0MB)	resolve_main
time:   0.000; rss:  111MB ->  111MB (   +0MB)	resolve_check_unused
time:   0.000; rss:  111MB ->  111MB (   +0MB)	resolve_report_errors
time:   0.000; rss:  111MB ->  111MB (   +0MB)	resolve_postprocess
time:   0.009; rss:  108MB ->  111MB (   +4MB)	resolve_crate
time:   0.000; rss:  111MB ->  111MB (   +0MB)	complete_gated_feature_checking
time:   0.048; rss:   60MB ->  111MB (  +51MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmpnh2JNp/target/release/deps/ignore-db26d8ca34889991.d","emit":"dep-info"}
time:   0.000; rss:  111MB ->  111MB (   +0MB)	prepare_outputs
time:   0.014; rss:  111MB ->  117MB (   +6MB)	hir_lowering
time:   0.002; rss:  117MB ->  117MB (   +0MB)	early_lint_checks
time:   0.001; rss:  117MB ->  117MB (   +0MB)	drop_ast
time:   0.000; rss:  117MB ->  117MB (   +0MB)	setup_global_ctxt
time:   0.000; rss:  117MB ->  117MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:  117MB ->  117MB (   +0MB)	looking_for_derive_registrar
time:   0.004; rss:  117MB ->  121MB (   +4MB)	misc_checking_1
time:   0.006; rss:  121MB ->  129MB (   +9MB)	type_collecting
time:   0.000; rss:  129MB ->  129MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  129MB ->  129MB (   +0MB)	unsafety_checking
time:   0.013; rss:  129MB ->  150MB (  +21MB)	coherence_checking
time:   0.021; rss:  150MB ->  153MB (   +3MB)	wf_checking
time:   0.012; rss:  153MB ->  155MB (   +2MB)	item_types_checking
time:   0.171; rss:  155MB ->  167MB (  +12MB)	item_bodies_checking
time:   0.224; rss:  121MB ->  167MB (  +46MB)	type_check_crate
time:   0.003; rss:  167MB ->  167MB (   +0MB)	match_checking
time:   0.003; rss:  167MB ->  167MB (   +0MB)	liveness_and_intrinsic_checking
time:   0.006; rss:  167MB ->  167MB (   +0MB)	misc_checking_2
time:   0.165; rss:  167MB ->  181MB (  +14MB)	MIR_borrow_checking
time:   0.000; rss:  181MB ->  181MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  181MB ->  181MB (   +0MB)	layout_testing
{"message":"field is never read: `which`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/types.rs","byte_start":3694,"byte_end":3706,"line_start":126,"line_end":126,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        which: usize,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`GlobInner` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[{"file_name":"src/types.rs","byte_start":3351,"byte_end":3356,"line_start":117,"line_end":117,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/types.rs","byte_start":3351,"byte_end":3356,"line_start":117,"line_end":117,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Clone)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/clone.rs","byte_start":4850,"byte_end":4909,"line_start":139,"line_end":141,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pub macro Clone($item:item) {","highlight_start":1,"highlight_end":1},{"text":"    /* compiler built-in */","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/types.rs","byte_start":3358,"byte_end":3363,"line_start":117,"line_end":117,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/types.rs","byte_start":3358,"byte_end":3363,"line_start":117,"line_end":117,"column_start":17,"column_end":22,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Debug)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/fmt/mod.rs","byte_start":22619,"byte_end":22686,"line_start":668,"line_end":670,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    pub macro Debug($item:item) {","highlight_start":5,"highlight_end":1},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":1},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `which`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/types.rs:126:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        which: usize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `GlobInner` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/types.rs:117:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Clone, Debug)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"field is never read: `negated`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/types.rs","byte_start":3770,"byte_end":3783,"line_start":128,"line_end":128,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        negated: bool,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`GlobInner` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[{"file_name":"src/types.rs","byte_start":3351,"byte_end":3356,"line_start":117,"line_end":117,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/types.rs","byte_start":3351,"byte_end":3356,"line_start":117,"line_end":117,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Clone)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/clone.rs","byte_start":4850,"byte_end":4909,"line_start":139,"line_end":141,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pub macro Clone($item:item) {","highlight_start":1,"highlight_end":30},{"text":"    /* compiler built-in */","highlight_start":1,"highlight_end":28},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/types.rs","byte_start":3358,"byte_end":3363,"line_start":117,"line_end":117,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/types.rs","byte_start":3358,"byte_end":3363,"line_start":117,"line_end":117,"column_start":17,"column_end":22,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Debug)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/fmt/mod.rs","byte_start":22619,"byte_end":22686,"line_start":668,"line_end":670,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    pub macro Debug($item:item) {","highlight_start":5,"highlight_end":34},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `negated`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/types.rs:128:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        negated: bool,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `GlobInner` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/types.rs:117:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Clone, Debug)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
time:   0.002; rss:  181MB ->  182MB (   +1MB)	death_checking
time:   0.000; rss:  182MB ->  182MB (   +0MB)	unused_lib_feature_checking
time:   0.010; rss:  182MB ->  183MB (   +1MB)	crate_lints
time:   0.003; rss:  183MB ->  183MB (   +0MB)	module_lints
time:   0.014; rss:  182MB ->  183MB (   +1MB)	lint_checking
time:   0.005; rss:  183MB ->  183MB (   +0MB)	privacy_checking_modules
time:   0.023; rss:  181MB ->  183MB (   +2MB)	misc_checking_3
time:   0.031; rss:  183MB ->  186MB (   +3MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmpnh2JNp/target/release/deps/libignore-db26d8ca34889991.rmeta","emit":"metadata"}
time:   0.000; rss:  186MB ->  186MB (   +0MB)	monomorphization_collector_root_collections
time:   0.189; rss:  186MB ->  209MB (  +22MB)	monomorphization_collector_graph_walk
time:   0.036; rss:  209MB ->  211MB (   +3MB)	partition_and_assert_distinct_symbols
time:   0.000; rss:  212MB ->  212MB (   +0MB)	find_cgu_reuse
time:   0.729; rss:  212MB ->  300MB (  +88MB)	codegen_to_LLVM_IR
time:   0.957; rss:  186MB ->  300MB ( +113MB)	codegen_crate
time:   0.000; rss:  300MB ->  300MB (   +0MB)	serialize_dep_graph
time:   0.077; rss:  300MB ->  225MB (  -75MB)	free_global_ctxt
time:   0.038; rss:  238MB ->  249MB (  +11MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.14)
time:   0.086; rss:  238MB ->  262MB (  +24MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.0)
time:   0.107; rss:  243MB ->  269MB (  +25MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.9)
time:   0.147; rss:  234MB ->  270MB (  +35MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.6)
time:   0.142; rss:  241MB ->  268MB (  +27MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.8)
time:   0.151; rss:  240MB ->  269MB (  +30MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.13)
time:   0.150; rss:  249MB ->  277MB (  +28MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.10)
time:   0.196; rss:  238MB ->  278MB (  +40MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.4)
time:   0.162; rss:  249MB ->  278MB (  +29MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.12)
time:   0.221; rss:  236MB ->  279MB (  +43MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.15)
time:   0.211; rss:  245MB ->  279MB (  +34MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.5)
time:   0.228; rss:  245MB ->  279MB (  +35MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.2)
time:   0.244; rss:  241MB ->  279MB (  +38MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.11)
time:   0.298; rss:  238MB ->  276MB (  +38MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.7)
time:   0.316; rss:  246MB ->  276MB (  +30MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.3)
time:   0.340; rss:  243MB ->  272MB (  +28MB)	LLVM_lto_optimize(ignore.4cc33793-cgu.1)
time:   1.716; rss:  226MB ->  263MB (  +37MB)	LLVM_passes(crate)
time:   0.000; rss:  263MB ->  263MB (   +0MB)	join_worker_thread
time:   0.990; rss:  225MB ->  263MB (  +38MB)	finish_ongoing_codegen
time:   0.000; rss:  263MB ->  263MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  263MB ->  263MB (   +0MB)	serialize_work_products
time:   0.000; rss:  263MB ->  263MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.004; rss:  263MB ->  263MB (   +0MB)	link_rlib
{"artifact":"/usr/home/liquid/tmp/.tmpnh2JNp/target/release/deps/libignore-db26d8ca34889991.rlib","emit":"link"}
time:   0.000; rss:  263MB ->  263MB (   +0MB)	link_binary_remove_temps
time:   0.005; rss:  263MB ->  263MB (   +0MB)	link_binary
time:   0.005; rss:  263MB ->  262MB (   +0MB)	link_crate
time:   0.996; rss:  225MB ->  262MB (  +38MB)	link
{"message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}
time:   2.562; rss:   46MB ->  239MB ( +193MB)	total
