time:   0.000; rss:   59MB ->   59MB (   +0MB)	parse_crate
time:   0.000; rss:   59MB ->   59MB (   +0MB)	attributes_injection
time:   0.000; rss:   59MB ->   62MB (   +3MB)	plugin_loading
time:   0.000; rss:   62MB ->   62MB (   +0MB)	plugin_registration
time:   0.000; rss:   62MB ->   62MB (   +0MB)	crate_injection
time:   0.056; rss:   62MB ->  108MB (  +46MB)	expand_crate
time:   0.000; rss:  108MB ->  108MB (   +0MB)	check_unused_macros
time:   0.056; rss:   62MB ->  108MB (  +46MB)	macro_expand_crate
time:   0.000; rss:  108MB ->  108MB (   +0MB)	maybe_building_test_harness
time:   0.001; rss:  108MB ->  108MB (   +0MB)	AST_validation
time:   0.000; rss:  108MB ->  108MB (   +0MB)	maybe_create_a_macro_crate
time:   0.000; rss:  108MB ->  108MB (   +0MB)	finalize_imports
time:   0.000; rss:  108MB ->  108MB (   +0MB)	resolve_access_levels
time:   0.001; rss:  108MB ->  109MB (   +1MB)	finalize_macro_resolutions
time:   0.012; rss:  109MB ->  113MB (   +4MB)	late_resolve_crate
time:   0.000; rss:  113MB ->  113MB (   +0MB)	resolve_main
time:   0.001; rss:  113MB ->  113MB (   +0MB)	resolve_check_unused
time:   0.000; rss:  113MB ->  113MB (   +0MB)	resolve_report_errors
time:   0.000; rss:  113MB ->  113MB (   +0MB)	resolve_postprocess
time:   0.015; rss:  108MB ->  113MB (   +5MB)	resolve_crate
time:   0.001; rss:  113MB ->  113MB (   +0MB)	complete_gated_feature_checking
time:   0.072; rss:   62MB ->  113MB (  +51MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmppqItNE/target/release/deps/png-d875060acafa3b20.d","emit":"dep-info"}
time:   0.000; rss:  113MB ->  113MB (   +0MB)	prepare_outputs
time:   0.025; rss:  113MB ->  121MB (   +8MB)	hir_lowering
time:   0.004; rss:  121MB ->  121MB (   +0MB)	early_lint_checks
time:   0.002; rss:  121MB ->  121MB (   +0MB)	drop_ast
time:   0.000; rss:  120MB ->  120MB (   +0MB)	setup_global_ctxt
time:   0.000; rss:  120MB ->  120MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:  120MB ->  120MB (   +0MB)	looking_for_derive_registrar
time:   0.008; rss:  120MB ->  124MB (   +4MB)	misc_checking_1
time:   0.015; rss:  124MB ->  141MB (  +17MB)	type_collecting
time:   0.000; rss:  141MB ->  141MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  141MB ->  141MB (   +0MB)	unsafety_checking
time:   0.014; rss:  141MB ->  159MB (  +18MB)	coherence_checking
time:   0.031; rss:  159MB ->  161MB (   +2MB)	wf_checking
time:   0.013; rss:  161MB ->  164MB (   +3MB)	item_types_checking
time:   0.288; rss:  164MB ->  182MB (  +18MB)	item_bodies_checking
time:   0.362; rss:  124MB ->  182MB (  +58MB)	type_check_crate
time:   0.009; rss:  182MB ->  182MB (   +0MB)	match_checking
time:   0.005; rss:  182MB ->  182MB (   +0MB)	liveness_and_intrinsic_checking
time:   0.014; rss:  182MB ->  182MB (   +0MB)	misc_checking_2
time:   0.214; rss:  182MB ->  195MB (  +12MB)	MIR_borrow_checking
time:   0.001; rss:  195MB ->  195MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  195MB ->  195MB (   +0MB)	layout_testing
{"message":"field is never read: `recover`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/decoder/stream.rs","byte_start":4301,"byte_end":4315,"line_start":123,"line_end":123,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        recover: usize,","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`FormatErrorInner` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[{"file_name":"src/decoder/stream.rs","byte_start":4151,"byte_end":4156,"line_start":118,"line_end":118,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"#[derive(Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/decoder/stream.rs","byte_start":4151,"byte_end":4156,"line_start":118,"line_end":118,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"#[derive(Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Debug)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/fmt/mod.rs","byte_start":22619,"byte_end":22686,"line_start":668,"line_end":670,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    pub macro Debug($item:item) {","highlight_start":5,"highlight_end":1},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":1},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `recover`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decoder/stream.rs:123:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        recover: usize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `FormatErrorInner` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decoder/stream.rs:118:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Debug)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"field is never read: `chunk`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/decoder/stream.rs","byte_start":4433,"byte_end":4449,"line_start":128,"line_end":128,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        chunk: ChunkType,","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`FormatErrorInner` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[{"file_name":"src/decoder/stream.rs","byte_start":4151,"byte_end":4156,"line_start":118,"line_end":118,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"#[derive(Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/decoder/stream.rs","byte_start":4151,"byte_end":4156,"line_start":118,"line_end":118,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"#[derive(Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Debug)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/fmt/mod.rs","byte_start":22619,"byte_end":22686,"line_start":668,"line_end":670,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    pub macro Debug($item:item) {","highlight_start":5,"highlight_end":34},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `chunk`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decoder/stream.rs:128:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        chunk: ChunkType,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `FormatErrorInner` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decoder/stream.rs:118:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Debug)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"variant is never constructed: `OutsidePlteIdat`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/decoder/stream.rs","byte_start":5300,"byte_end":5348,"line_start":157,"line_end":159,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    OutsidePlteIdat {","highlight_start":5,"highlight_end":22},{"text":"        kind: ChunkType,","highlight_start":1,"highlight_end":25},{"text":"    },","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`FormatErrorInner` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[{"file_name":"src/decoder/stream.rs","byte_start":4151,"byte_end":4156,"line_start":118,"line_end":118,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"#[derive(Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/decoder/stream.rs","byte_start":4151,"byte_end":4156,"line_start":118,"line_end":118,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"#[derive(Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Debug)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/fmt/mod.rs","byte_start":22619,"byte_end":22686,"line_start":668,"line_end":670,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    pub macro Debug($item:item) {","highlight_start":5,"highlight_end":34},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant is never constructed: `OutsidePlteIdat`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decoder/stream.rs:157:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    OutsidePlteIdat {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        kind: ChunkType,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `FormatErrorInner` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decoder/stream.rs:118:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Debug)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"variant is never constructed: `DuplicateChunk`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/decoder/stream.rs","byte_start":5437,"byte_end":5484,"line_start":162,"line_end":164,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    DuplicateChunk {","highlight_start":5,"highlight_end":21},{"text":"        kind: ChunkType,","highlight_start":1,"highlight_end":25},{"text":"    },","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`FormatErrorInner` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[{"file_name":"src/decoder/stream.rs","byte_start":4151,"byte_end":4156,"line_start":118,"line_end":118,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"#[derive(Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/decoder/stream.rs","byte_start":4151,"byte_end":4156,"line_start":118,"line_end":118,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"#[derive(Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Debug)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/fmt/mod.rs","byte_start":22619,"byte_end":22686,"line_start":668,"line_end":670,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    pub macro Debug($item:item) {","highlight_start":5,"highlight_end":34},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant is never constructed: `DuplicateChunk`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decoder/stream.rs:162:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DuplicateChunk {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        kind: ChunkType,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `FormatErrorInner` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decoder/stream.rs:118:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Debug)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"field is never read: `err`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/decoder/stream.rs","byte_start":6759,"byte_end":6797,"line_start":202,"line_end":202,"column_start":9,"column_end":47,"is_primary":true,"text":[{"text":"        err: miniz_oxide::inflate::TINFLStatus,","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`FormatErrorInner` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[{"file_name":"src/decoder/stream.rs","byte_start":4151,"byte_end":4156,"line_start":118,"line_end":118,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"#[derive(Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/decoder/stream.rs","byte_start":4151,"byte_end":4156,"line_start":118,"line_end":118,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"#[derive(Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Debug)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/fmt/mod.rs","byte_start":22619,"byte_end":22686,"line_start":668,"line_end":670,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    pub macro Debug($item:item) {","highlight_start":5,"highlight_end":34},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `err`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decoder/stream.rs:202:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        err: miniz_oxide::inflate::TINFLStatus,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `FormatErrorInner` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decoder/stream.rs:118:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Debug)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
time:   0.004; rss:  195MB ->  195MB (   +0MB)	death_checking
time:   0.000; rss:  195MB ->  195MB (   +0MB)	unused_lib_feature_checking
time:   0.006; rss:  195MB ->  195MB (   +0MB)	crate_lints
time:   0.006; rss:  195MB ->  196MB (   +1MB)	module_lints
time:   0.012; rss:  195MB ->  196MB (   +1MB)	lint_checking
time:   0.008; rss:  196MB ->  196MB (   +0MB)	privacy_checking_modules
time:   0.029; rss:  195MB ->  196MB (   +1MB)	misc_checking_3
time:   0.053; rss:  196MB ->  200MB (   +4MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmppqItNE/target/release/deps/libpng-d875060acafa3b20.rmeta","emit":"metadata"}
time:   0.000; rss:  200MB ->  200MB (   +0MB)	monomorphization_collector_root_collections
time:   0.097; rss:  200MB ->  206MB (   +7MB)	monomorphization_collector_graph_walk
time:   0.010; rss:  206MB ->  207MB (   +1MB)	partition_and_assert_distinct_symbols
time:   0.000; rss:  208MB ->  208MB (   +0MB)	find_cgu_reuse
time:   0.243; rss:  208MB ->  254MB (  +46MB)	codegen_to_LLVM_IR
time:   0.352; rss:  200MB ->  254MB (  +54MB)	codegen_crate
time:   0.000; rss:  254MB ->  254MB (   +0MB)	serialize_dep_graph
time:   0.061; rss:  254MB ->  185MB (  -68MB)	free_global_ctxt
time:   0.027; rss:  191MB ->  197MB (   +6MB)	LLVM_lto_optimize(png.3452ddf4-cgu.13)
time:   0.029; rss:  191MB ->  199MB (   +8MB)	LLVM_lto_optimize(png.3452ddf4-cgu.4)
time:   0.039; rss:  191MB ->  201MB (   +9MB)	LLVM_lto_optimize(png.3452ddf4-cgu.8)
time:   0.035; rss:  192MB ->  201MB (   +9MB)	LLVM_lto_optimize(png.3452ddf4-cgu.11)
time:   0.046; rss:  193MB ->  203MB (  +11MB)	LLVM_lto_optimize(png.3452ddf4-cgu.14)
time:   0.060; rss:  194MB ->  207MB (  +14MB)	LLVM_lto_optimize(png.3452ddf4-cgu.7)
time:   0.066; rss:  196MB ->  213MB (  +17MB)	LLVM_lto_optimize(png.3452ddf4-cgu.10)
time:   0.080; rss:  192MB ->  213MB (  +22MB)	LLVM_lto_optimize(png.3452ddf4-cgu.6)
time:   0.076; rss:  193MB ->  213MB (  +20MB)	LLVM_lto_optimize(png.3452ddf4-cgu.9)
time:   0.081; rss:  192MB ->  214MB (  +21MB)	LLVM_lto_optimize(png.3452ddf4-cgu.1)
time:   0.074; rss:  196MB ->  214MB (  +18MB)	LLVM_lto_optimize(png.3452ddf4-cgu.5)
time:   0.081; rss:  194MB ->  214MB (  +20MB)	LLVM_lto_optimize(png.3452ddf4-cgu.2)
time:   0.099; rss:  193MB ->  216MB (  +23MB)	LLVM_lto_optimize(png.3452ddf4-cgu.15)
time:   0.110; rss:  196MB ->  218MB (  +22MB)	LLVM_lto_optimize(png.3452ddf4-cgu.3)
time:   0.180; rss:  194MB ->  220MB (  +27MB)	LLVM_lto_optimize(png.3452ddf4-cgu.12)
time:   0.238; rss:  201MB ->  222MB (  +21MB)	LLVM_lto_optimize(png.3452ddf4-cgu.0)
time:   0.917; rss:  217MB ->  218MB (   +2MB)	LLVM_passes(crate)
time:   0.000; rss:  215MB ->  215MB (   +0MB)	join_worker_thread
time:   0.647; rss:  185MB ->  215MB (  +29MB)	finish_ongoing_codegen
time:   0.000; rss:  215MB ->  215MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  215MB ->  215MB (   +0MB)	serialize_work_products
time:   0.000; rss:  215MB ->  215MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.005; rss:  215MB ->  215MB (   +1MB)	link_rlib
{"artifact":"/usr/home/liquid/tmp/.tmppqItNE/target/release/deps/libpng-d875060acafa3b20.rlib","emit":"link"}
time:   0.000; rss:  215MB ->  215MB (   +0MB)	link_binary_remove_temps
time:   0.006; rss:  215MB ->  215MB (   +1MB)	link_binary
time:   0.006; rss:  215MB ->  215MB (   +1MB)	link_crate
time:   0.653; rss:  185MB ->  215MB (  +30MB)	link
{"message":"5 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 5 warnings emitted\u001b[0m\n\n"}
time:   1.861; rss:   46MB ->  206MB ( +160MB)	total
