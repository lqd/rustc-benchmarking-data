time:   0.003; rss:   60MB ->   63MB (   +3MB)	parse_crate
time:   0.000; rss:   63MB ->   63MB (   +0MB)	attributes_injection
time:   0.000; rss:   63MB ->   65MB (   +1MB)	plugin_loading
time:   0.000; rss:   65MB ->   65MB (   +0MB)	plugin_registration
time:   0.000; rss:   65MB ->   65MB (   +0MB)	crate_injection
time:   0.195; rss:   65MB ->  126MB (  +61MB)	expand_crate
time:   0.000; rss:  126MB ->  126MB (   +0MB)	check_unused_macros
time:   0.195; rss:   65MB ->  126MB (  +61MB)	macro_expand_crate
time:   0.000; rss:  126MB ->  126MB (   +0MB)	maybe_building_test_harness
time:   0.004; rss:  126MB ->  126MB (   +0MB)	AST_validation
time:   0.000; rss:  126MB ->  126MB (   +0MB)	maybe_create_a_macro_crate
time:   0.001; rss:  126MB ->  126MB (   +0MB)	finalize_imports
time:   0.000; rss:  126MB ->  126MB (   +0MB)	resolve_access_levels
time:   0.003; rss:  126MB ->  126MB (   +0MB)	finalize_macro_resolutions
time:   0.034; rss:  126MB ->  132MB (   +6MB)	late_resolve_crate
time:   0.000; rss:  132MB ->  132MB (   +0MB)	resolve_main
time:   0.003; rss:  132MB ->  132MB (   +0MB)	resolve_check_unused
time:   0.000; rss:  132MB ->  132MB (   +0MB)	resolve_report_errors
time:   0.002; rss:  132MB ->  132MB (   +0MB)	resolve_postprocess
time:   0.043; rss:  126MB ->  132MB (   +6MB)	resolve_crate
time:   0.003; rss:  132MB ->  132MB (   +0MB)	complete_gated_feature_checking
time:   0.246; rss:   65MB ->  132MB (  +67MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmpVUkQ6L/target/release/deps/regalloc-7d4347a8ebb0086d.d","emit":"dep-info"}
time:   0.000; rss:  132MB ->  132MB (   +0MB)	prepare_outputs
time:   0.068; rss:  132MB ->  149MB (  +17MB)	hir_lowering
time:   0.010; rss:  149MB ->  149MB (   +0MB)	early_lint_checks
time:   0.006; rss:  149MB ->  149MB (   +0MB)	drop_ast
time:   0.000; rss:  145MB ->  145MB (   +0MB)	setup_global_ctxt
time:   0.000; rss:  149MB ->  149MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:  149MB ->  149MB (   +0MB)	looking_for_derive_registrar
time:   0.017; rss:  149MB ->  149MB (   +0MB)	misc_checking_1
time:   0.030; rss:  149MB ->  166MB (  +17MB)	type_collecting
time:   0.001; rss:  166MB ->  166MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  166MB ->  166MB (   +0MB)	unsafety_checking
time:   0.013; rss:  166MB ->  182MB (  +16MB)	coherence_checking
time:   0.074; rss:  182MB ->  185MB (   +3MB)	wf_checking
time:   0.011; rss:  185MB ->  186MB (   +0MB)	item_types_checking
time:   0.820; rss:  186MB ->  218MB (  +32MB)	item_bodies_checking
time:   0.950; rss:  149MB ->  218MB (  +69MB)	type_check_crate
time:   0.015; rss:  218MB ->  218MB (   +0MB)	match_checking
time:   0.014; rss:  218MB ->  218MB (   +0MB)	liveness_and_intrinsic_checking
time:   0.030; rss:  218MB ->  218MB (   +0MB)	misc_checking_2
time:   0.718; rss:  218MB ->  246MB (  +28MB)	MIR_borrow_checking
time:   0.003; rss:  246MB ->  246MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  246MB ->  246MB (   +0MB)	layout_testing
{"message":"field is never read: `vreg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/snapshot.rs","byte_start":796,"byte_end":820,"line_start":20,"line_end":20,"column_start":13,"column_end":37,"is_primary":true,"text":[{"text":"    Spill { vreg: Option<VirtualReg> },","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`IRInstKind` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[{"file_name":"src/snapshot.rs","byte_start":681,"byte_end":686,"line_start":17,"line_end":17,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/snapshot.rs","byte_start":681,"byte_end":686,"line_start":17,"line_end":17,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Clone)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/clone.rs","byte_start":4850,"byte_end":4909,"line_start":139,"line_end":141,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pub macro Clone($item:item) {","highlight_start":1,"highlight_end":1},{"text":"    /* compiler built-in */","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/snapshot.rs","byte_start":688,"byte_end":693,"line_start":17,"line_end":17,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/snapshot.rs","byte_start":688,"byte_end":693,"line_start":17,"line_end":17,"column_start":17,"column_end":22,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Debug)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/fmt/mod.rs","byte_start":22619,"byte_end":22686,"line_start":668,"line_end":670,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    pub macro Debug($item:item) {","highlight_start":5,"highlight_end":1},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":1},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `vreg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/snapshot.rs:20:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Spill { vreg: Option<VirtualReg> },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `IRInstKind` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/snapshot.rs:17:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Clone, Debug)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"field is never read: `vreg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/snapshot.rs","byte_start":837,"byte_end":861,"line_start":21,"line_end":21,"column_start":14,"column_end":38,"is_primary":true,"text":[{"text":"    Reload { vreg: Option<VirtualReg> },","highlight_start":14,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`IRInstKind` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[{"file_name":"src/snapshot.rs","byte_start":681,"byte_end":686,"line_start":17,"line_end":17,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/snapshot.rs","byte_start":681,"byte_end":686,"line_start":17,"line_end":17,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Clone)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/clone.rs","byte_start":4850,"byte_end":4909,"line_start":139,"line_end":141,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pub macro Clone($item:item) {","highlight_start":1,"highlight_end":30},{"text":"    /* compiler built-in */","highlight_start":1,"highlight_end":28},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/snapshot.rs","byte_start":688,"byte_end":693,"line_start":17,"line_end":17,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/snapshot.rs","byte_start":688,"byte_end":693,"line_start":17,"line_end":17,"column_start":17,"column_end":22,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Debug)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/fmt/mod.rs","byte_start":22619,"byte_end":22686,"line_start":668,"line_end":670,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    pub macro Debug($item:item) {","highlight_start":5,"highlight_end":34},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `vreg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/snapshot.rs:21:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Reload { vreg: Option<VirtualReg> },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `IRInstKind` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/snapshot.rs:17:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Clone, Debug)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"field is never read: `vreg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/snapshot.rs","byte_start":876,"byte_end":892,"line_start":22,"line_end":22,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    Move { vreg: VirtualReg },","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`IRInstKind` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[{"file_name":"src/snapshot.rs","byte_start":681,"byte_end":686,"line_start":17,"line_end":17,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/snapshot.rs","byte_start":681,"byte_end":686,"line_start":17,"line_end":17,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Clone)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/clone.rs","byte_start":4850,"byte_end":4909,"line_start":139,"line_end":141,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pub macro Clone($item:item) {","highlight_start":1,"highlight_end":30},{"text":"    /* compiler built-in */","highlight_start":1,"highlight_end":28},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/snapshot.rs","byte_start":688,"byte_end":693,"line_start":17,"line_end":17,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/snapshot.rs","byte_start":688,"byte_end":693,"line_start":17,"line_end":17,"column_start":17,"column_end":22,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug)]","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Debug)]","def_site_span":{"file_name":"/usr/home/liquid/rust/worktree-benchmarking/library/core/src/fmt/mod.rs","byte_start":22619,"byte_end":22686,"line_start":668,"line_end":670,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    pub macro Debug($item:item) {","highlight_start":5,"highlight_end":34},{"text":"        /* compiler built-in */","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `vreg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/snapshot.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Move { vreg: VirtualReg },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `IRInstKind` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/snapshot.rs:17:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Clone, Debug)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
time:   0.011; rss:  247MB ->  247MB (   +0MB)	death_checking
time:   0.000; rss:  247MB ->  247MB (   +0MB)	unused_lib_feature_checking
time:   0.019; rss:  247MB ->  249MB (   +2MB)	crate_lints
time:   0.019; rss:  249MB ->  249MB (   +0MB)	module_lints
time:   0.038; rss:  247MB ->  249MB (   +2MB)	lint_checking
time:   0.029; rss:  249MB ->  249MB (   +0MB)	privacy_checking_modules
time:   0.096; rss:  246MB ->  249MB (   +3MB)	misc_checking_3
time:   0.209; rss:  249MB ->  260MB (  +10MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmpVUkQ6L/target/release/deps/libregalloc-7d4347a8ebb0086d.rmeta","emit":"metadata"}
time:   0.001; rss:  260MB ->  260MB (   +0MB)	monomorphization_collector_root_collections
time:   0.354; rss:  260MB ->  282MB (  +22MB)	monomorphization_collector_graph_walk
time:   0.067; rss:  282MB ->  287MB (   +5MB)	partition_and_assert_distinct_symbols
time:   0.000; rss:  287MB ->  287MB (   +0MB)	find_cgu_reuse
time:   1.440; rss:  287MB ->  455MB ( +168MB)	codegen_to_LLVM_IR
time:   1.865; rss:  260MB ->  455MB ( +195MB)	codegen_crate
time:   0.000; rss:  455MB ->  455MB (   +0MB)	serialize_dep_graph
time:   0.095; rss:  455MB ->  383MB (  -72MB)	free_global_ctxt
time:   0.201; rss:  413MB ->  455MB (  +42MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.1)
time:   0.281; rss:  415MB ->  467MB (  +52MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.12)
time:   0.379; rss:  428MB ->  494MB (  +66MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.2)
time:   0.422; rss:  423MB ->  499MB (  +76MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.13)
time:   0.458; rss:  424MB ->  505MB (  +81MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.7)
time:   0.516; rss:  425MB ->  510MB (  +85MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.9)
time:   0.536; rss:  432MB ->  513MB (  +81MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.11)
time:   0.557; rss:  429MB ->  513MB (  +84MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.4)
time:   0.611; rss:  432MB ->  515MB (  +84MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.10)
time:   0.639; rss:  430MB ->  516MB (  +86MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.6)
time:   0.678; rss:  432MB ->  518MB (  +86MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.14)
time:   0.704; rss:  428MB ->  518MB (  +90MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.5)
time:   0.832; rss:  433MB ->  520MB (  +87MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.8)
time:   0.942; rss:  424MB ->  520MB (  +97MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.15)
time:   1.073; rss:  418MB ->  520MB ( +102MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.3)
time:   1.540; rss:  426MB ->  514MB (  +87MB)	LLVM_lto_optimize(regalloc.8380fb1f-cgu.0)
time:   5.182; rss:  303MB ->  505MB ( +202MB)	LLVM_passes(crate)
time:   0.000; rss:  505MB ->  505MB (   +0MB)	join_worker_thread
time:   3.760; rss:  383MB ->  505MB ( +122MB)	finish_ongoing_codegen
time:   0.000; rss:  505MB ->  505MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  505MB ->  505MB (   +0MB)	serialize_work_products
time:   0.000; rss:  505MB ->  505MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.013; rss:  505MB ->  506MB (   +0MB)	link_rlib
{"artifact":"/usr/home/liquid/tmp/.tmpVUkQ6L/target/release/deps/libregalloc-7d4347a8ebb0086d.rlib","emit":"link"}
time:   0.001; rss:  506MB ->  506MB (   +0MB)	link_binary_remove_temps
time:   0.015; rss:  505MB ->  506MB (   +0MB)	link_binary
time:   0.015; rss:  505MB ->  502MB (   -3MB)	link_crate
time:   3.775; rss:  383MB ->  502MB ( +119MB)	link
{"message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}
time:   8.114; rss:   46MB ->  501MB ( +454MB)	total
