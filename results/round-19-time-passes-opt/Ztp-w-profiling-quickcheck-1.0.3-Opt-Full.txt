time:   0.001; rss:   62MB ->   62MB (   +0MB)	parse_crate
time:   0.000; rss:   62MB ->   62MB (   +0MB)	attributes_injection
time:   0.000; rss:   62MB ->   62MB (   +0MB)	plugin_loading
time:   0.000; rss:   62MB ->   62MB (   +0MB)	plugin_registration
time:   0.000; rss:   65MB ->   65MB (   +0MB)	crate_injection
time:   0.053; rss:   65MB ->  107MB (  +42MB)	expand_crate
time:   0.000; rss:  107MB ->  107MB (   +0MB)	check_unused_macros
time:   0.053; rss:   65MB ->  107MB (  +42MB)	macro_expand_crate
time:   0.000; rss:  107MB ->  107MB (   +0MB)	maybe_building_test_harness
time:   0.000; rss:  107MB ->  107MB (   +0MB)	AST_validation
time:   0.000; rss:  107MB ->  107MB (   +0MB)	maybe_create_a_macro_crate
time:   0.000; rss:  107MB ->  107MB (   +0MB)	finalize_imports
time:   0.000; rss:  107MB ->  107MB (   +0MB)	resolve_access_levels
time:   0.000; rss:  107MB ->  107MB (   +0MB)	finalize_macro_resolutions
time:   0.006; rss:  107MB ->  110MB (   +3MB)	late_resolve_crate
time:   0.000; rss:  110MB ->  110MB (   +0MB)	resolve_main
time:   0.000; rss:  110MB ->  110MB (   +0MB)	resolve_check_unused
time:   0.000; rss:  110MB ->  110MB (   +0MB)	resolve_report_errors
time:   0.000; rss:  110MB ->  110MB (   +0MB)	resolve_postprocess
time:   0.007; rss:  107MB ->  110MB (   +3MB)	resolve_crate
time:   0.000; rss:  110MB ->  110MB (   +0MB)	complete_gated_feature_checking
time:   0.061; rss:   62MB ->  110MB (  +48MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmp8lNdjl/target/release/deps/quickcheck-5145cebee622ad7e.d","emit":"dep-info"}
time:   0.000; rss:  110MB ->  110MB (   +0MB)	prepare_outputs
time:   0.011; rss:  110MB ->  114MB (   +4MB)	hir_lowering
time:   0.001; rss:  114MB ->  114MB (   +0MB)	early_lint_checks
time:   0.001; rss:  114MB ->  114MB (   +0MB)	drop_ast
time:   0.000; rss:  113MB ->  113MB (   +0MB)	setup_global_ctxt
time:   0.000; rss:  117MB ->  117MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:  117MB ->  117MB (   +0MB)	looking_for_derive_registrar
time:   0.003; rss:  117MB ->  117MB (   +0MB)	misc_checking_1
time:   0.006; rss:  117MB ->  125MB (   +8MB)	type_collecting
time:   0.000; rss:  125MB ->  125MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  125MB ->  125MB (   +0MB)	unsafety_checking
time:   0.008; rss:  125MB ->  144MB (  +19MB)	coherence_checking
time:   0.027; rss:  144MB ->  150MB (   +6MB)	wf_checking
time:   0.004; rss:  150MB ->  150MB (   +0MB)	item_types_checking
time:   0.221; rss:  150MB ->  172MB (  +23MB)	item_bodies_checking
time:   0.266; rss:  117MB ->  172MB (  +55MB)	type_check_crate
time:   0.003; rss:  172MB ->  172MB (   +0MB)	match_checking
time:   0.003; rss:  172MB ->  173MB (   +1MB)	liveness_and_intrinsic_checking
time:   0.006; rss:  172MB ->  173MB (   +1MB)	misc_checking_2
time:   0.214; rss:  173MB ->  185MB (  +12MB)	MIR_borrow_checking
time:   0.000; rss:  185MB ->  185MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  185MB ->  185MB (   +0MB)	layout_testing
time:   0.001; rss:  185MB ->  185MB (   +0MB)	death_checking
time:   0.000; rss:  185MB ->  185MB (   +0MB)	unused_lib_feature_checking
{"message":"panic message is not a string literal","code":{"code":"non_fmt_panics","explanation":null},"level":"warning","spans":[{"file_name":"src/tester.rs","byte_start":5252,"byte_end":5271,"line_start":165,"line_end":165,"column_start":35,"column_end":54,"is_primary":true,"text":[{"text":"            Err(result) => panic!(result.failed_msg()),","highlight_start":35,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_fmt_panics)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this usage of panic!() is deprecated; it will be a hard error in Rust 2021","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"add a \"{}\" format string to Display the message","code":null,"level":"help","spans":[{"file_name":"src/tester.rs","byte_start":5252,"byte_end":5252,"line_start":165,"line_end":165,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"            Err(result) => panic!(result.failed_msg()),","highlight_start":35,"highlight_end":35}],"label":null,"suggested_replacement":"\"{}\", ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: panic message is not a string literal\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/tester.rs:165:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            Err(result) => panic!(result.failed_msg()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_fmt_panics)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add a \"{}\" format string to Display the message\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            Err(result) => panic!(\u001b[0m\u001b[0m\u001b[38;5;10m\"{}\", \u001b[0m\u001b[0mresult.failed_msg()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\n"}
time:   0.003; rss:  185MB ->  185MB (   +0MB)	crate_lints
time:   0.003; rss:  185MB ->  185MB (   +0MB)	module_lints
time:   0.006; rss:  185MB ->  185MB (   +0MB)	lint_checking
time:   0.005; rss:  185MB ->  185MB (   +0MB)	privacy_checking_modules
time:   0.014; rss:  185MB ->  185MB (   +0MB)	misc_checking_3
time:   0.042; rss:  185MB ->  190MB (   +5MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmp8lNdjl/target/release/deps/libquickcheck-5145cebee622ad7e.rmeta","emit":"metadata"}
time:   0.000; rss:  190MB ->  190MB (   +0MB)	monomorphization_collector_root_collections
time:   0.117; rss:  190MB ->  203MB (  +12MB)	monomorphization_collector_graph_walk
time:   0.019; rss:  203MB ->  205MB (   +2MB)	partition_and_assert_distinct_symbols
time:   0.000; rss:  205MB ->  205MB (   +0MB)	find_cgu_reuse
time:   0.374; rss:  205MB ->  265MB (  +60MB)	codegen_to_LLVM_IR
time:   0.514; rss:  190MB ->  265MB (  +75MB)	codegen_crate
time:   0.000; rss:  265MB ->  265MB (   +0MB)	serialize_dep_graph
time:   0.049; rss:  265MB ->  188MB (  -77MB)	free_global_ctxt
time:   0.009; rss:  189MB ->  195MB (   +6MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.11)
time:   0.020; rss:  192MB ->  200MB (   +8MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.5)
time:   0.028; rss:  191MB ->  201MB (  +10MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.12)
time:   0.033; rss:  191MB ->  204MB (  +13MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.8)
time:   0.038; rss:  192MB ->  205MB (  +14MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.3)
time:   0.039; rss:  200MB ->  209MB (  +10MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.9)
time:   0.062; rss:  195MB ->  211MB (  +16MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.1)
time:   0.067; rss:  198MB ->  212MB (  +15MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.13)
time:   0.076; rss:  200MB ->  214MB (  +14MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.7)
time:   0.092; rss:  196MB ->  214MB (  +18MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.4)
time:   0.092; rss:  205MB ->  217MB (  +12MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.14)
time:   0.104; rss:  205MB ->  217MB (  +12MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.10)
time:   0.132; rss:  201MB ->  218MB (  +17MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.6)
time:   0.140; rss:  205MB ->  219MB (  +13MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.15)
time:   0.171; rss:  206MB ->  219MB (  +13MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.2)
time:   0.469; rss:  201MB ->  222MB (  +22MB)	LLVM_lto_optimize(quickcheck.5f42be33-cgu.0)
time:   1.668; rss:  220MB ->  223MB (   +2MB)	LLVM_passes(crate)
time:   0.000; rss:  223MB ->  223MB (   +0MB)	join_worker_thread
time:   1.323; rss:  188MB ->  223MB (  +35MB)	finish_ongoing_codegen
time:   0.000; rss:  223MB ->  223MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  223MB ->  223MB (   +0MB)	serialize_work_products
time:   0.000; rss:  223MB ->  223MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.003; rss:  223MB ->  223MB (   +0MB)	link_rlib
{"artifact":"/usr/home/liquid/tmp/.tmp8lNdjl/target/release/deps/libquickcheck-5145cebee622ad7e.rlib","emit":"link"}
time:   0.000; rss:  223MB ->  223MB (   +0MB)	link_binary_remove_temps
time:   0.004; rss:  223MB ->  223MB (   +0MB)	link_binary
time:   0.004; rss:  223MB ->  223MB (   +0MB)	link_crate
time:   1.327; rss:  188MB ->  223MB (  +35MB)	link
{"message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
time:   2.519; rss:   46MB ->  218MB ( +172MB)	total
