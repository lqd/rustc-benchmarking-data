time:   0.001; rss:   59MB ->   59MB (   +0MB)	parse_crate
time:   0.000; rss:   59MB ->   59MB (   +0MB)	attributes_injection
time:   0.000; rss:   61MB ->   61MB (   +0MB)	plugin_loading
time:   0.000; rss:   61MB ->   61MB (   +0MB)	plugin_registration
time:   0.000; rss:   61MB ->   61MB (   +0MB)	crate_injection
time:   0.168; rss:   61MB ->  102MB (  +40MB)	expand_crate
time:   0.000; rss:  102MB ->  102MB (   +0MB)	check_unused_macros
time:   0.168; rss:   61MB ->  102MB (  +40MB)	macro_expand_crate
time:   0.000; rss:  102MB ->  102MB (   +0MB)	maybe_building_test_harness
time:   0.000; rss:  102MB ->  102MB (   +0MB)	AST_validation
time:   0.000; rss:  102MB ->  102MB (   +0MB)	maybe_create_a_macro_crate
time:   0.000; rss:  102MB ->  102MB (   +0MB)	finalize_imports
time:   0.000; rss:  102MB ->  102MB (   +0MB)	resolve_access_levels
time:   0.001; rss:  102MB ->  102MB (   +0MB)	finalize_macro_resolutions
time:   0.002; rss:  102MB ->  103MB (   +1MB)	late_resolve_crate
time:   0.000; rss:  103MB ->  103MB (   +0MB)	resolve_main
time:   0.000; rss:  103MB ->  103MB (   +0MB)	resolve_check_unused
time:   0.000; rss:  103MB ->  103MB (   +0MB)	resolve_report_errors
time:   0.000; rss:  103MB ->  103MB (   +0MB)	resolve_postprocess
time:   0.003; rss:  102MB ->  103MB (   +1MB)	resolve_crate
time:   0.000; rss:  103MB ->  103MB (   +0MB)	complete_gated_feature_checking
time:   0.172; rss:   61MB ->  103MB (  +41MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmpYfkyLT/target/release/deps/yansi-c358343305a685a2.d","emit":"dep-info"}
time:   0.000; rss:  103MB ->  103MB (   +0MB)	prepare_outputs
time:   0.005; rss:  103MB ->  106MB (   +2MB)	hir_lowering
time:   0.001; rss:  106MB ->  106MB (   +0MB)	early_lint_checks
time:   0.001; rss:  106MB ->  106MB (   +0MB)	drop_ast
time:   0.000; rss:  105MB ->  105MB (   +0MB)	setup_global_ctxt
time:   0.000; rss:  109MB ->  109MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:  109MB ->  109MB (   +0MB)	looking_for_derive_registrar
time:   0.002; rss:  109MB ->  109MB (   +0MB)	misc_checking_1
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/style.rs","byte_start":5184,"byte_end":5194,"line_start":185,"line_end":185,"column_start":52,"column_end":62,"is_primary":true,"text":[{"text":"fn write_spliced<T: Display>(c: &mut bool, f: &mut fmt::Write, t: T) -> fmt::Result {","highlight_start":52,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(bare_trait_objects)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/style.rs","byte_start":5184,"byte_end":5184,"line_start":185,"line_end":185,"column_start":52,"column_end":52,"is_primary":true,"text":[{"text":"fn write_spliced<T: Display>(c: &mut bool, f: &mut fmt::Write, t: T) -> fmt::Result {","highlight_start":52,"highlight_end":52}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/style.rs","byte_start":5194,"byte_end":5194,"line_start":185,"line_end":185,"column_start":62,"column_end":62,"is_primary":true,"text":[{"text":"fn write_spliced<T: Display>(c: &mut bool, f: &mut fmt::Write, t: T) -> fmt::Result {","highlight_start":62,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/style.rs:185:52\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn write_spliced<T: Display>(c: &mut bool, f: &mut fmt::Write, t: T) -> fmt::Result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(bare_trait_objects)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mfn write_spliced<T: Display>(c: &mut bool, f: &mut fmt::Write, t: T) -> fmt::Result {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mfn write_spliced<T: Display>(c: &mut bool, f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write, t: T) -> fmt::Result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/style.rs","byte_start":11715,"byte_end":11725,"line_start":412,"line_end":412,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"    pub fn fmt_prefix(&self, f: &mut fmt::Write) -> fmt::Result {","highlight_start":38,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/style.rs","byte_start":11715,"byte_end":11715,"line_start":412,"line_end":412,"column_start":38,"column_end":38,"is_primary":true,"text":[{"text":"    pub fn fmt_prefix(&self, f: &mut fmt::Write) -> fmt::Result {","highlight_start":38,"highlight_end":38}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/style.rs","byte_start":11725,"byte_end":11725,"line_start":412,"line_end":412,"column_start":48,"column_end":48,"is_primary":true,"text":[{"text":"    pub fn fmt_prefix(&self, f: &mut fmt::Write) -> fmt::Result {","highlight_start":48,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/style.rs:412:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn fmt_prefix(&self, f: &mut fmt::Write) -> fmt::Result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn fmt_prefix(&self, f: &mut fmt::Write) -> fmt::Result {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn fmt_prefix(&self, f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write) -> fmt::Result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/style.rs","byte_start":13692,"byte_end":13702,"line_start":474,"line_end":474,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"    pub fn fmt_suffix(&self, f: &mut fmt::Write) -> fmt::Result {","highlight_start":38,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/style.rs","byte_start":13692,"byte_end":13692,"line_start":474,"line_end":474,"column_start":38,"column_end":38,"is_primary":true,"text":[{"text":"    pub fn fmt_suffix(&self, f: &mut fmt::Write) -> fmt::Result {","highlight_start":38,"highlight_end":38}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/style.rs","byte_start":13702,"byte_end":13702,"line_start":474,"line_end":474,"column_start":48,"column_end":48,"is_primary":true,"text":[{"text":"    pub fn fmt_suffix(&self, f: &mut fmt::Write) -> fmt::Result {","highlight_start":48,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/style.rs:474:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn fmt_suffix(&self, f: &mut fmt::Write) -> fmt::Result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn fmt_suffix(&self, f: &mut fmt::Write) -> fmt::Result {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn fmt_suffix(&self, f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write) -> fmt::Result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src/color.rs","byte_start":1894,"byte_end":1904,"line_start":73,"line_end":73,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"    pub(crate) fn ascii_fmt(&self, f: &mut fmt::Write) -> fmt::Result {","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src/color.rs","byte_start":1894,"byte_end":1894,"line_start":73,"line_end":73,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"    pub(crate) fn ascii_fmt(&self, f: &mut fmt::Write) -> fmt::Result {","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/color.rs","byte_start":1904,"byte_end":1904,"line_start":73,"line_end":73,"column_start":54,"column_end":54,"is_primary":true,"text":[{"text":"    pub(crate) fn ascii_fmt(&self, f: &mut fmt::Write) -> fmt::Result {","highlight_start":54,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/color.rs:73:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub(crate) fn ascii_fmt(&self, f: &mut fmt::Write) -> fmt::Result {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `dyn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub(crate) fn ascii_fmt(&self, f: &mut fmt::Write) -> fmt::Result {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub(crate) fn ascii_fmt(&self, f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write) -> fmt::Result {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
time:   0.003; rss:  109MB ->  113MB (   +4MB)	type_collecting
time:   0.000; rss:  113MB ->  113MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  113MB ->  113MB (   +0MB)	unsafety_checking
time:   0.011; rss:  113MB ->  136MB (  +23MB)	coherence_checking
time:   0.006; rss:  136MB ->  139MB (   +2MB)	wf_checking
time:   0.001; rss:  139MB ->  139MB (   +0MB)	item_types_checking
time:   0.038; rss:  139MB ->  144MB (   +5MB)	item_bodies_checking
time:   0.059; rss:  109MB ->  144MB (  +35MB)	type_check_crate
time:   0.001; rss:  144MB ->  144MB (   +0MB)	match_checking
time:   0.000; rss:  144MB ->  144MB (   +0MB)	liveness_and_intrinsic_checking
time:   0.001; rss:  144MB ->  144MB (   +0MB)	misc_checking_2
time:   0.030; rss:  144MB ->  152MB (   +8MB)	MIR_borrow_checking
time:   0.000; rss:  152MB ->  152MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  152MB ->  152MB (   +0MB)	layout_testing
time:   0.001; rss:  152MB ->  152MB (   +0MB)	death_checking
time:   0.000; rss:  152MB ->  152MB (   +0MB)	unused_lib_feature_checking
time:   0.003; rss:  152MB ->  154MB (   +1MB)	crate_lints
time:   0.001; rss:  154MB ->  154MB (   +0MB)	module_lints
time:   0.003; rss:  152MB ->  154MB (   +1MB)	lint_checking
time:   0.001; rss:  154MB ->  154MB (   +0MB)	privacy_checking_modules
time:   0.006; rss:  152MB ->  154MB (   +1MB)	misc_checking_3
time:   0.012; rss:  154MB ->  156MB (   +2MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmpYfkyLT/target/release/deps/libyansi-c358343305a685a2.rmeta","emit":"metadata"}
time:   0.000; rss:  156MB ->  156MB (   +0MB)	monomorphization_collector_root_collections
time:   0.006; rss:  156MB ->  156MB (   +0MB)	monomorphization_collector_graph_walk
time:   0.000; rss:  156MB ->  156MB (   +0MB)	partition_and_assert_distinct_symbols
time:   0.000; rss:  156MB ->  156MB (   +0MB)	find_cgu_reuse
time:   0.010; rss:  156MB ->  172MB (  +17MB)	codegen_to_LLVM_IR
time:   0.018; rss:  156MB ->  172MB (  +17MB)	codegen_crate
time:   0.000; rss:  172MB ->  172MB (   +0MB)	serialize_dep_graph
time:   0.005; rss:  172MB ->  124MB (  -48MB)	free_global_ctxt
time:   0.001; rss:  126MB ->  126MB (   +1MB)	LLVM_lto_optimize(yansi.6fe28c2f-cgu.4)
time:   0.001; rss:  126MB ->  126MB (   +1MB)	LLVM_lto_optimize(yansi.6fe28c2f-cgu.3)
time:   0.002; rss:  126MB ->  126MB (   +1MB)	LLVM_lto_optimize(yansi.6fe28c2f-cgu.0)
time:   0.010; rss:  126MB ->  130MB (   +4MB)	LLVM_lto_optimize(yansi.6fe28c2f-cgu.2)
time:   0.026; rss:  127MB ->  131MB (   +3MB)	LLVM_lto_optimize(yansi.6fe28c2f-cgu.1)
time:   0.086; rss:  161MB ->  132MB (  -28MB)	LLVM_passes(crate)
time:   0.000; rss:  132MB ->  132MB (   +0MB)	join_worker_thread
time:   0.074; rss:  124MB ->  132MB (   +8MB)	finish_ongoing_codegen
time:   0.000; rss:  132MB ->  132MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  132MB ->  132MB (   +0MB)	serialize_work_products
time:   0.000; rss:  132MB ->  132MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.001; rss:  132MB ->  133MB (   +1MB)	link_rlib
{"artifact":"/usr/home/liquid/tmp/.tmpYfkyLT/target/release/deps/libyansi-c358343305a685a2.rlib","emit":"link"}
time:   0.000; rss:  133MB ->  133MB (   +0MB)	link_binary_remove_temps
time:   0.001; rss:  132MB ->  133MB (   +1MB)	link_binary
time:   0.001; rss:  132MB ->  133MB (   +0MB)	link_crate
time:   0.076; rss:  124MB ->  133MB (   +9MB)	link
{"message":"4 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 4 warnings emitted\u001b[0m\n\n"}
time:   0.396; rss:   46MB ->  132MB (  +86MB)	total
