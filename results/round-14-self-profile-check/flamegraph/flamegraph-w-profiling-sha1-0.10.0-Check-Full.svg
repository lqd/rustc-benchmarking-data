<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="661.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="661.00"> </text><svg id="frames" x="10" width="1180"><g><title>mir_promoted (531,706 samples, 0.43%)</title><rect x="9.0684%" y="533" width="0.4343%" height="15" fill="rgb(227,0,7)"/><text x="9.3184%" y="543.50"></text></g><g><title>mir_const_qualif_const_arg (450,175 samples, 0.37%)</title><rect x="9.1350%" y="517" width="0.3677%" height="15" fill="rgb(217,0,24)"/><text x="9.3850%" y="527.50"></text></g><g><title>mir_const (384,565 samples, 0.31%)</title><rect x="9.1886%" y="501" width="0.3141%" height="15" fill="rgb(221,193,54)"/><text x="9.4386%" y="511.50"></text></g><g><title>unsafety_check_result_for_const_arg (244,012 samples, 0.20%)</title><rect x="9.3034%" y="485" width="0.1993%" height="15" fill="rgb(248,212,6)"/><text x="9.5534%" y="495.50"></text></g><g><title>mir_built (210,162 samples, 0.17%)</title><rect x="9.3310%" y="469" width="0.1717%" height="15" fill="rgb(208,68,35)"/><text x="9.5810%" y="479.50"></text></g><g><title>mir_borrowck_const_arg (1,314,004 samples, 1.07%)</title><rect x="8.4322%" y="549" width="1.0733%" height="15" fill="rgb(232,128,0)"/><text x="8.6822%" y="559.50"></text></g><g><title>param_env (272,284 samples, 0.22%)</title><rect x="10.4573%" y="517" width="0.2224%" height="15" fill="rgb(207,160,47)"/><text x="10.7073%" y="527.50"></text></g><g><title>item_attrs (237,924 samples, 0.19%)</title><rect x="11.0042%" y="485" width="0.1943%" height="15" fill="rgb(228,23,34)"/><text x="11.2542%" y="495.50"></text></g><g><title>metadata_decode_entry_item_attrs (231,584 samples, 0.19%)</title><rect x="11.0094%" y="469" width="0.1892%" height="15" fill="rgb(218,30,26)"/><text x="11.2594%" y="479.50"></text></g><g><title>codegen_fn_attrs (352,915 samples, 0.29%)</title><rect x="10.9229%" y="501" width="0.2883%" height="15" fill="rgb(220,122,19)"/><text x="11.1729%" y="511.50"></text></g><g><title>is_copy_raw (190,292 samples, 0.16%)</title><rect x="13.1402%" y="485" width="0.1554%" height="15" fill="rgb(250,228,42)"/><text x="13.3902%" y="495.50"></text></g><g><title>evaluate_obligation (165,262 samples, 0.13%)</title><rect x="13.1606%" y="469" width="0.1350%" height="15" fill="rgb(240,193,28)"/><text x="13.4106%" y="479.50"></text></g><g><title>adt_drop_tys (187,893 samples, 0.15%)</title><rect x="13.3391%" y="469" width="0.1535%" height="15" fill="rgb(216,20,37)"/><text x="13.5891%" y="479.50"></text></g><g><title>needs_drop_raw (590,275 samples, 0.48%)</title><rect x="13.2956%" y="485" width="0.4822%" height="15" fill="rgb(206,188,39)"/><text x="13.5456%" y="495.50"></text></g><g><title>is_copy_raw (349,152 samples, 0.29%)</title><rect x="13.4926%" y="469" width="0.2852%" height="15" fill="rgb(217,207,13)"/><text x="13.7426%" y="479.50"></text></g><g><title>evaluate_obligation (307,392 samples, 0.25%)</title><rect x="13.5267%" y="453" width="0.2511%" height="15" fill="rgb(231,73,38)"/><text x="13.7767%" y="463.50"></text></g><g><title>codegen_fulfill_obligation (205,872 samples, 0.17%)</title><rect x="13.8815%" y="469" width="0.1682%" height="15" fill="rgb(225,20,46)"/><text x="14.1315%" y="479.50"></text></g><g><title>impl_parent (201,181 samples, 0.16%)</title><rect x="14.3628%" y="453" width="0.1643%" height="15" fill="rgb(210,31,41)"/><text x="14.6128%" y="463.50"></text></g><g><title>metadata_decode_entry_impl_parent (137,851 samples, 0.11%)</title><rect x="14.4145%" y="437" width="0.1126%" height="15" fill="rgb(221,200,47)"/><text x="14.6645%" y="447.50"></text></g><g><title>specialization_graph_of (1,053,381 samples, 0.86%)</title><rect x="14.0874%" y="469" width="0.8604%" height="15" fill="rgb(226,26,5)"/><text x="14.3374%" y="479.50"></text></g><g><title>impl_trait_ref (515,014 samples, 0.42%)</title><rect x="14.5271%" y="453" width="0.4207%" height="15" fill="rgb(249,33,26)"/><text x="14.7771%" y="463.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (451,864 samples, 0.37%)</title><rect x="14.5787%" y="437" width="0.3691%" height="15" fill="rgb(235,183,28)"/><text x="14.8287%" y="447.50"></text></g><g><title>resolve_instance (1,500,014 samples, 1.23%)</title><rect x="13.7778%" y="485" width="1.2253%" height="15" fill="rgb(221,5,38)"/><text x="14.0278%" y="495.50"></text></g><g><title>thir_body (1,063,145 samples, 0.87%)</title><rect x="15.0143%" y="485" width="0.8684%" height="15" fill="rgb(247,18,42)"/><text x="15.2643%" y="495.50"></text></g><g><title>mir_const (7,165,980 samples, 5.85%)</title><rect x="10.0351%" y="533" width="5.8534%" height="15" fill="rgb(241,131,45)"/><text x="10.2851%" y="543.50">mir_con..</text></g><g><title>unsafety_check_result (6,376,787 samples, 5.21%)</title><rect x="10.6797%" y="517" width="5.2088%" height="15" fill="rgb(249,31,29)"/><text x="10.9297%" y="527.50">unsafe..</text></g><g><title>mir_built (5,726,209 samples, 4.68%)</title><rect x="11.2111%" y="501" width="4.6774%" height="15" fill="rgb(225,111,53)"/><text x="11.4611%" y="511.50">mir_b..</text></g><g><title>has_structural_eq_impls (162,132 samples, 0.13%)</title><rect x="16.0607%" y="517" width="0.1324%" height="15" fill="rgb(238,160,17)"/><text x="16.3107%" y="527.50"></text></g><g><title>evaluate_obligation (151,091 samples, 0.12%)</title><rect x="16.0697%" y="501" width="0.1234%" height="15" fill="rgb(214,148,48)"/><text x="16.3197%" y="511.50"></text></g><g><title>trait_impls_of (132,201 samples, 0.11%)</title><rect x="16.0851%" y="485" width="0.1080%" height="15" fill="rgb(232,36,49)"/><text x="16.3351%" y="495.50"></text></g><g><title>mir_const (686,068 samples, 0.56%)</title><rect x="16.2473%" y="517" width="0.5604%" height="15" fill="rgb(209,103,24)"/><text x="16.4973%" y="527.50"></text></g><g><title>unsafety_check_result (483,985 samples, 0.40%)</title><rect x="16.4123%" y="501" width="0.3953%" height="15" fill="rgb(229,88,8)"/><text x="16.6623%" y="511.50"></text></g><g><title>mir_built (399,494 samples, 0.33%)</title><rect x="16.4814%" y="485" width="0.3263%" height="15" fill="rgb(213,181,19)"/><text x="16.7314%" y="495.50"></text></g><g><title>mir_promoted (8,959,830 samples, 7.32%)</title><rect x="9.5055%" y="549" width="7.3187%" height="15" fill="rgb(254,191,54)"/><text x="9.7555%" y="559.50">mir_promot..</text></g><g><title>mir_const_qualif (1,145,523 samples, 0.94%)</title><rect x="15.8885%" y="533" width="0.9357%" height="15" fill="rgb(241,83,37)"/><text x="16.1385%" y="543.50"></text></g><g><title>type_op_ascribe_user_type (135,301 samples, 0.11%)</title><rect x="16.8298%" y="549" width="0.1105%" height="15" fill="rgb(233,36,39)"/><text x="17.0798%" y="559.50"></text></g><g><title>type_op_normalize_fn_sig (488,663 samples, 0.40%)</title><rect x="16.9403%" y="549" width="0.3992%" height="15" fill="rgb(226,3,54)"/><text x="17.1903%" y="559.50"></text></g><g><title>normalize_projection_ty (326,092 samples, 0.27%)</title><rect x="17.0731%" y="533" width="0.2664%" height="15" fill="rgb(245,192,40)"/><text x="17.3231%" y="543.50"></text></g><g><title>type_op_normalize_predicate (203,733 samples, 0.17%)</title><rect x="17.3395%" y="549" width="0.1664%" height="15" fill="rgb(238,167,29)"/><text x="17.5895%" y="559.50"></text></g><g><title>normalize_projection_ty (195,233 samples, 0.16%)</title><rect x="17.3464%" y="533" width="0.1595%" height="15" fill="rgb(232,182,51)"/><text x="17.5964%" y="543.50"></text></g><g><title>type_op_prove_predicate (1,553,411 samples, 1.27%)</title><rect x="17.5665%" y="549" width="1.2689%" height="15" fill="rgb(231,60,39)"/><text x="17.8165%" y="559.50"></text></g><g><title>MIR_borrow_checking (22,023,916 samples, 17.99%)</title><rect x="0.8491%" y="581" width="17.9900%" height="15" fill="rgb(208,69,12)"/><text x="1.0991%" y="591.50">MIR_borrow_checking</text></g><g><title>mir_borrowck (21,887,114 samples, 17.88%)</title><rect x="0.9608%" y="565" width="17.8782%" height="15" fill="rgb(235,93,37)"/><text x="1.2108%" y="575.50">mir_borrowck</text></g><g><title>mir_drops_elaborated_and_const_checked (192,282 samples, 0.16%)</title><rect x="19.2703%" y="549" width="0.1571%" height="15" fill="rgb(213,116,39)"/><text x="19.5203%" y="559.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (598,086 samples, 0.49%)</title><rect x="18.9422%" y="565" width="0.4885%" height="15" fill="rgb(222,207,29)"/><text x="19.1922%" y="575.50"></text></g><g><title>MIR_effect_checking (729,988 samples, 0.60%)</title><rect x="18.8390%" y="581" width="0.5963%" height="15" fill="rgb(206,96,30)"/><text x="19.0890%" y="591.50"></text></g><g><title>hir_module_items (161,172 samples, 0.13%)</title><rect x="19.4353%" y="581" width="0.1317%" height="15" fill="rgb(218,138,4)"/><text x="19.6853%" y="591.50"></text></g><g><title>fn_sig (176,592 samples, 0.14%)</title><rect x="19.8221%" y="533" width="0.1442%" height="15" fill="rgb(250,191,14)"/><text x="20.0721%" y="543.50"></text></g><g><title>codegen_fn_attrs (156,912 samples, 0.13%)</title><rect x="20.0279%" y="517" width="0.1282%" height="15" fill="rgb(239,60,40)"/><text x="20.2779%" y="527.50"></text></g><g><title>codegen_fn_attrs (487,176 samples, 0.40%)</title><rect x="19.7613%" y="549" width="0.3979%" height="15" fill="rgb(206,27,48)"/><text x="20.0113%" y="559.50"></text></g><g><title>should_inherit_track_caller (236,103 samples, 0.19%)</title><rect x="19.9664%" y="533" width="0.1929%" height="15" fill="rgb(225,35,8)"/><text x="20.2164%" y="543.50"></text></g><g><title>check_mod_attrs (700,909 samples, 0.57%)</title><rect x="19.5869%" y="565" width="0.5725%" height="15" fill="rgb(250,213,24)"/><text x="19.8369%" y="575.50"></text></g><g><title>check_mod_unstable_api_usage (280,733 samples, 0.23%)</title><rect x="20.2896%" y="565" width="0.2293%" height="15" fill="rgb(247,123,22)"/><text x="20.5396%" y="575.50"></text></g><g><title>misc_checking_1 (1,212,173 samples, 0.99%)</title><rect x="19.5676%" y="581" width="0.9901%" height="15" fill="rgb(231,138,38)"/><text x="19.8176%" y="591.50"></text></g><g><title>liveness_and_intrinsic_checking (498,575 samples, 0.41%)</title><rect x="20.5589%" y="565" width="0.4073%" height="15" fill="rgb(231,145,46)"/><text x="20.8089%" y="575.50"></text></g><g><title>check_mod_liveness (388,024 samples, 0.32%)</title><rect x="20.6492%" y="549" width="0.3170%" height="15" fill="rgb(251,118,11)"/><text x="20.8992%" y="559.50"></text></g><g><title>misc_checking_2 (929,290 samples, 0.76%)</title><rect x="20.5577%" y="581" width="0.7591%" height="15" fill="rgb(217,147,25)"/><text x="20.8077%" y="591.50"></text></g><g><title>match_checking (429,335 samples, 0.35%)</title><rect x="20.9661%" y="565" width="0.3507%" height="15" fill="rgb(247,81,37)"/><text x="21.2161%" y="575.50"></text></g><g><title>check_match (390,475 samples, 0.32%)</title><rect x="20.9978%" y="549" width="0.3190%" height="15" fill="rgb(209,12,38)"/><text x="21.2478%" y="559.50"></text></g><g><title>check_private_in_public (143,122 samples, 0.12%)</title><rect x="21.3246%" y="565" width="0.1169%" height="15" fill="rgb(227,1,9)"/><text x="21.5746%" y="575.50"></text></g><g><title>death_checking (350,044 samples, 0.29%)</title><rect x="21.4415%" y="565" width="0.2859%" height="15" fill="rgb(248,47,43)"/><text x="21.6915%" y="575.50"></text></g><g><title>eval_to_allocation_raw (127,821 samples, 0.10%)</title><rect x="22.3803%" y="533" width="0.1044%" height="15" fill="rgb(221,10,30)"/><text x="22.6303%" y="543.50"></text></g><g><title>eval_to_allocation_raw (126,891 samples, 0.10%)</title><rect x="22.3810%" y="517" width="0.1036%" height="15" fill="rgb(210,229,1)"/><text x="22.6310%" y="527.50"></text></g><g><title>eval_to_const_value_raw (182,432 samples, 0.15%)</title><rect x="22.4847%" y="533" width="0.1490%" height="15" fill="rgb(222,148,37)"/><text x="22.7347%" y="543.50"></text></g><g><title>eval_to_const_value_raw (179,732 samples, 0.15%)</title><rect x="22.4869%" y="517" width="0.1468%" height="15" fill="rgb(234,67,33)"/><text x="22.7369%" y="527.50"></text></g><g><title>eval_to_allocation_raw (173,321 samples, 0.14%)</title><rect x="22.4921%" y="501" width="0.1416%" height="15" fill="rgb(247,98,35)"/><text x="22.7421%" y="511.50"></text></g><g><title>param_env (293,713 samples, 0.24%)</title><rect x="22.6337%" y="533" width="0.2399%" height="15" fill="rgb(247,138,52)"/><text x="22.8837%" y="543.50"></text></g><g><title>predicates_of (130,830 samples, 0.11%)</title><rect x="22.7668%" y="517" width="0.1069%" height="15" fill="rgb(213,79,30)"/><text x="23.0168%" y="527.50"></text></g><g><title>crate_lints (2,775,791 samples, 2.27%)</title><rect x="21.7287%" y="549" width="2.2674%" height="15" fill="rgb(246,177,23)"/><text x="21.9787%" y="559.50">c..</text></g><g><title>type_of (1,367,567 samples, 1.12%)</title><rect x="22.8790%" y="533" width="1.1171%" height="15" fill="rgb(230,62,27)"/><text x="23.1290%" y="543.50"></text></g><g><title>metadata_decode_entry_type_of (912,267 samples, 0.75%)</title><rect x="23.2509%" y="517" width="0.7452%" height="15" fill="rgb(216,154,8)"/><text x="23.5009%" y="527.50"></text></g><g><title>lint_checking (3,242,766 samples, 2.65%)</title><rect x="21.7275%" y="565" width="2.6488%" height="15" fill="rgb(244,35,45)"/><text x="21.9775%" y="575.50">li..</text></g><g><title>module_lints (465,465 samples, 0.38%)</title><rect x="23.9961%" y="549" width="0.3802%" height="15" fill="rgb(251,115,12)"/><text x="24.2461%" y="559.50"></text></g><g><title>lint_mod (459,785 samples, 0.38%)</title><rect x="24.0007%" y="533" width="0.3756%" height="15" fill="rgb(240,54,50)"/><text x="24.2507%" y="543.50"></text></g><g><title>privacy_access_levels (154,921 samples, 0.13%)</title><rect x="24.3763%" y="565" width="0.1265%" height="15" fill="rgb(233,84,52)"/><text x="24.6263%" y="575.50"></text></g><g><title>privacy_checking_modules (606,296 samples, 0.50%)</title><rect x="24.5028%" y="565" width="0.4952%" height="15" fill="rgb(207,117,47)"/><text x="24.7528%" y="575.50"></text></g><g><title>check_mod_privacy (602,566 samples, 0.49%)</title><rect x="24.5059%" y="549" width="0.4922%" height="15" fill="rgb(249,43,39)"/><text x="24.7559%" y="559.50"></text></g><g><title>misc_checking_3 (4,524,980 samples, 3.70%)</title><rect x="21.3168%" y="581" width="3.6962%" height="15" fill="rgb(209,38,44)"/><text x="21.5668%" y="591.50">misc..</text></g><g><title>impl_trait_ref (173,322 samples, 0.14%)</title><rect x="25.2365%" y="485" width="0.1416%" height="15" fill="rgb(236,212,23)"/><text x="25.4865%" y="495.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (154,092 samples, 0.13%)</title><rect x="25.2522%" y="469" width="0.1259%" height="15" fill="rgb(242,79,21)"/><text x="25.5022%" y="479.50"></text></g><g><title>adt_destructor (333,593 samples, 0.27%)</title><rect x="25.1286%" y="533" width="0.2725%" height="15" fill="rgb(211,96,35)"/><text x="25.3786%" y="543.50"></text></g><g><title>coherent_trait (326,493 samples, 0.27%)</title><rect x="25.1344%" y="517" width="0.2667%" height="15" fill="rgb(253,215,40)"/><text x="25.3844%" y="527.50"></text></g><g><title>specialization_graph_of (325,353 samples, 0.27%)</title><rect x="25.1353%" y="501" width="0.2658%" height="15" fill="rgb(211,81,21)"/><text x="25.3853%" y="511.50"></text></g><g><title>impl_parent (1,703,895 samples, 1.39%)</title><rect x="27.7356%" y="517" width="1.3918%" height="15" fill="rgb(208,190,38)"/><text x="27.9856%" y="527.50"></text></g><g><title>metadata_decode_entry_impl_parent (1,045,906 samples, 0.85%)</title><rect x="28.2731%" y="501" width="0.8543%" height="15" fill="rgb(235,213,38)"/><text x="28.5231%" y="511.50"></text></g><g><title>impl_trait_ref (4,221,497 samples, 3.45%)</title><rect x="29.1274%" y="517" width="3.4483%" height="15" fill="rgb(237,122,38)"/><text x="29.3774%" y="527.50">imp..</text></g><g><title>metadata_decode_entry_impl_trait_ref (3,555,878 samples, 2.90%)</title><rect x="29.6711%" y="501" width="2.9046%" height="15" fill="rgb(244,218,35)"/><text x="29.9211%" y="511.50">me..</text></g><g><title>coherent_trait (9,751,439 samples, 7.97%)</title><rect x="25.1013%" y="549" width="7.9653%" height="15" fill="rgb(240,68,47)"/><text x="25.3513%" y="559.50">coherent_tr..</text></g><g><title>specialization_graph_of (9,207,503 samples, 7.52%)</title><rect x="25.5456%" y="533" width="7.5210%" height="15" fill="rgb(210,16,53)"/><text x="25.7956%" y="543.50">specializa..</text></g><g><title>trait_impls_of (599,198 samples, 0.49%)</title><rect x="32.5772%" y="517" width="0.4894%" height="15" fill="rgb(235,124,12)"/><text x="32.8272%" y="527.50"></text></g><g><title>implementations_of_trait (195,562 samples, 0.16%)</title><rect x="32.9069%" y="501" width="0.1597%" height="15" fill="rgb(224,169,11)"/><text x="33.1569%" y="511.50"></text></g><g><title>metadata_decode_entry_implementations_of_trait (134,682 samples, 0.11%)</title><rect x="32.9566%" y="485" width="0.1100%" height="15" fill="rgb(250,166,2)"/><text x="33.2066%" y="495.50"></text></g><g><title>coherence_checking (9,864,920 samples, 8.06%)</title><rect x="25.0860%" y="565" width="8.0580%" height="15" fill="rgb(242,216,29)"/><text x="25.3360%" y="575.50">coherence_c..</text></g><g><title>associated_item (238,383 samples, 0.19%)</title><rect x="46.5144%" y="501" width="0.1947%" height="15" fill="rgb(230,116,27)"/><text x="46.7644%" y="511.50"></text></g><g><title>metadata_decode_entry_associated_item (195,363 samples, 0.16%)</title><rect x="46.5495%" y="485" width="0.1596%" height="15" fill="rgb(228,99,48)"/><text x="46.7995%" y="495.50"></text></g><g><title>associated_items (329,165 samples, 0.27%)</title><rect x="46.4543%" y="517" width="0.2689%" height="15" fill="rgb(253,11,6)"/><text x="46.7043%" y="527.50"></text></g><g><title>dropck_outlives (146,153 samples, 0.12%)</title><rect x="46.7661%" y="517" width="0.1194%" height="15" fill="rgb(247,143,39)"/><text x="47.0161%" y="527.50"></text></g><g><title>mir_borrowck (149,742 samples, 0.12%)</title><rect x="47.0394%" y="453" width="0.1223%" height="15" fill="rgb(236,97,10)"/><text x="47.2894%" y="463.50"></text></g><g><title>mir_for_ctfe (214,382 samples, 0.18%)</title><rect x="46.9869%" y="485" width="0.1751%" height="15" fill="rgb(233,208,19)"/><text x="47.2369%" y="495.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (194,352 samples, 0.16%)</title><rect x="47.0033%" y="469" width="0.1588%" height="15" fill="rgb(216,164,2)"/><text x="47.2533%" y="479.50"></text></g><g><title>eval_to_allocation_raw (329,234 samples, 0.27%)</title><rect x="46.8934%" y="501" width="0.2689%" height="15" fill="rgb(220,129,5)"/><text x="47.1434%" y="511.50"></text></g><g><title>mir_for_ctfe (163,092 samples, 0.13%)</title><rect x="47.2542%" y="469" width="0.1332%" height="15" fill="rgb(242,17,10)"/><text x="47.5042%" y="479.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (144,962 samples, 0.12%)</title><rect x="47.2690%" y="453" width="0.1184%" height="15" fill="rgb(242,107,0)"/><text x="47.5190%" y="463.50"></text></g><g><title>eval_to_const_value_raw (616,237 samples, 0.50%)</title><rect x="46.8855%" y="517" width="0.5034%" height="15" fill="rgb(251,28,31)"/><text x="47.1355%" y="527.50"></text></g><g><title>eval_to_const_value_raw (277,343 samples, 0.23%)</title><rect x="47.1623%" y="501" width="0.2265%" height="15" fill="rgb(233,223,10)"/><text x="47.4123%" y="511.50"></text></g><g><title>eval_to_allocation_raw (265,982 samples, 0.22%)</title><rect x="47.1716%" y="485" width="0.2173%" height="15" fill="rgb(215,21,27)"/><text x="47.4216%" y="495.50"></text></g><g><title>generics_of (509,016 samples, 0.42%)</title><rect x="49.6448%" y="501" width="0.4158%" height="15" fill="rgb(232,23,21)"/><text x="49.8948%" y="511.50"></text></g><g><title>metadata_decode_entry_generics_of (362,295 samples, 0.30%)</title><rect x="49.7647%" y="485" width="0.2959%" height="15" fill="rgb(244,5,23)"/><text x="50.0147%" y="495.50"></text></g><g><title>impl_polarity (124,493 samples, 0.10%)</title><rect x="50.0894%" y="501" width="0.1017%" height="15" fill="rgb(226,81,46)"/><text x="50.3394%" y="511.50"></text></g><g><title>impl_trait_ref (887,301 samples, 0.72%)</title><rect x="50.1911%" y="501" width="0.7248%" height="15" fill="rgb(247,70,30)"/><text x="50.4411%" y="511.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (746,099 samples, 0.61%)</title><rect x="50.3064%" y="485" width="0.6094%" height="15" fill="rgb(212,68,19)"/><text x="50.5564%" y="495.50"></text></g><g><title>opt_def_kind (140,292 samples, 0.11%)</title><rect x="51.1047%" y="485" width="0.1146%" height="15" fill="rgb(240,187,13)"/><text x="51.3547%" y="495.50"></text></g><g><title>explicit_predicates_of (358,133 samples, 0.29%)</title><rect x="51.3806%" y="469" width="0.2925%" height="15" fill="rgb(223,113,26)"/><text x="51.6306%" y="479.50"></text></g><g><title>predicates_of (995,182 samples, 0.81%)</title><rect x="50.9538%" y="501" width="0.8129%" height="15" fill="rgb(206,192,2)"/><text x="51.2038%" y="511.50"></text></g><g><title>predicates_defined_on (670,138 samples, 0.55%)</title><rect x="51.2193%" y="485" width="0.5474%" height="15" fill="rgb(241,108,4)"/><text x="51.4693%" y="495.50"></text></g><g><title>specializes (2,042,332 samples, 1.67%)</title><rect x="51.7667%" y="501" width="1.6683%" height="15" fill="rgb(247,173,49)"/><text x="52.0167%" y="511.50"></text></g><g><title>param_env (1,194,322 samples, 0.98%)</title><rect x="52.4594%" y="485" width="0.9756%" height="15" fill="rgb(224,114,35)"/><text x="52.7094%" y="495.50"></text></g><g><title>def_span (558,687 samples, 0.46%)</title><rect x="52.9786%" y="469" width="0.4564%" height="15" fill="rgb(245,159,27)"/><text x="53.2286%" y="479.50"></text></g><g><title>metadata_decode_entry_def_span (496,147 samples, 0.41%)</title><rect x="53.0297%" y="453" width="0.4053%" height="15" fill="rgb(245,172,44)"/><text x="53.2797%" y="463.50"></text></g><g><title>trait_impls_of (570,306 samples, 0.47%)</title><rect x="53.4451%" y="501" width="0.4658%" height="15" fill="rgb(236,23,11)"/><text x="53.6951%" y="511.50"></text></g><g><title>implementations_of_trait (240,383 samples, 0.20%)</title><rect x="53.7146%" y="485" width="0.1964%" height="15" fill="rgb(205,117,38)"/><text x="53.9646%" y="495.50"></text></g><g><title>metadata_decode_entry_implementations_of_trait (163,132 samples, 0.13%)</title><rect x="53.7777%" y="469" width="0.1333%" height="15" fill="rgb(237,72,25)"/><text x="54.0277%" y="479.50"></text></g><g><title>evaluate_obligation (7,999,008 samples, 6.53%)</title><rect x="47.3888%" y="517" width="6.5339%" height="15" fill="rgb(244,70,9)"/><text x="47.6388%" y="527.50">evaluate_..</text></g><g><title>impl_trait_ref (156,883 samples, 0.13%)</title><rect x="54.1406%" y="517" width="0.1281%" height="15" fill="rgb(217,125,39)"/><text x="54.3906%" y="527.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (141,973 samples, 0.12%)</title><rect x="54.1528%" y="501" width="0.1160%" height="15" fill="rgb(235,36,10)"/><text x="54.4028%" y="511.50"></text></g><g><title>method_autoderef_steps (138,213 samples, 0.11%)</title><rect x="54.3844%" y="517" width="0.1129%" height="15" fill="rgb(251,123,47)"/><text x="54.6344%" y="527.50"></text></g><g><title>object_safety_violations (138,262 samples, 0.11%)</title><rect x="54.4989%" y="517" width="0.1129%" height="15" fill="rgb(221,13,13)"/><text x="54.7489%" y="527.50"></text></g><g><title>opt_const_param_of (3,440,779 samples, 2.81%)</title><rect x="54.6118%" y="517" width="2.8106%" height="15" fill="rgb(238,131,9)"/><text x="54.8618%" y="527.50">op..</text></g><g><title>typeck (3,397,068 samples, 2.77%)</title><rect x="54.6475%" y="501" width="2.7749%" height="15" fill="rgb(211,50,8)"/><text x="54.8975%" y="511.50">ty..</text></g><g><title>param_env (359,215 samples, 0.29%)</title><rect x="57.4384%" y="517" width="0.2934%" height="15" fill="rgb(245,182,24)"/><text x="57.6884%" y="527.50"></text></g><g><title>predicates_of (169,841 samples, 0.14%)</title><rect x="57.5930%" y="501" width="0.1387%" height="15" fill="rgb(242,14,37)"/><text x="57.8430%" y="511.50"></text></g><g><title>predicates_defined_on (146,041 samples, 0.12%)</title><rect x="57.6125%" y="485" width="0.1193%" height="15" fill="rgb(246,228,12)"/><text x="57.8625%" y="495.50"></text></g><g><title>predicates_of (242,570 samples, 0.20%)</title><rect x="57.7383%" y="517" width="0.1981%" height="15" fill="rgb(213,55,15)"/><text x="57.9883%" y="527.50"></text></g><g><title>predicates_defined_on (166,800 samples, 0.14%)</title><rect x="57.8002%" y="501" width="0.1362%" height="15" fill="rgb(209,9,3)"/><text x="58.0502%" y="511.50"></text></g><g><title>specializes (146,962 samples, 0.12%)</title><rect x="58.0186%" y="517" width="0.1200%" height="15" fill="rgb(230,59,30)"/><text x="58.2686%" y="527.50"></text></g><g><title>associated_item (180,442 samples, 0.15%)</title><rect x="60.0657%" y="485" width="0.1474%" height="15" fill="rgb(209,121,21)"/><text x="60.3157%" y="495.50"></text></g><g><title>metadata_decode_entry_associated_item (140,292 samples, 0.11%)</title><rect x="60.0985%" y="469" width="0.1146%" height="15" fill="rgb(220,109,13)"/><text x="60.3485%" y="479.50"></text></g><g><title>associated_items (258,863 samples, 0.21%)</title><rect x="60.0090%" y="501" width="0.2114%" height="15" fill="rgb(232,18,1)"/><text x="60.2590%" y="511.50"></text></g><g><title>eval_to_const_value_raw (183,062 samples, 0.15%)</title><rect x="60.3046%" y="501" width="0.1495%" height="15" fill="rgb(215,41,42)"/><text x="60.5546%" y="511.50"></text></g><g><title>eval_to_const_value_raw (181,812 samples, 0.15%)</title><rect x="60.3056%" y="485" width="0.1485%" height="15" fill="rgb(224,123,36)"/><text x="60.5556%" y="495.50"></text></g><g><title>eval_to_allocation_raw (179,072 samples, 0.15%)</title><rect x="60.3078%" y="469" width="0.1463%" height="15" fill="rgb(240,125,3)"/><text x="60.5578%" y="479.50"></text></g><g><title>generics_of (230,882 samples, 0.19%)</title><rect x="61.1562%" y="485" width="0.1886%" height="15" fill="rgb(205,98,50)"/><text x="61.4062%" y="495.50"></text></g><g><title>metadata_decode_entry_generics_of (181,141 samples, 0.15%)</title><rect x="61.1969%" y="469" width="0.1480%" height="15" fill="rgb(205,185,37)"/><text x="61.4469%" y="479.50"></text></g><g><title>impl_trait_ref (346,125 samples, 0.28%)</title><rect x="61.3664%" y="485" width="0.2827%" height="15" fill="rgb(238,207,15)"/><text x="61.6164%" y="495.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (296,813 samples, 0.24%)</title><rect x="61.4067%" y="469" width="0.2424%" height="15" fill="rgb(213,199,42)"/><text x="61.6567%" y="479.50"></text></g><g><title>specializes (195,060 samples, 0.16%)</title><rect x="61.7307%" y="485" width="0.1593%" height="15" fill="rgb(235,201,11)"/><text x="61.9807%" y="495.50"></text></g><g><title>trait_impls_of (221,353 samples, 0.18%)</title><rect x="61.8952%" y="485" width="0.1808%" height="15" fill="rgb(207,46,11)"/><text x="62.1452%" y="495.50"></text></g><g><title>evaluate_obligation (1,994,912 samples, 1.63%)</title><rect x="60.4541%" y="501" width="1.6295%" height="15" fill="rgb(241,35,35)"/><text x="60.7041%" y="511.50"></text></g><g><title>method_autoderef_steps (148,911 samples, 0.12%)</title><rect x="62.4480%" y="501" width="0.1216%" height="15" fill="rgb(243,32,47)"/><text x="62.6980%" y="511.50"></text></g><g><title>predicates_of (152,702 samples, 0.12%)</title><rect x="62.5762%" y="501" width="0.1247%" height="15" fill="rgb(247,202,23)"/><text x="62.8262%" y="511.50"></text></g><g><title>typeck (5,568,891 samples, 4.55%)</title><rect x="58.2104%" y="517" width="4.5489%" height="15" fill="rgb(219,102,11)"/><text x="58.4604%" y="527.50">typeck</text></g><g><title>param_env (164,123 samples, 0.13%)</title><rect x="63.0060%" y="501" width="0.1341%" height="15" fill="rgb(243,110,44)"/><text x="63.2560%" y="511.50"></text></g><g><title>typeck_const_arg (500,455 samples, 0.41%)</title><rect x="62.7592%" y="517" width="0.4088%" height="15" fill="rgb(222,74,54)"/><text x="63.0092%" y="527.50"></text></g><g><title>item_bodies_checking (36,770,449 samples, 30.04%)</title><rect x="33.1603%" y="565" width="30.0355%" height="15" fill="rgb(216,99,12)"/><text x="33.4103%" y="575.50">item_bodies_checking</text></g><g><title>typeck_item_bodies (36,766,669 samples, 30.03%)</title><rect x="33.1634%" y="549" width="30.0324%" height="15" fill="rgb(226,22,26)"/><text x="33.4134%" y="559.50">typeck_item_bodies</text></g><g><title>typeck (36,675,109 samples, 29.96%)</title><rect x="33.2382%" y="533" width="29.9576%" height="15" fill="rgb(217,163,10)"/><text x="33.4882%" y="543.50">typeck</text></g><g><title>evaluate_obligation (266,902 samples, 0.22%)</title><rect x="63.5557%" y="533" width="0.2180%" height="15" fill="rgb(213,25,53)"/><text x="63.8057%" y="543.50"></text></g><g><title>associated_item (140,252 samples, 0.11%)</title><rect x="64.0651%" y="501" width="0.1146%" height="15" fill="rgb(252,105,26)"/><text x="64.3151%" y="511.50"></text></g><g><title>associated_items (187,242 samples, 0.15%)</title><rect x="64.0361%" y="517" width="0.1529%" height="15" fill="rgb(220,39,43)"/><text x="64.2861%" y="527.50"></text></g><g><title>item_types_checking (1,356,385 samples, 1.11%)</title><rect x="63.1958%" y="565" width="1.1079%" height="15" fill="rgb(229,68,48)"/><text x="63.4458%" y="575.50"></text></g><g><title>check_mod_item_types (1,351,435 samples, 1.10%)</title><rect x="63.1999%" y="549" width="1.1039%" height="15" fill="rgb(252,8,32)"/><text x="63.4499%" y="559.50"></text></g><g><title>typeck (510,625 samples, 0.42%)</title><rect x="63.8867%" y="533" width="0.4171%" height="15" fill="rgb(223,20,43)"/><text x="64.1367%" y="543.50"></text></g><g><title>fn_sig (193,211 samples, 0.16%)</title><rect x="64.4214%" y="533" width="0.1578%" height="15" fill="rgb(229,81,49)"/><text x="64.6714%" y="543.50"></text></g><g><title>named_region_map (271,363 samples, 0.22%)</title><rect x="64.6152%" y="517" width="0.2217%" height="15" fill="rgb(236,28,36)"/><text x="64.8652%" y="527.50"></text></g><g><title>resolve_lifetimes (263,363 samples, 0.22%)</title><rect x="64.6217%" y="501" width="0.2151%" height="15" fill="rgb(249,185,26)"/><text x="64.8717%" y="511.50"></text></g><g><title>lint_levels (146,401 samples, 0.12%)</title><rect x="64.7172%" y="485" width="0.1196%" height="15" fill="rgb(249,174,33)"/><text x="64.9672%" y="495.50"></text></g><g><title>generics_of (325,915 samples, 0.27%)</title><rect x="64.5792%" y="533" width="0.2662%" height="15" fill="rgb(233,201,37)"/><text x="64.8292%" y="543.50"></text></g><g><title>predicates_of (152,563 samples, 0.12%)</title><rect x="64.8763%" y="533" width="0.1246%" height="15" fill="rgb(221,78,26)"/><text x="65.1263%" y="543.50"></text></g><g><title>predicates_defined_on (128,211 samples, 0.10%)</title><rect x="64.8962%" y="517" width="0.1047%" height="15" fill="rgb(250,127,30)"/><text x="65.1462%" y="527.50"></text></g><g><title>type_collecting (960,381 samples, 0.78%)</title><rect x="64.3063%" y="565" width="0.7845%" height="15" fill="rgb(230,49,44)"/><text x="64.5563%" y="575.50"></text></g><g><title>collect_mod_item_types (955,441 samples, 0.78%)</title><rect x="64.3103%" y="549" width="0.7804%" height="15" fill="rgb(229,67,23)"/><text x="64.5603%" y="559.50"></text></g><g><title>evaluate_obligation (226,423 samples, 0.18%)</title><rect x="65.6765%" y="533" width="0.1850%" height="15" fill="rgb(249,83,47)"/><text x="65.9265%" y="543.50"></text></g><g><title>implied_outlives_bounds (203,273 samples, 0.17%)</title><rect x="65.8638%" y="533" width="0.1660%" height="15" fill="rgb(215,43,3)"/><text x="66.1138%" y="543.50"></text></g><g><title>check_impl_item_well_formed (1,193,932 samples, 0.98%)</title><rect x="65.1940%" y="549" width="0.9752%" height="15" fill="rgb(238,154,13)"/><text x="65.4440%" y="559.50"></text></g><g><title>mir_const_qualif (178,971 samples, 0.15%)</title><rect x="67.2436%" y="485" width="0.1462%" height="15" fill="rgb(219,56,2)"/><text x="67.4936%" y="495.50"></text></g><g><title>mir_const (146,591 samples, 0.12%)</title><rect x="67.2701%" y="469" width="0.1197%" height="15" fill="rgb(233,0,4)"/><text x="67.5201%" y="479.50"></text></g><g><title>mir_borrowck (449,595 samples, 0.37%)</title><rect x="67.5126%" y="453" width="0.3672%" height="15" fill="rgb(235,30,7)"/><text x="67.7626%" y="463.50"></text></g><g><title>mir_for_ctfe (600,698 samples, 0.49%)</title><rect x="67.3898%" y="485" width="0.4907%" height="15" fill="rgb(250,79,13)"/><text x="67.6398%" y="495.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (554,976 samples, 0.45%)</title><rect x="67.4272%" y="469" width="0.4533%" height="15" fill="rgb(211,146,34)"/><text x="67.6772%" y="479.50"></text></g><g><title>mir_borrowck (136,002 samples, 0.11%)</title><rect x="68.0087%" y="389" width="0.1111%" height="15" fill="rgb(228,22,38)"/><text x="68.2587%" y="399.50"></text></g><g><title>mir_for_ctfe (199,062 samples, 0.16%)</title><rect x="67.9578%" y="421" width="0.1626%" height="15" fill="rgb(235,168,5)"/><text x="68.2078%" y="431.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (185,092 samples, 0.15%)</title><rect x="67.9692%" y="405" width="0.1512%" height="15" fill="rgb(221,155,16)"/><text x="68.2192%" y="415.50"></text></g><g><title>eval_to_const_value_raw (147,211 samples, 0.12%)</title><rect x="68.2398%" y="85" width="0.1202%" height="15" fill="rgb(215,215,53)"/><text x="68.4898%" y="95.50"></text></g><g><title>eval_to_const_value_raw (146,691 samples, 0.12%)</title><rect x="68.2402%" y="69" width="0.1198%" height="15" fill="rgb(223,4,10)"/><text x="68.4902%" y="79.50"></text></g><g><title>eval_to_allocation_raw (145,501 samples, 0.12%)</title><rect x="68.2412%" y="53" width="0.1189%" height="15" fill="rgb(234,103,6)"/><text x="68.4912%" y="63.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (137,911 samples, 0.11%)</title><rect x="68.2474%" y="37" width="0.1127%" height="15" fill="rgb(227,97,0)"/><text x="68.4974%" y="47.50"></text></g><g><title>eval_to_const_value_raw (181,163 samples, 0.15%)</title><rect x="68.2290%" y="149" width="0.1480%" height="15" fill="rgb(234,150,53)"/><text x="68.4790%" y="159.50"></text></g><g><title>eval_to_const_value_raw (180,693 samples, 0.15%)</title><rect x="68.2293%" y="133" width="0.1476%" height="15" fill="rgb(228,201,54)"/><text x="68.4793%" y="143.50"></text></g><g><title>eval_to_allocation_raw (179,922 samples, 0.15%)</title><rect x="68.2300%" y="117" width="0.1470%" height="15" fill="rgb(222,22,37)"/><text x="68.4800%" y="127.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (170,711 samples, 0.14%)</title><rect x="68.2375%" y="101" width="0.1394%" height="15" fill="rgb(237,53,32)"/><text x="68.4875%" y="111.50"></text></g><g><title>eval_to_const_value_raw (208,303 samples, 0.17%)</title><rect x="68.2210%" y="213" width="0.1701%" height="15" fill="rgb(233,25,53)"/><text x="68.4710%" y="223.50"></text></g><g><title>eval_to_const_value_raw (207,843 samples, 0.17%)</title><rect x="68.2214%" y="197" width="0.1698%" height="15" fill="rgb(210,40,34)"/><text x="68.4714%" y="207.50"></text></g><g><title>eval_to_allocation_raw (207,143 samples, 0.17%)</title><rect x="68.2220%" y="181" width="0.1692%" height="15" fill="rgb(241,220,44)"/><text x="68.4720%" y="191.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (200,973 samples, 0.16%)</title><rect x="68.2270%" y="165" width="0.1642%" height="15" fill="rgb(235,28,35)"/><text x="68.4770%" y="175.50"></text></g><g><title>eval_to_const_value_raw (242,893 samples, 0.20%)</title><rect x="68.2086%" y="277" width="0.1984%" height="15" fill="rgb(210,56,17)"/><text x="68.4586%" y="287.50"></text></g><g><title>eval_to_const_value_raw (237,713 samples, 0.19%)</title><rect x="68.2129%" y="261" width="0.1942%" height="15" fill="rgb(224,130,29)"/><text x="68.4629%" y="271.50"></text></g><g><title>eval_to_allocation_raw (236,423 samples, 0.19%)</title><rect x="68.2139%" y="245" width="0.1931%" height="15" fill="rgb(235,212,8)"/><text x="68.4639%" y="255.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (229,663 samples, 0.19%)</title><rect x="68.2194%" y="229" width="0.1876%" height="15" fill="rgb(223,33,50)"/><text x="68.4694%" y="239.50"></text></g><g><title>eval_to_const_value_raw (323,123 samples, 0.26%)</title><rect x="68.1565%" y="341" width="0.2639%" height="15" fill="rgb(219,149,13)"/><text x="68.4065%" y="351.50"></text></g><g><title>eval_to_const_value_raw (320,793 samples, 0.26%)</title><rect x="68.1584%" y="325" width="0.2620%" height="15" fill="rgb(250,156,29)"/><text x="68.4084%" y="335.50"></text></g><g><title>eval_to_allocation_raw (315,903 samples, 0.26%)</title><rect x="68.1624%" y="309" width="0.2580%" height="15" fill="rgb(216,193,19)"/><text x="68.4124%" y="319.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (261,303 samples, 0.21%)</title><rect x="68.2070%" y="293" width="0.2134%" height="15" fill="rgb(216,135,14)"/><text x="68.4570%" y="303.50"></text></g><g><title>eval_to_const_value_raw (415,155 samples, 0.34%)</title><rect x="68.1236%" y="405" width="0.3391%" height="15" fill="rgb(241,47,5)"/><text x="68.3736%" y="415.50"></text></g><g><title>eval_to_const_value_raw (414,565 samples, 0.34%)</title><rect x="68.1240%" y="389" width="0.3386%" height="15" fill="rgb(233,42,35)"/><text x="68.3740%" y="399.50"></text></g><g><title>eval_to_allocation_raw (413,765 samples, 0.34%)</title><rect x="68.1247%" y="373" width="0.3380%" height="15" fill="rgb(231,13,6)"/><text x="68.3747%" y="383.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (382,215 samples, 0.31%)</title><rect x="68.1505%" y="357" width="0.3122%" height="15" fill="rgb(207,181,40)"/><text x="68.4005%" y="367.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (589,277 samples, 0.48%)</title><rect x="68.1204%" y="421" width="0.4813%" height="15" fill="rgb(254,173,49)"/><text x="68.3704%" y="431.50"></text></g><g><title>resolve_instance (170,212 samples, 0.14%)</title><rect x="68.4627%" y="405" width="0.1390%" height="15" fill="rgb(221,1,38)"/><text x="68.7127%" y="415.50"></text></g><g><title>evaluate_obligation (246,593 samples, 0.20%)</title><rect x="68.7444%" y="405" width="0.2014%" height="15" fill="rgb(206,124,46)"/><text x="68.9944%" y="415.50"></text></g><g><title>eval_to_const_value_raw (1,317,194 samples, 1.08%)</title><rect x="67.8900%" y="469" width="1.0759%" height="15" fill="rgb(249,21,11)"/><text x="68.1400%" y="479.50"></text></g><g><title>eval_to_const_value_raw (1,315,504 samples, 1.07%)</title><rect x="67.8914%" y="453" width="1.0746%" height="15" fill="rgb(222,201,40)"/><text x="68.1414%" y="463.50"></text></g><g><title>eval_to_allocation_raw (1,312,764 samples, 1.07%)</title><rect x="67.8936%" y="437" width="1.0723%" height="15" fill="rgb(235,61,29)"/><text x="68.1436%" y="447.50"></text></g><g><title>typeck (445,935 samples, 0.36%)</title><rect x="68.6017%" y="421" width="0.3643%" height="15" fill="rgb(219,207,3)"/><text x="68.8517%" y="431.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (1,334,254 samples, 1.09%)</title><rect x="67.8808%" y="485" width="1.0899%" height="15" fill="rgb(222,56,46)"/><text x="68.1308%" y="495.50"></text></g><g><title>eval_to_const_value_raw (2,420,217 samples, 1.98%)</title><rect x="67.1124%" y="533" width="1.9769%" height="15" fill="rgb(239,76,54)"/><text x="67.3624%" y="543.50">e..</text></g><g><title>eval_to_const_value_raw (2,400,747 samples, 1.96%)</title><rect x="67.1283%" y="517" width="1.9610%" height="15" fill="rgb(231,124,27)"/><text x="67.3783%" y="527.50">e..</text></g><g><title>eval_to_allocation_raw (2,398,397 samples, 1.96%)</title><rect x="67.1302%" y="501" width="1.9591%" height="15" fill="rgb(249,195,6)"/><text x="67.3802%" y="511.50">e..</text></g><g><title>typeck (145,213 samples, 0.12%)</title><rect x="68.9707%" y="485" width="0.1186%" height="15" fill="rgb(237,174,47)"/><text x="69.2207%" y="495.50"></text></g><g><title>adt_def (720,948 samples, 0.59%)</title><rect x="69.7793%" y="485" width="0.5889%" height="15" fill="rgb(206,201,31)"/><text x="70.0293%" y="495.50"></text></g><g><title>metadata_decode_entry_adt_def (720,458 samples, 0.59%)</title><rect x="69.7797%" y="469" width="0.5885%" height="15" fill="rgb(231,57,52)"/><text x="70.0297%" y="479.50"></text></g><g><title>item_attrs (712,978 samples, 0.58%)</title><rect x="69.7858%" y="453" width="0.5824%" height="15" fill="rgb(248,177,22)"/><text x="70.0358%" y="463.50"></text></g><g><title>metadata_decode_entry_item_attrs (712,198 samples, 0.58%)</title><rect x="69.7864%" y="437" width="0.5818%" height="15" fill="rgb(215,211,37)"/><text x="70.0364%" y="447.50"></text></g><g><title>adt_sized_constraint (730,988 samples, 0.60%)</title><rect x="69.7752%" y="501" width="0.5971%" height="15" fill="rgb(241,128,51)"/><text x="70.0252%" y="511.50"></text></g><g><title>adt_sized_constraint (818,979 samples, 0.67%)</title><rect x="69.7081%" y="517" width="0.6690%" height="15" fill="rgb(227,165,31)"/><text x="69.9581%" y="527.50"></text></g><g><title>evaluate_obligation (1,798,727 samples, 1.47%)</title><rect x="69.0893%" y="533" width="1.4693%" height="15" fill="rgb(228,167,24)"/><text x="69.3393%" y="543.50"></text></g><g><title>param_env (135,141 samples, 0.11%)</title><rect x="70.7128%" y="533" width="0.1104%" height="15" fill="rgb(228,143,12)"/><text x="70.9628%" y="543.50"></text></g><g><title>predicates_of (139,361 samples, 0.11%)</title><rect x="70.8232%" y="533" width="0.1138%" height="15" fill="rgb(249,149,8)"/><text x="71.0732%" y="543.50"></text></g><g><title>region_scope_tree (282,882 samples, 0.23%)</title><rect x="70.9370%" y="533" width="0.2311%" height="15" fill="rgb(243,35,44)"/><text x="71.1870%" y="543.50"></text></g><g><title>analysis (86,483,693 samples, 70.64%)</title><rect x="0.6266%" y="597" width="70.6432%" height="15" fill="rgb(246,89,9)"/><text x="0.8766%" y="607.50">analysis</text></g><g><title>type_check_crate (56,629,111 samples, 46.26%)</title><rect x="25.0130%" y="581" width="46.2568%" height="15" fill="rgb(233,213,13)"/><text x="25.2630%" y="591.50">type_check_crate</text></g><g><title>wf_checking (7,555,414 samples, 6.17%)</title><rect x="65.0982%" y="565" width="6.1715%" height="15" fill="rgb(233,141,41)"/><text x="65.3482%" y="575.50">wf_check..</text></g><g><title>check_item_well_formed (6,244,279 samples, 5.10%)</title><rect x="66.1692%" y="549" width="5.1006%" height="15" fill="rgb(239,167,4)"/><text x="66.4192%" y="559.50">check_..</text></g><g><title>codegen_crate (509,476 samples, 0.42%)</title><rect x="71.2754%" y="597" width="0.4162%" height="15" fill="rgb(209,217,16)"/><text x="71.5254%" y="607.50"></text></g><g><title>AST_validation (155,502 samples, 0.13%)</title><rect x="71.8008%" y="581" width="0.1270%" height="15" fill="rgb(219,88,35)"/><text x="72.0508%" y="591.50"></text></g><g><title>metadata_load_macro (283,814 samples, 0.23%)</title><rect x="87.7789%" y="549" width="0.2318%" height="15" fill="rgb(220,193,23)"/><text x="88.0289%" y="559.50"></text></g><g><title>metadata_register_crate (1,398,094 samples, 1.14%)</title><rect x="88.0107%" y="549" width="1.1420%" height="15" fill="rgb(230,90,52)"/><text x="88.2607%" y="559.50"></text></g><g><title>metadata_register_crate (925,701 samples, 0.76%)</title><rect x="88.3966%" y="533" width="0.7561%" height="15" fill="rgb(252,106,19)"/><text x="88.6466%" y="543.50"></text></g><g><title>metadata_register_crate (366,143 samples, 0.30%)</title><rect x="88.8536%" y="517" width="0.2991%" height="15" fill="rgb(206,74,20)"/><text x="89.1036%" y="527.50"></text></g><g><title>macro_expand_crate (21,151,496 samples, 17.28%)</title><rect x="72.0164%" y="581" width="17.2773%" height="15" fill="rgb(230,138,44)"/><text x="72.2664%" y="591.50">macro_expand_crate</text></g><g><title>expand_crate (21,140,726 samples, 17.27%)</title><rect x="72.0252%" y="565" width="17.2685%" height="15" fill="rgb(235,182,43)"/><text x="72.2752%" y="575.50">expand_crate</text></g><g><title>pre_AST_expansion_lint_checks (172,661 samples, 0.14%)</title><rect x="89.1527%" y="549" width="0.1410%" height="15" fill="rgb(242,16,51)"/><text x="89.4027%" y="559.50"></text></g><g><title>finalize_imports (218,252 samples, 0.18%)</title><rect x="89.3579%" y="565" width="0.1783%" height="15" fill="rgb(248,9,4)"/><text x="89.6079%" y="575.50"></text></g><g><title>finalize_macro_resolutions (152,872 samples, 0.12%)</title><rect x="89.5362%" y="565" width="0.1249%" height="15" fill="rgb(210,31,22)"/><text x="89.7862%" y="575.50"></text></g><g><title>late_resolve_crate (1,457,676 samples, 1.19%)</title><rect x="89.6610%" y="565" width="1.1907%" height="15" fill="rgb(239,54,39)"/><text x="89.9110%" y="575.50"></text></g><g><title>configure_and_expand (23,559,992 samples, 19.24%)</title><rect x="71.6916%" y="597" width="19.2447%" height="15" fill="rgb(230,99,41)"/><text x="71.9416%" y="607.50">configure_and_expand</text></g><g><title>resolve_crate (1,936,961 samples, 1.58%)</title><rect x="89.3541%" y="581" width="1.5822%" height="15" fill="rgb(253,106,12)"/><text x="89.6041%" y="591.50"></text></g><g><title>drop_ast (189,612 samples, 0.15%)</title><rect x="90.9363%" y="597" width="0.1549%" height="15" fill="rgb(213,46,41)"/><text x="91.1863%" y="607.50"></text></g><g><title>early_lint_checks (373,344 samples, 0.30%)</title><rect x="91.1059%" y="597" width="0.3050%" height="15" fill="rgb(215,133,35)"/><text x="91.3559%" y="607.50"></text></g><g><title>free_global_ctxt (3,638,871 samples, 2.97%)</title><rect x="91.4108%" y="597" width="2.9724%" height="15" fill="rgb(213,28,5)"/><text x="91.6608%" y="607.50">fre..</text></g><g><title>mir_for_ctfe (218,284 samples, 0.18%)</title><rect x="95.9470%" y="581" width="0.1783%" height="15" fill="rgb(215,77,49)"/><text x="96.1970%" y="591.50"></text></g><g><title>generate_crate_metadata (2,210,765 samples, 1.81%)</title><rect x="94.3832%" y="597" width="1.8058%" height="15" fill="rgb(248,100,22)"/><text x="94.6332%" y="607.50">g..</text></g><g><title>hir_lowering (2,351,397 samples, 1.92%)</title><rect x="96.1890%" y="597" width="1.9207%" height="15" fill="rgb(208,67,9)"/><text x="96.4390%" y="607.50">h..</text></g><g><title>parse_crate (608,806 samples, 0.50%)</title><rect x="98.1533%" y="597" width="0.4973%" height="15" fill="rgb(219,133,21)"/><text x="98.4033%" y="607.50"></text></g><g><title>prepare_outputs (205,672 samples, 0.17%)</title><rect x="98.6556%" y="597" width="0.1680%" height="15" fill="rgb(246,46,29)"/><text x="98.9056%" y="607.50"></text></g><g><title>self_profile_alloc_query_strings (912,010 samples, 0.74%)</title><rect x="98.8236%" y="597" width="0.7450%" height="15" fill="rgb(246,185,52)"/><text x="99.0736%" y="607.50"></text></g><g><title>all (122,423,324 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(252,136,11)"/><text x="0.2500%" y="639.50"></text></g><g><title>rustc (122,423,324 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(219,138,53)"/><text x="0.2500%" y="623.50">rustc</text></g><g><title>write_crate_metadata (435,345 samples, 0.36%)</title><rect x="99.6444%" y="597" width="0.3556%" height="15" fill="rgb(211,51,23)"/><text x="99.8944%" y="607.50"></text></g></svg></svg>