<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="437.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="437.00"> </text><svg id="frames" x="10" width="1180"><g><title>implied_outlives_bounds (261,984 samples, 0.19%)</title><rect x="10.7388%" y="325" width="0.1948%" height="15" fill="rgb(227,0,7)"/><text x="10.9888%" y="335.50"></text></g><g><title>param_env (522,043 samples, 0.39%)</title><rect x="12.4205%" y="293" width="0.3882%" height="15" fill="rgb(217,0,24)"/><text x="12.6705%" y="303.50"></text></g><g><title>item_attrs (523,535 samples, 0.39%)</title><rect x="13.3021%" y="261" width="0.3893%" height="15" fill="rgb(221,193,54)"/><text x="13.5521%" y="271.50"></text></g><g><title>metadata_decode_entry_item_attrs (504,465 samples, 0.38%)</title><rect x="13.3163%" y="245" width="0.3752%" height="15" fill="rgb(248,212,6)"/><text x="13.5663%" y="255.50"></text></g><g><title>codegen_fn_attrs (698,536 samples, 0.52%)</title><rect x="13.1923%" y="277" width="0.5195%" height="15" fill="rgb(208,68,35)"/><text x="13.4423%" y="287.50"></text></g><g><title>is_copy_raw (509,356 samples, 0.38%)</title><rect x="15.9494%" y="229" width="0.3788%" height="15" fill="rgb(232,128,0)"/><text x="16.1994%" y="239.50"></text></g><g><title>evaluate_obligation (441,325 samples, 0.33%)</title><rect x="16.0000%" y="213" width="0.3282%" height="15" fill="rgb(207,160,47)"/><text x="16.2500%" y="223.50"></text></g><g><title>param_env (314,973 samples, 0.23%)</title><rect x="16.3282%" y="229" width="0.2342%" height="15" fill="rgb(228,23,34)"/><text x="16.5782%" y="239.50"></text></g><g><title>adt_drop_tys (1,120,861 samples, 0.83%)</title><rect x="15.7847%" y="245" width="0.8336%" height="15" fill="rgb(218,30,26)"/><text x="16.0347%" y="255.50"></text></g><g><title>is_copy_raw (655,940 samples, 0.49%)</title><rect x="16.6183%" y="245" width="0.4878%" height="15" fill="rgb(220,122,19)"/><text x="16.8683%" y="255.50"></text></g><g><title>evaluate_obligation (479,008 samples, 0.36%)</title><rect x="16.7498%" y="229" width="0.3562%" height="15" fill="rgb(250,228,42)"/><text x="16.9998%" y="239.50"></text></g><g><title>needs_drop_raw (2,208,114 samples, 1.64%)</title><rect x="15.6534%" y="261" width="1.6421%" height="15" fill="rgb(240,193,28)"/><text x="15.9034%" y="271.50"></text></g><g><title>try_normalize_generic_arg_after_erasing_regions (254,803 samples, 0.19%)</title><rect x="17.1061%" y="245" width="0.1895%" height="15" fill="rgb(216,20,37)"/><text x="17.3561%" y="255.50"></text></g><g><title>normalize_projection_ty (227,233 samples, 0.17%)</title><rect x="17.1266%" y="229" width="0.1690%" height="15" fill="rgb(206,188,39)"/><text x="17.3766%" y="239.50"></text></g><g><title>codegen_fulfill_obligation (568,375 samples, 0.42%)</title><rect x="17.4833%" y="245" width="0.4227%" height="15" fill="rgb(217,207,13)"/><text x="17.7333%" y="255.50"></text></g><g><title>impl_parent (277,282 samples, 0.21%)</title><rect x="18.3510%" y="229" width="0.2062%" height="15" fill="rgb(231,73,38)"/><text x="18.6010%" y="239.50"></text></g><g><title>metadata_decode_entry_impl_parent (180,510 samples, 0.13%)</title><rect x="18.4230%" y="213" width="0.1342%" height="15" fill="rgb(225,20,46)"/><text x="18.6730%" y="223.50"></text></g><g><title>specialization_graph_of (1,846,339 samples, 1.37%)</title><rect x="17.9434%" y="245" width="1.3731%" height="15" fill="rgb(210,31,41)"/><text x="18.1934%" y="255.50"></text></g><g><title>impl_trait_ref (1,020,940 samples, 0.76%)</title><rect x="18.5572%" y="229" width="0.7592%" height="15" fill="rgb(221,200,47)"/><text x="18.8072%" y="239.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (936,270 samples, 0.70%)</title><rect x="18.6202%" y="213" width="0.6963%" height="15" fill="rgb(226,26,5)"/><text x="18.8702%" y="223.50"></text></g><g><title>resolve_instance (2,818,771 samples, 2.10%)</title><rect x="17.2956%" y="261" width="2.0962%" height="15" fill="rgb(249,33,26)"/><text x="17.5456%" y="271.50">r..</text></g><g><title>thir_body (1,105,330 samples, 0.82%)</title><rect x="19.4212%" y="261" width="0.8220%" height="15" fill="rgb(235,183,28)"/><text x="19.6712%" y="271.50"></text></g><g><title>mir_const (11,465,996 samples, 8.53%)</title><rect x="11.7435%" y="309" width="8.5270%" height="15" fill="rgb(221,5,38)"/><text x="11.9935%" y="319.50">mir_const</text></g><g><title>unsafety_check_result (10,033,566 samples, 7.46%)</title><rect x="12.8087%" y="293" width="7.4617%" height="15" fill="rgb(247,18,42)"/><text x="13.0587%" y="303.50">unsafety_c..</text></g><g><title>mir_built (8,811,753 samples, 6.55%)</title><rect x="13.7174%" y="277" width="6.5531%" height="15" fill="rgb(241,131,45)"/><text x="13.9674%" y="287.50">mir_built</text></g><g><title>has_structural_eq_impls (437,115 samples, 0.33%)</title><rect x="20.6642%" y="293" width="0.3251%" height="15" fill="rgb(249,31,29)"/><text x="20.9142%" y="303.50"></text></g><g><title>evaluate_obligation (366,324 samples, 0.27%)</title><rect x="20.7168%" y="277" width="0.2724%" height="15" fill="rgb(225,111,53)"/><text x="20.9668%" y="287.50"></text></g><g><title>trait_impls_of (290,034 samples, 0.22%)</title><rect x="20.7735%" y="261" width="0.2157%" height="15" fill="rgb(238,160,17)"/><text x="21.0235%" y="271.50"></text></g><g><title>is_freeze_raw (135,422 samples, 0.10%)</title><rect x="20.9892%" y="293" width="0.1007%" height="15" fill="rgb(214,148,48)"/><text x="21.2392%" y="303.50"></text></g><g><title>mir_const (241,394 samples, 0.18%)</title><rect x="21.0899%" y="293" width="0.1795%" height="15" fill="rgb(232,36,49)"/><text x="21.3399%" y="303.50"></text></g><g><title>unsafety_check_result (175,694 samples, 0.13%)</title><rect x="21.1388%" y="277" width="0.1307%" height="15" fill="rgb(209,103,24)"/><text x="21.3888%" y="287.50"></text></g><g><title>mir_built (151,214 samples, 0.11%)</title><rect x="21.1570%" y="261" width="0.1125%" height="15" fill="rgb(229,88,8)"/><text x="21.4070%" y="271.50"></text></g><g><title>mir_promoted (13,897,562 samples, 10.34%)</title><rect x="11.0132%" y="325" width="10.3352%" height="15" fill="rgb(213,181,19)"/><text x="11.2632%" y="335.50">mir_promoted</text></g><g><title>mir_const_qualif (1,449,557 samples, 1.08%)</title><rect x="20.2704%" y="309" width="1.0780%" height="15" fill="rgb(254,191,54)"/><text x="20.5204%" y="319.50"></text></g><g><title>type_op_ascribe_user_type (209,683 samples, 0.16%)</title><rect x="21.3514%" y="325" width="0.1559%" height="15" fill="rgb(241,83,37)"/><text x="21.6014%" y="335.50"></text></g><g><title>type_op_normalize_fn_sig (845,034 samples, 0.63%)</title><rect x="21.5073%" y="325" width="0.6284%" height="15" fill="rgb(233,36,39)"/><text x="21.7573%" y="335.50"></text></g><g><title>normalize_projection_ty (533,558 samples, 0.40%)</title><rect x="21.7390%" y="309" width="0.3968%" height="15" fill="rgb(226,3,54)"/><text x="21.9890%" y="319.50"></text></g><g><title>type_op_normalize_predicate (793,821 samples, 0.59%)</title><rect x="22.1357%" y="325" width="0.5903%" height="15" fill="rgb(245,192,40)"/><text x="22.3857%" y="335.50"></text></g><g><title>normalize_projection_ty (458,277 samples, 0.34%)</title><rect x="22.3853%" y="309" width="0.3408%" height="15" fill="rgb(238,167,29)"/><text x="22.6353%" y="319.50"></text></g><g><title>type_op_prove_predicate (3,742,669 samples, 2.78%)</title><rect x="22.7300%" y="325" width="2.7833%" height="15" fill="rgb(232,182,51)"/><text x="22.9800%" y="335.50">ty..</text></g><g><title>MIR_borrow_checking (33,642,016 samples, 25.02%)</title><rect x="0.5002%" y="357" width="25.0187%" height="15" fill="rgb(231,60,39)"/><text x="0.7502%" y="367.50">MIR_borrow_checking</text></g><g><title>mir_borrowck (33,481,476 samples, 24.90%)</title><rect x="0.6196%" y="341" width="24.8993%" height="15" fill="rgb(208,69,12)"/><text x="0.8696%" y="351.50">mir_borrowck</text></g><g><title>MIR_effect_checking (252,603 samples, 0.19%)</title><rect x="25.5188%" y="357" width="0.1879%" height="15" fill="rgb(235,93,37)"/><text x="25.7688%" y="367.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (190,532 samples, 0.14%)</title><rect x="25.5650%" y="341" width="0.1417%" height="15" fill="rgb(213,116,39)"/><text x="25.8150%" y="351.50"></text></g><g><title>hir_module_items (180,743 samples, 0.13%)</title><rect x="25.7067%" y="357" width="0.1344%" height="15" fill="rgb(222,207,29)"/><text x="25.9567%" y="367.50"></text></g><g><title>codegen_fn_attrs (336,532 samples, 0.25%)</title><rect x="26.0014%" y="325" width="0.2503%" height="15" fill="rgb(206,96,30)"/><text x="26.2514%" y="335.50"></text></g><g><title>check_mod_attrs (525,565 samples, 0.39%)</title><rect x="25.8609%" y="341" width="0.3908%" height="15" fill="rgb(218,138,4)"/><text x="26.1109%" y="351.50"></text></g><g><title>check_mod_unstable_api_usage (273,823 samples, 0.20%)</title><rect x="26.3733%" y="341" width="0.2036%" height="15" fill="rgb(250,191,14)"/><text x="26.6233%" y="351.50"></text></g><g><title>misc_checking_1 (1,050,131 samples, 0.78%)</title><rect x="25.8414%" y="357" width="0.7810%" height="15" fill="rgb(239,60,40)"/><text x="26.0914%" y="367.50"></text></g><g><title>liveness_and_intrinsic_checking (622,407 samples, 0.46%)</title><rect x="26.6237%" y="341" width="0.4629%" height="15" fill="rgb(206,27,48)"/><text x="26.8737%" y="351.50"></text></g><g><title>check_mod_liveness (497,705 samples, 0.37%)</title><rect x="26.7164%" y="325" width="0.3701%" height="15" fill="rgb(225,35,8)"/><text x="26.9664%" y="335.50"></text></g><g><title>type_uninhabited_from (205,402 samples, 0.15%)</title><rect x="26.9338%" y="309" width="0.1528%" height="15" fill="rgb(250,213,24)"/><text x="27.1838%" y="319.50"></text></g><g><title>type_uninhabited_from (171,822 samples, 0.13%)</title><rect x="26.9587%" y="293" width="0.1278%" height="15" fill="rgb(247,123,22)"/><text x="27.2087%" y="303.50"></text></g><g><title>misc_checking_2 (1,216,554 samples, 0.90%)</title><rect x="26.6224%" y="357" width="0.9047%" height="15" fill="rgb(231,138,38)"/><text x="26.8724%" y="367.50"></text></g><g><title>match_checking (592,447 samples, 0.44%)</title><rect x="27.0865%" y="341" width="0.4406%" height="15" fill="rgb(231,145,46)"/><text x="27.3365%" y="351.50"></text></g><g><title>check_match (555,756 samples, 0.41%)</title><rect x="27.1138%" y="325" width="0.4133%" height="15" fill="rgb(251,118,11)"/><text x="27.3638%" y="335.50"></text></g><g><title>check_private_in_public (165,342 samples, 0.12%)</title><rect x="27.5350%" y="341" width="0.1230%" height="15" fill="rgb(217,147,25)"/><text x="27.7850%" y="351.50"></text></g><g><title>death_checking (397,045 samples, 0.30%)</title><rect x="27.6580%" y="341" width="0.2953%" height="15" fill="rgb(247,81,37)"/><text x="27.9080%" y="351.50"></text></g><g><title>layout_of (145,472 samples, 0.11%)</title><rect x="29.4631%" y="37" width="0.1082%" height="15" fill="rgb(209,12,38)"/><text x="29.7131%" y="47.50"></text></g><g><title>layout_of (313,414 samples, 0.23%)</title><rect x="29.3992%" y="53" width="0.2331%" height="15" fill="rgb(227,1,9)"/><text x="29.6492%" y="63.50"></text></g><g><title>layout_of (456,584 samples, 0.34%)</title><rect x="29.3238%" y="69" width="0.3395%" height="15" fill="rgb(248,47,43)"/><text x="29.5738%" y="79.50"></text></g><g><title>layout_of (538,785 samples, 0.40%)</title><rect x="29.2773%" y="85" width="0.4007%" height="15" fill="rgb(221,10,30)"/><text x="29.5273%" y="95.50"></text></g><g><title>layout_of (612,495 samples, 0.46%)</title><rect x="29.2397%" y="101" width="0.4555%" height="15" fill="rgb(210,229,1)"/><text x="29.4897%" y="111.50"></text></g><g><title>layout_of (720,808 samples, 0.54%)</title><rect x="29.1919%" y="117" width="0.5360%" height="15" fill="rgb(222,148,37)"/><text x="29.4419%" y="127.50"></text></g><g><title>layout_of (757,518 samples, 0.56%)</title><rect x="29.1683%" y="133" width="0.5633%" height="15" fill="rgb(234,67,33)"/><text x="29.4183%" y="143.50"></text></g><g><title>layout_of (797,569 samples, 0.59%)</title><rect x="29.1423%" y="149" width="0.5931%" height="15" fill="rgb(247,98,35)"/><text x="29.3923%" y="159.50"></text></g><g><title>layout_of (825,089 samples, 0.61%)</title><rect x="29.1256%" y="165" width="0.6136%" height="15" fill="rgb(247,138,52)"/><text x="29.3756%" y="175.50"></text></g><g><title>layout_of (835,449 samples, 0.62%)</title><rect x="29.1219%" y="181" width="0.6213%" height="15" fill="rgb(213,79,30)"/><text x="29.3719%" y="191.50"></text></g><g><title>layout_of (862,419 samples, 0.64%)</title><rect x="29.1032%" y="197" width="0.6414%" height="15" fill="rgb(246,177,23)"/><text x="29.3532%" y="207.50"></text></g><g><title>fn_abi_of_instance (920,550 samples, 0.68%)</title><rect x="29.0724%" y="213" width="0.6846%" height="15" fill="rgb(230,62,27)"/><text x="29.3224%" y="223.50"></text></g><g><title>fn_abi_of_instance (354,084 samples, 0.26%)</title><rect x="29.8599%" y="149" width="0.2633%" height="15" fill="rgb(216,154,8)"/><text x="30.1099%" y="159.50"></text></g><g><title>param_env (266,624 samples, 0.20%)</title><rect x="29.9250%" y="133" width="0.1983%" height="15" fill="rgb(244,35,45)"/><text x="30.1750%" y="143.50"></text></g><g><title>eval_to_const_value_raw (524,966 samples, 0.39%)</title><rect x="29.8089%" y="197" width="0.3904%" height="15" fill="rgb(251,115,12)"/><text x="30.0589%" y="207.50"></text></g><g><title>eval_to_const_value_raw (524,136 samples, 0.39%)</title><rect x="29.8095%" y="181" width="0.3898%" height="15" fill="rgb(240,54,50)"/><text x="30.0595%" y="191.50"></text></g><g><title>eval_to_allocation_raw (521,606 samples, 0.39%)</title><rect x="29.8114%" y="165" width="0.3879%" height="15" fill="rgb(233,84,52)"/><text x="30.0614%" y="175.50"></text></g><g><title>eval_to_const_value_raw (1,646,569 samples, 1.22%)</title><rect x="28.9787%" y="261" width="1.2245%" height="15" fill="rgb(207,117,47)"/><text x="29.2287%" y="271.50"></text></g><g><title>eval_to_const_value_raw (1,644,848 samples, 1.22%)</title><rect x="28.9800%" y="245" width="1.2232%" height="15" fill="rgb(249,43,39)"/><text x="29.2300%" y="255.50"></text></g><g><title>eval_to_allocation_raw (1,641,928 samples, 1.22%)</title><rect x="28.9822%" y="229" width="1.2211%" height="15" fill="rgb(209,38,44)"/><text x="29.2322%" y="239.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (534,196 samples, 0.40%)</title><rect x="29.8059%" y="213" width="0.3973%" height="15" fill="rgb(236,212,23)"/><text x="30.0559%" y="223.50"></text></g><g><title>eval_to_allocation_raw (1,982,461 samples, 1.47%)</title><rect x="28.7299%" y="309" width="1.4743%" height="15" fill="rgb(242,79,21)"/><text x="28.9799%" y="319.50"></text></g><g><title>eval_to_allocation_raw (1,959,940 samples, 1.46%)</title><rect x="28.7467%" y="293" width="1.4576%" height="15" fill="rgb(211,96,35)"/><text x="28.9967%" y="303.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (1,664,099 samples, 1.24%)</title><rect x="28.9667%" y="277" width="1.2375%" height="15" fill="rgb(253,215,40)"/><text x="29.2167%" y="287.50"></text></g><g><title>param_env (312,814 samples, 0.23%)</title><rect x="30.2042%" y="309" width="0.2326%" height="15" fill="rgb(211,81,21)"/><text x="30.4542%" y="319.50"></text></g><g><title>predicates_of (142,511 samples, 0.11%)</title><rect x="30.3309%" y="293" width="0.1060%" height="15" fill="rgb(208,190,38)"/><text x="30.5809%" y="303.50"></text></g><g><title>crate_lints (5,248,398 samples, 3.90%)</title><rect x="27.9548%" y="325" width="3.9031%" height="15" fill="rgb(235,213,38)"/><text x="28.2048%" y="335.50">crat..</text></g><g><title>type_of (1,892,970 samples, 1.41%)</title><rect x="30.4501%" y="309" width="1.4078%" height="15" fill="rgb(237,122,38)"/><text x="30.7001%" y="319.50"></text></g><g><title>metadata_decode_entry_type_of (1,463,293 samples, 1.09%)</title><rect x="30.7697%" y="293" width="1.0882%" height="15" fill="rgb(244,218,35)"/><text x="31.0197%" y="303.50"></text></g><g><title>lint_checking (5,623,632 samples, 4.18%)</title><rect x="27.9533%" y="341" width="4.1821%" height="15" fill="rgb(240,68,47)"/><text x="28.2033%" y="351.50">lint_..</text></g><g><title>module_lints (373,164 samples, 0.28%)</title><rect x="31.8579%" y="325" width="0.2775%" height="15" fill="rgb(210,16,53)"/><text x="32.1079%" y="335.50"></text></g><g><title>lint_mod (366,084 samples, 0.27%)</title><rect x="31.8631%" y="309" width="0.2722%" height="15" fill="rgb(235,124,12)"/><text x="32.1131%" y="319.50"></text></g><g><title>privacy_access_levels (151,711 samples, 0.11%)</title><rect x="32.1354%" y="341" width="0.1128%" height="15" fill="rgb(224,169,11)"/><text x="32.3854%" y="351.50"></text></g><g><title>privacy_checking_modules (706,888 samples, 0.53%)</title><rect x="32.2482%" y="341" width="0.5257%" height="15" fill="rgb(250,166,2)"/><text x="32.4982%" y="351.50"></text></g><g><title>check_mod_privacy (702,918 samples, 0.52%)</title><rect x="32.2512%" y="325" width="0.5227%" height="15" fill="rgb(242,216,29)"/><text x="32.5012%" y="335.50"></text></g><g><title>misc_checking_3 (7,067,068 samples, 5.26%)</title><rect x="27.5271%" y="357" width="5.2556%" height="15" fill="rgb(230,116,27)"/><text x="27.7771%" y="367.50">misc_c..</text></g><g><title>impl_parent (1,591,619 samples, 1.18%)</title><rect x="34.6871%" y="293" width="1.1836%" height="15" fill="rgb(228,99,48)"/><text x="34.9371%" y="303.50"></text></g><g><title>metadata_decode_entry_impl_parent (1,044,715 samples, 0.78%)</title><rect x="35.0938%" y="277" width="0.7769%" height="15" fill="rgb(253,11,6)"/><text x="35.3438%" y="287.50"></text></g><g><title>impl_trait_ref (4,766,261 samples, 3.54%)</title><rect x="35.8707%" y="293" width="3.5445%" height="15" fill="rgb(247,143,39)"/><text x="36.1207%" y="303.50">impl..</text></g><g><title>metadata_decode_entry_impl_trait_ref (4,213,347 samples, 3.13%)</title><rect x="36.2819%" y="277" width="3.1334%" height="15" fill="rgb(236,97,10)"/><text x="36.5319%" y="287.50">met..</text></g><g><title>coherent_trait (9,397,885 samples, 6.99%)</title><rect x="32.8462%" y="325" width="6.9890%" height="15" fill="rgb(233,208,19)"/><text x="33.0962%" y="335.50">coherent_..</text></g><g><title>specialization_graph_of (9,386,255 samples, 6.98%)</title><rect x="32.8548%" y="309" width="6.9803%" height="15" fill="rgb(216,164,2)"/><text x="33.1048%" y="319.50">specializ..</text></g><g><title>trait_impls_of (563,056 samples, 0.42%)</title><rect x="39.4164%" y="293" width="0.4187%" height="15" fill="rgb(220,129,5)"/><text x="39.6664%" y="303.50"></text></g><g><title>implementations_of_trait (168,822 samples, 0.13%)</title><rect x="39.7096%" y="277" width="0.1255%" height="15" fill="rgb(242,17,10)"/><text x="39.9596%" y="287.50"></text></g><g><title>coherence_checking (9,516,507 samples, 7.08%)</title><rect x="32.8340%" y="341" width="7.0772%" height="15" fill="rgb(242,107,0)"/><text x="33.0840%" y="351.50">coherence..</text></g><g><title>associated_item (451,516 samples, 0.34%)</title><rect x="45.5116%" y="277" width="0.3358%" height="15" fill="rgb(251,28,31)"/><text x="45.7616%" y="287.50"></text></g><g><title>metadata_decode_entry_associated_item (363,664 samples, 0.27%)</title><rect x="45.5769%" y="261" width="0.2704%" height="15" fill="rgb(233,223,10)"/><text x="45.8269%" y="271.50"></text></g><g><title>associated_items (839,209 samples, 0.62%)</title><rect x="45.2397%" y="293" width="0.6241%" height="15" fill="rgb(215,21,27)"/><text x="45.4897%" y="303.50"></text></g><g><title>adt_def (174,862 samples, 0.13%)</title><rect x="46.1838%" y="261" width="0.1300%" height="15" fill="rgb(232,23,21)"/><text x="46.4338%" y="271.50"></text></g><g><title>metadata_decode_entry_adt_def (168,722 samples, 0.13%)</title><rect x="46.1884%" y="245" width="0.1255%" height="15" fill="rgb(244,5,23)"/><text x="46.4384%" y="255.50"></text></g><g><title>adt_def (151,861 samples, 0.11%)</title><rect x="46.4003%" y="245" width="0.1129%" height="15" fill="rgb(226,81,46)"/><text x="46.6503%" y="255.50"></text></g><g><title>metadata_decode_entry_adt_def (147,791 samples, 0.11%)</title><rect x="46.4033%" y="229" width="0.1099%" height="15" fill="rgb(247,70,30)"/><text x="46.6533%" y="239.50"></text></g><g><title>adt_dtorck_constraint (211,462 samples, 0.16%)</title><rect x="46.5332%" y="245" width="0.1573%" height="15" fill="rgb(212,68,19)"/><text x="46.7832%" y="255.50"></text></g><g><title>adt_dtorck_constraint (502,375 samples, 0.37%)</title><rect x="46.3559%" y="261" width="0.3736%" height="15" fill="rgb(240,187,13)"/><text x="46.6059%" y="271.50"></text></g><g><title>adt_dtorck_constraint (1,021,370 samples, 0.76%)</title><rect x="46.0742%" y="277" width="0.7596%" height="15" fill="rgb(223,113,26)"/><text x="46.3242%" y="287.50"></text></g><g><title>dropck_outlives (1,728,319 samples, 1.29%)</title><rect x="45.9107%" y="293" width="1.2853%" height="15" fill="rgb(206,192,2)"/><text x="46.1607%" y="303.50"></text></g><g><title>normalize_projection_ty (487,087 samples, 0.36%)</title><rect x="46.8338%" y="277" width="0.3622%" height="15" fill="rgb(241,108,4)"/><text x="47.0838%" y="287.50"></text></g><g><title>trait_impls_of (506,076 samples, 0.38%)</title><rect x="47.7346%" y="277" width="0.3764%" height="15" fill="rgb(247,173,49)"/><text x="47.9846%" y="287.50"></text></g><g><title>implementations_of_trait (238,053 samples, 0.18%)</title><rect x="47.9340%" y="261" width="0.1770%" height="15" fill="rgb(224,114,35)"/><text x="48.1840%" y="271.50"></text></g><g><title>evaluate_obligation (1,230,913 samples, 0.92%)</title><rect x="47.1960%" y="293" width="0.9154%" height="15" fill="rgb(245,159,27)"/><text x="47.4460%" y="303.50"></text></g><g><title>method_autoderef_steps (182,553 samples, 0.14%)</title><rect x="48.5466%" y="293" width="0.1358%" height="15" fill="rgb(245,172,44)"/><text x="48.7966%" y="303.50"></text></g><g><title>predicates_of (237,843 samples, 0.18%)</title><rect x="48.7112%" y="293" width="0.1769%" height="15" fill="rgb(236,23,11)"/><text x="48.9612%" y="303.50"></text></g><g><title>predicates_defined_on (164,171 samples, 0.12%)</title><rect x="48.7660%" y="277" width="0.1221%" height="15" fill="rgb(205,117,38)"/><text x="49.0160%" y="287.50"></text></g><g><title>adt_def (136,371 samples, 0.10%)</title><rect x="60.2332%" y="261" width="0.1014%" height="15" fill="rgb(237,72,25)"/><text x="60.4832%" y="271.50"></text></g><g><title>adt_sized_constraint (198,761 samples, 0.15%)</title><rect x="60.2157%" y="277" width="0.1478%" height="15" fill="rgb(244,70,9)"/><text x="60.4657%" y="287.50"></text></g><g><title>associated_item (251,831 samples, 0.19%)</title><rect x="60.4432%" y="261" width="0.1873%" height="15" fill="rgb(217,125,39)"/><text x="60.6932%" y="271.50"></text></g><g><title>metadata_decode_entry_associated_item (197,340 samples, 0.15%)</title><rect x="60.4837%" y="245" width="0.1468%" height="15" fill="rgb(235,36,10)"/><text x="60.7337%" y="255.50"></text></g><g><title>associated_items (381,362 samples, 0.28%)</title><rect x="60.3683%" y="277" width="0.2836%" height="15" fill="rgb(251,123,47)"/><text x="60.6183%" y="287.50"></text></g><g><title>adt_dtorck_constraint (283,392 samples, 0.21%)</title><rect x="60.8675%" y="261" width="0.2108%" height="15" fill="rgb(221,13,13)"/><text x="61.1175%" y="271.50"></text></g><g><title>dropck_outlives (629,865 samples, 0.47%)</title><rect x="60.7238%" y="277" width="0.4684%" height="15" fill="rgb(238,131,9)"/><text x="60.9738%" y="287.50"></text></g><g><title>normalize_projection_ty (153,232 samples, 0.11%)</title><rect x="61.0783%" y="261" width="0.1140%" height="15" fill="rgb(211,50,8)"/><text x="61.3283%" y="271.50"></text></g><g><title>impl_trait_ref (138,330 samples, 0.10%)</title><rect x="62.8356%" y="261" width="0.1029%" height="15" fill="rgb(245,182,24)"/><text x="63.0856%" y="271.50"></text></g><g><title>predicates_of (202,783 samples, 0.15%)</title><rect x="62.9482%" y="261" width="0.1508%" height="15" fill="rgb(242,14,37)"/><text x="63.1982%" y="271.50"></text></g><g><title>specializes (301,693 samples, 0.22%)</title><rect x="63.0990%" y="261" width="0.2244%" height="15" fill="rgb(246,228,12)"/><text x="63.3490%" y="271.50"></text></g><g><title>param_env (163,921 samples, 0.12%)</title><rect x="63.2015%" y="245" width="0.1219%" height="15" fill="rgb(213,55,15)"/><text x="63.4515%" y="255.50"></text></g><g><title>trait_impls_of (687,577 samples, 0.51%)</title><rect x="63.3302%" y="261" width="0.5113%" height="15" fill="rgb(209,9,3)"/><text x="63.5802%" y="271.50"></text></g><g><title>implementations_of_trait (238,903 samples, 0.18%)</title><rect x="63.6639%" y="245" width="0.1777%" height="15" fill="rgb(230,59,30)"/><text x="63.9139%" y="255.50"></text></g><g><title>metadata_decode_entry_implementations_of_trait (142,412 samples, 0.11%)</title><rect x="63.7356%" y="229" width="0.1059%" height="15" fill="rgb(209,121,21)"/><text x="63.9856%" y="239.50"></text></g><g><title>evaluate_obligation (3,565,504 samples, 2.65%)</title><rect x="61.1922%" y="277" width="2.6516%" height="15" fill="rgb(220,109,13)"/><text x="61.4422%" y="287.50">ev..</text></g><g><title>fn_sig (168,782 samples, 0.13%)</title><rect x="63.8592%" y="277" width="0.1255%" height="15" fill="rgb(232,18,1)"/><text x="64.1092%" y="287.50"></text></g><g><title>metadata_decode_entry_fn_sig (149,132 samples, 0.11%)</title><rect x="63.8738%" y="261" width="0.1109%" height="15" fill="rgb(215,41,42)"/><text x="64.1238%" y="271.50"></text></g><g><title>generics_of (156,701 samples, 0.12%)</title><rect x="63.9847%" y="277" width="0.1165%" height="15" fill="rgb(224,123,36)"/><text x="64.2347%" y="287.50"></text></g><g><title>impl_item_implementor_ids (160,590 samples, 0.12%)</title><rect x="64.1025%" y="277" width="0.1194%" height="15" fill="rgb(240,125,3)"/><text x="64.3525%" y="287.50"></text></g><g><title>associated_items (137,330 samples, 0.10%)</title><rect x="64.1198%" y="261" width="0.1021%" height="15" fill="rgb(205,98,50)"/><text x="64.3698%" y="271.50"></text></g><g><title>is_copy_raw (357,915 samples, 0.27%)</title><rect x="64.3867%" y="277" width="0.2662%" height="15" fill="rgb(205,185,37)"/><text x="64.6367%" y="287.50"></text></g><g><title>evaluate_obligation (283,484 samples, 0.21%)</title><rect x="64.4420%" y="261" width="0.2108%" height="15" fill="rgb(238,207,15)"/><text x="64.6920%" y="271.50"></text></g><g><title>evaluate_obligation (417,724 samples, 0.31%)</title><rect x="65.0706%" y="261" width="0.3107%" height="15" fill="rgb(213,199,42)"/><text x="65.3206%" y="271.50"></text></g><g><title>method_autoderef_steps (901,619 samples, 0.67%)</title><rect x="64.7230%" y="277" width="0.6705%" height="15" fill="rgb(235,201,11)"/><text x="64.9730%" y="287.50"></text></g><g><title>explicit_predicates_of (148,190 samples, 0.11%)</title><rect x="65.5694%" y="245" width="0.1102%" height="15" fill="rgb(207,46,11)"/><text x="65.8194%" y="255.50"></text></g><g><title>predicates_of (419,583 samples, 0.31%)</title><rect x="65.4144%" y="277" width="0.3120%" height="15" fill="rgb(241,35,35)"/><text x="65.6644%" y="287.50"></text></g><g><title>predicates_defined_on (297,621 samples, 0.22%)</title><rect x="65.5051%" y="261" width="0.2213%" height="15" fill="rgb(243,32,47)"/><text x="65.7551%" y="271.50"></text></g><g><title>trait_impls_of (220,241 samples, 0.16%)</title><rect x="65.7347%" y="277" width="0.1638%" height="15" fill="rgb(247,202,23)"/><text x="65.9847%" y="287.50"></text></g><g><title>typeck (22,905,146 samples, 17.03%)</title><rect x="48.9809%" y="293" width="17.0339%" height="15" fill="rgb(219,102,11)"/><text x="49.2309%" y="303.50">typeck</text></g><g><title>item_bodies_checking (35,133,582 samples, 26.13%)</title><rect x="39.9291%" y="341" width="26.1279%" height="15" fill="rgb(243,110,44)"/><text x="40.1791%" y="351.50">item_bodies_checking</text></g><g><title>typeck_item_bodies (35,130,152 samples, 26.13%)</title><rect x="39.9316%" y="325" width="26.1253%" height="15" fill="rgb(222,74,54)"/><text x="40.1816%" y="335.50">typeck_item_bodies</text></g><g><title>typeck (35,055,451 samples, 26.07%)</title><rect x="39.9872%" y="309" width="26.0698%" height="15" fill="rgb(216,99,12)"/><text x="40.2372%" y="319.50">typeck</text></g><g><title>impl_trait_ref (295,932 samples, 0.22%)</title><rect x="66.6989%" y="261" width="0.2201%" height="15" fill="rgb(226,22,26)"/><text x="66.9489%" y="271.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (273,202 samples, 0.20%)</title><rect x="66.7158%" y="245" width="0.2032%" height="15" fill="rgb(217,163,10)"/><text x="66.9658%" y="255.50"></text></g><g><title>adt_destructor (528,916 samples, 0.39%)</title><rect x="66.5652%" y="309" width="0.3933%" height="15" fill="rgb(213,25,53)"/><text x="66.8152%" y="319.50"></text></g><g><title>coherent_trait (520,446 samples, 0.39%)</title><rect x="66.5715%" y="293" width="0.3870%" height="15" fill="rgb(252,105,26)"/><text x="66.8215%" y="303.50"></text></g><g><title>specialization_graph_of (518,216 samples, 0.39%)</title><rect x="66.5732%" y="277" width="0.3854%" height="15" fill="rgb(220,39,43)"/><text x="66.8232%" y="287.50"></text></g><g><title>layout_of (217,092 samples, 0.16%)</title><rect x="67.1345%" y="213" width="0.1614%" height="15" fill="rgb(229,68,48)"/><text x="67.3845%" y="223.50"></text></g><g><title>layout_of (237,873 samples, 0.18%)</title><rect x="67.1273%" y="229" width="0.1769%" height="15" fill="rgb(252,8,32)"/><text x="67.3773%" y="239.50"></text></g><g><title>layout_of (270,363 samples, 0.20%)</title><rect x="67.1045%" y="261" width="0.2011%" height="15" fill="rgb(223,20,43)"/><text x="67.3545%" y="271.50"></text></g><g><title>layout_of (251,113 samples, 0.19%)</title><rect x="67.1188%" y="245" width="0.1867%" height="15" fill="rgb(229,81,49)"/><text x="67.3688%" y="255.50"></text></g><g><title>layout_of (306,033 samples, 0.23%)</title><rect x="67.0864%" y="277" width="0.2276%" height="15" fill="rgb(236,28,36)"/><text x="67.3364%" y="287.50"></text></g><g><title>layout_of (355,964 samples, 0.26%)</title><rect x="67.0656%" y="293" width="0.2647%" height="15" fill="rgb(249,185,26)"/><text x="67.3156%" y="303.50"></text></g><g><title>layout_of (403,714 samples, 0.30%)</title><rect x="67.0333%" y="309" width="0.3002%" height="15" fill="rgb(249,174,33)"/><text x="67.2833%" y="319.50"></text></g><g><title>adt_def (962,620 samples, 0.72%)</title><rect x="68.3126%" y="261" width="0.7159%" height="15" fill="rgb(233,201,37)"/><text x="68.5626%" y="271.50"></text></g><g><title>metadata_decode_entry_adt_def (959,170 samples, 0.71%)</title><rect x="68.3152%" y="245" width="0.7133%" height="15" fill="rgb(221,78,26)"/><text x="68.5652%" y="255.50"></text></g><g><title>adt_def (146,383 samples, 0.11%)</title><rect x="69.2033%" y="229" width="0.1089%" height="15" fill="rgb(250,127,30)"/><text x="69.4533%" y="239.50"></text></g><g><title>metadata_decode_entry_adt_def (143,653 samples, 0.11%)</title><rect x="69.2053%" y="213" width="0.1068%" height="15" fill="rgb(230,49,44)"/><text x="69.4553%" y="223.50"></text></g><g><title>adt_def (490,705 samples, 0.36%)</title><rect x="69.4080%" y="197" width="0.3649%" height="15" fill="rgb(229,67,23)"/><text x="69.6580%" y="207.50"></text></g><g><title>metadata_decode_entry_adt_def (489,625 samples, 0.36%)</title><rect x="69.4088%" y="181" width="0.3641%" height="15" fill="rgb(249,83,47)"/><text x="69.6588%" y="191.50"></text></g><g><title>item_attrs (401,814 samples, 0.30%)</title><rect x="69.4741%" y="165" width="0.2988%" height="15" fill="rgb(215,43,3)"/><text x="69.7241%" y="175.50"></text></g><g><title>metadata_decode_entry_item_attrs (400,464 samples, 0.30%)</title><rect x="69.4751%" y="149" width="0.2978%" height="15" fill="rgb(238,154,13)"/><text x="69.7251%" y="159.50"></text></g><g><title>adt_dtorck_constraint (183,901 samples, 0.14%)</title><rect x="69.9935%" y="149" width="0.1368%" height="15" fill="rgb(219,56,2)"/><text x="70.2435%" y="159.50"></text></g><g><title>adt_dtorck_constraint (297,372 samples, 0.22%)</title><rect x="69.9148%" y="165" width="0.2211%" height="15" fill="rgb(233,0,4)"/><text x="70.1648%" y="175.50"></text></g><g><title>adt_dtorck_constraint (388,443 samples, 0.29%)</title><rect x="69.8550%" y="181" width="0.2889%" height="15" fill="rgb(235,30,7)"/><text x="70.1050%" y="191.50"></text></g><g><title>adt_dtorck_constraint (497,836 samples, 0.37%)</title><rect x="69.7784%" y="197" width="0.3702%" height="15" fill="rgb(250,79,13)"/><text x="70.0284%" y="207.50"></text></g><g><title>adt_dtorck_constraint (1,018,782 samples, 0.76%)</title><rect x="69.3958%" y="213" width="0.7576%" height="15" fill="rgb(211,146,34)"/><text x="69.6458%" y="223.50"></text></g><g><title>adt_dtorck_constraint (1,115,272 samples, 0.83%)</title><rect x="69.3288%" y="229" width="0.8294%" height="15" fill="rgb(228,22,38)"/><text x="69.5788%" y="239.50"></text></g><g><title>adt_dtorck_constraint (1,363,497 samples, 1.01%)</title><rect x="69.1748%" y="245" width="1.0140%" height="15" fill="rgb(235,168,5)"/><text x="69.4248%" y="255.50"></text></g><g><title>adt_dtorck_constraint (1,548,797 samples, 1.15%)</title><rect x="69.0463%" y="261" width="1.1518%" height="15" fill="rgb(221,155,16)"/><text x="69.2963%" y="271.50"></text></g><g><title>dropck_outlives (2,729,689 samples, 2.03%)</title><rect x="68.1974%" y="293" width="2.0300%" height="15" fill="rgb(215,215,53)"/><text x="68.4474%" y="303.50">d..</text></g><g><title>adt_dtorck_constraint (2,648,128 samples, 1.97%)</title><rect x="68.2580%" y="277" width="1.9693%" height="15" fill="rgb(223,4,10)"/><text x="68.5080%" y="287.50">a..</text></g><g><title>item_types_checking (5,689,812 samples, 4.23%)</title><rect x="66.0570%" y="341" width="4.2314%" height="15" fill="rgb(234,103,6)"/><text x="66.3070%" y="351.50">item_..</text></g><g><title>check_mod_item_types (5,681,512 samples, 4.23%)</title><rect x="66.0631%" y="325" width="4.2252%" height="15" fill="rgb(227,97,0)"/><text x="66.3131%" y="335.50">check..</text></g><g><title>typeck (3,958,832 samples, 2.94%)</title><rect x="67.3443%" y="309" width="2.9441%" height="15" fill="rgb(234,150,53)"/><text x="67.5943%" y="319.50">ty..</text></g><g><title>fn_sig (322,573 samples, 0.24%)</title><rect x="70.4584%" y="309" width="0.2399%" height="15" fill="rgb(228,201,54)"/><text x="70.7084%" y="319.50"></text></g><g><title>named_region_map (353,224 samples, 0.26%)</title><rect x="70.7725%" y="293" width="0.2627%" height="15" fill="rgb(222,22,37)"/><text x="71.0225%" y="303.50"></text></g><g><title>resolve_lifetimes (334,194 samples, 0.25%)</title><rect x="70.7866%" y="277" width="0.2485%" height="15" fill="rgb(237,53,32)"/><text x="71.0366%" y="287.50"></text></g><g><title>generics_of (468,105 samples, 0.35%)</title><rect x="70.6983%" y="309" width="0.3481%" height="15" fill="rgb(233,25,53)"/><text x="70.9483%" y="319.50"></text></g><g><title>explicit_predicates_of (219,583 samples, 0.16%)</title><rect x="71.1452%" y="277" width="0.1633%" height="15" fill="rgb(210,40,34)"/><text x="71.3952%" y="287.50"></text></g><g><title>predicates_of (401,535 samples, 0.30%)</title><rect x="71.0680%" y="309" width="0.2986%" height="15" fill="rgb(241,220,44)"/><text x="71.3180%" y="319.50"></text></g><g><title>predicates_defined_on (359,615 samples, 0.27%)</title><rect x="71.0991%" y="293" width="0.2674%" height="15" fill="rgb(235,28,35)"/><text x="71.3491%" y="303.50"></text></g><g><title>type_collecting (1,541,627 samples, 1.15%)</title><rect x="70.2907%" y="341" width="1.1465%" height="15" fill="rgb(210,56,17)"/><text x="70.5407%" y="351.50"></text></g><g><title>collect_mod_item_types (1,529,067 samples, 1.14%)</title><rect x="70.3000%" y="325" width="1.1371%" height="15" fill="rgb(224,130,29)"/><text x="70.5500%" y="335.50"></text></g><g><title>evaluate_obligation (279,646 samples, 0.21%)</title><rect x="72.0168%" y="309" width="0.2080%" height="15" fill="rgb(235,212,8)"/><text x="72.2668%" y="319.50"></text></g><g><title>check_impl_item_well_formed (1,238,834 samples, 0.92%)</title><rect x="71.5538%" y="325" width="0.9213%" height="15" fill="rgb(223,33,50)"/><text x="71.8038%" y="335.50"></text></g><g><title>adt_sized_constraint (175,732 samples, 0.13%)</title><rect x="75.1022%" y="277" width="0.1307%" height="15" fill="rgb(219,149,13)"/><text x="75.3522%" y="287.50"></text></g><g><title>adt_sized_constraint (327,156 samples, 0.24%)</title><rect x="75.0029%" y="293" width="0.2433%" height="15" fill="rgb(250,156,29)"/><text x="75.2529%" y="303.50"></text></g><g><title>predicates_of (175,701 samples, 0.13%)</title><rect x="75.3057%" y="293" width="0.1307%" height="15" fill="rgb(216,193,19)"/><text x="75.5557%" y="303.50"></text></g><g><title>predicates_defined_on (151,831 samples, 0.11%)</title><rect x="75.3234%" y="277" width="0.1129%" height="15" fill="rgb(216,135,14)"/><text x="75.5734%" y="287.50"></text></g><g><title>trait_impls_of (536,836 samples, 0.40%)</title><rect x="75.4936%" y="293" width="0.3992%" height="15" fill="rgb(241,47,5)"/><text x="75.7436%" y="303.50"></text></g><g><title>implementations_of_trait (166,322 samples, 0.12%)</title><rect x="75.7691%" y="277" width="0.1237%" height="15" fill="rgb(233,42,35)"/><text x="76.0191%" y="287.50"></text></g><g><title>evaluate_obligation (3,362,621 samples, 2.50%)</title><rect x="73.5280%" y="309" width="2.5007%" height="15" fill="rgb(231,13,6)"/><text x="73.7780%" y="319.50">ev..</text></g><g><title>type_of (182,720 samples, 0.14%)</title><rect x="75.8928%" y="293" width="0.1359%" height="15" fill="rgb(207,181,40)"/><text x="76.1428%" y="303.50"></text></g><g><title>param_env (292,183 samples, 0.22%)</title><rect x="76.1312%" y="309" width="0.2173%" height="15" fill="rgb(254,173,49)"/><text x="76.3812%" y="319.50"></text></g><g><title>region_scope_tree (231,052 samples, 0.17%)</title><rect x="76.4151%" y="309" width="0.1718%" height="15" fill="rgb(221,1,38)"/><text x="76.6651%" y="319.50"></text></g><g><title>analysis (102,581,994 samples, 76.29%)</title><rect x="0.3291%" y="373" width="76.2874%" height="15" fill="rgb(206,124,46)"/><text x="0.5791%" y="383.50">analysis</text></g><g><title>type_check_crate (58,942,357 samples, 43.83%)</title><rect x="32.7827%" y="357" width="43.8338%" height="15" fill="rgb(249,21,11)"/><text x="33.0327%" y="367.50">type_check_crate</text></g><g><title>wf_checking (6,958,358 samples, 5.17%)</title><rect x="71.4418%" y="341" width="5.1747%" height="15" fill="rgb(222,201,40)"/><text x="71.6918%" y="351.50">wf_che..</text></g><g><title>check_item_well_formed (5,568,943 samples, 4.14%)</title><rect x="72.4751%" y="325" width="4.1415%" height="15" fill="rgb(235,61,29)"/><text x="72.7251%" y="335.50">check..</text></g><g><title>codegen_crate (566,626 samples, 0.42%)</title><rect x="76.6210%" y="373" width="0.4214%" height="15" fill="rgb(219,207,3)"/><text x="76.8710%" y="383.50"></text></g><g><title>AST_validation (147,472 samples, 0.11%)</title><rect x="77.1404%" y="357" width="0.1097%" height="15" fill="rgb(222,56,46)"/><text x="77.3904%" y="367.50"></text></g><g><title>metadata_load_macro (177,022 samples, 0.13%)</title><rect x="85.2900%" y="325" width="0.1316%" height="15" fill="rgb(239,76,54)"/><text x="85.5400%" y="335.50"></text></g><g><title>metadata_register_crate (7,973,929 samples, 5.93%)</title><rect x="85.4216%" y="325" width="5.9300%" height="15" fill="rgb(231,124,27)"/><text x="85.6716%" y="335.50">metadata..</text></g><g><title>metadata_register_crate (6,827,025 samples, 5.08%)</title><rect x="86.2746%" y="309" width="5.0771%" height="15" fill="rgb(249,195,6)"/><text x="86.5246%" y="319.50">metada..</text></g><g><title>metadata_register_crate (5,977,898 samples, 4.45%)</title><rect x="86.9060%" y="293" width="4.4456%" height="15" fill="rgb(237,174,47)"/><text x="87.1560%" y="303.50">metad..</text></g><g><title>metadata_register_crate (5,068,178 samples, 3.77%)</title><rect x="87.5826%" y="277" width="3.7691%" height="15" fill="rgb(206,201,31)"/><text x="87.8326%" y="287.50">meta..</text></g><g><title>metadata_register_crate (165,553 samples, 0.12%)</title><rect x="91.2285%" y="261" width="0.1231%" height="15" fill="rgb(231,57,52)"/><text x="91.4785%" y="271.50"></text></g><g><title>macro_expand_crate (18,961,491 samples, 14.10%)</title><rect x="77.3300%" y="357" width="14.1011%" height="15" fill="rgb(248,177,22)"/><text x="77.5800%" y="367.50">macro_expand_crate</text></g><g><title>expand_crate (18,944,571 samples, 14.09%)</title><rect x="77.3426%" y="341" width="14.0886%" height="15" fill="rgb(215,211,37)"/><text x="77.5926%" y="351.50">expand_crate</text></g><g><title>late_resolve_crate (1,631,548 samples, 1.21%)</title><rect x="91.5906%" y="341" width="1.2133%" height="15" fill="rgb(241,128,51)"/><text x="91.8406%" y="351.50"></text></g><g><title>configure_and_expand (21,275,917 samples, 15.82%)</title><rect x="77.0424%" y="373" width="15.8223%" height="15" fill="rgb(227,165,31)"/><text x="77.2924%" y="383.50">configure_and_expand</text></g><g><title>resolve_crate (1,861,211 samples, 1.38%)</title><rect x="91.4806%" y="357" width="1.3841%" height="15" fill="rgb(228,167,24)"/><text x="91.7306%" y="367.50"></text></g><g><title>early_lint_checks (269,133 samples, 0.20%)</title><rect x="92.9717%" y="373" width="0.2001%" height="15" fill="rgb(228,143,12)"/><text x="93.2217%" y="383.50"></text></g><g><title>free_global_ctxt (4,363,329 samples, 3.24%)</title><rect x="93.1718%" y="373" width="3.2449%" height="15" fill="rgb(249,149,8)"/><text x="93.4218%" y="383.50">fre..</text></g><g><title>generate_crate_metadata (1,014,221 samples, 0.75%)</title><rect x="96.4167%" y="373" width="0.7542%" height="15" fill="rgb(243,35,44)"/><text x="96.6667%" y="383.50"></text></g><g><title>hir_lowering (1,904,801 samples, 1.42%)</title><rect x="97.1710%" y="373" width="1.4165%" height="15" fill="rgb(246,89,9)"/><text x="97.4210%" y="383.50"></text></g><g><title>parse_crate (278,753 samples, 0.21%)</title><rect x="98.6371%" y="373" width="0.2073%" height="15" fill="rgb(233,213,13)"/><text x="98.8871%" y="383.50"></text></g><g><title>prepare_outputs (196,042 samples, 0.15%)</title><rect x="98.8481%" y="373" width="0.1458%" height="15" fill="rgb(233,141,41)"/><text x="99.0981%" y="383.50"></text></g><g><title>self_profile_alloc_query_strings (920,371 samples, 0.68%)</title><rect x="98.9939%" y="373" width="0.6845%" height="15" fill="rgb(239,167,4)"/><text x="99.2439%" y="383.50"></text></g><g><title>all (134,467,720 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(209,217,16)"/><text x="0.2500%" y="415.50"></text></g><g><title>rustc (134,467,720 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(219,88,35)"/><text x="0.2500%" y="399.50">rustc</text></g><g><title>write_crate_metadata (325,834 samples, 0.24%)</title><rect x="99.7577%" y="373" width="0.2423%" height="15" fill="rgb(220,193,23)"/><text x="100.0077%" y="383.50"></text></g></svg></svg>