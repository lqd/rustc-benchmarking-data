<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="661.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="661.00"> </text><svg id="frames" x="10" width="1180"><g><title>mir_promoted (510,007 samples, 0.36%)</title><rect x="8.0178%" y="533" width="0.3605%" height="15" fill="rgb(227,0,7)"/><text x="8.2678%" y="543.50"></text></g><g><title>mir_const_qualif_const_arg (429,346 samples, 0.30%)</title><rect x="8.0748%" y="517" width="0.3035%" height="15" fill="rgb(217,0,24)"/><text x="8.3248%" y="527.50"></text></g><g><title>mir_const (363,795 samples, 0.26%)</title><rect x="8.1212%" y="501" width="0.2571%" height="15" fill="rgb(221,193,54)"/><text x="8.3712%" y="511.50"></text></g><g><title>unsafety_check_result_for_const_arg (226,982 samples, 0.16%)</title><rect x="8.2179%" y="485" width="0.1604%" height="15" fill="rgb(248,212,6)"/><text x="8.4679%" y="495.50"></text></g><g><title>mir_built (197,172 samples, 0.14%)</title><rect x="8.2389%" y="469" width="0.1394%" height="15" fill="rgb(208,68,35)"/><text x="8.4889%" y="479.50"></text></g><g><title>mir_borrowck_const_arg (1,294,174 samples, 0.91%)</title><rect x="7.4661%" y="549" width="0.9148%" height="15" fill="rgb(232,128,0)"/><text x="7.7161%" y="559.50"></text></g><g><title>param_env (273,566 samples, 0.19%)</title><rect x="9.2100%" y="517" width="0.1934%" height="15" fill="rgb(207,160,47)"/><text x="9.4600%" y="527.50"></text></g><g><title>item_attrs (244,191 samples, 0.17%)</title><rect x="9.6871%" y="485" width="0.1726%" height="15" fill="rgb(228,23,34)"/><text x="9.9371%" y="495.50"></text></g><g><title>metadata_decode_entry_item_attrs (238,271 samples, 0.17%)</title><rect x="9.6913%" y="469" width="0.1684%" height="15" fill="rgb(218,30,26)"/><text x="9.9413%" y="479.50"></text></g><g><title>codegen_fn_attrs (357,402 samples, 0.25%)</title><rect x="9.6181%" y="501" width="0.2526%" height="15" fill="rgb(220,122,19)"/><text x="9.8681%" y="511.50"></text></g><g><title>is_copy_raw (196,482 samples, 0.14%)</title><rect x="11.5472%" y="485" width="0.1389%" height="15" fill="rgb(250,228,42)"/><text x="11.7972%" y="495.50"></text></g><g><title>evaluate_obligation (171,482 samples, 0.12%)</title><rect x="11.5648%" y="469" width="0.1212%" height="15" fill="rgb(240,193,28)"/><text x="11.8148%" y="479.50"></text></g><g><title>adt_drop_tys (189,773 samples, 0.13%)</title><rect x="11.7230%" y="469" width="0.1341%" height="15" fill="rgb(216,20,37)"/><text x="11.9730%" y="479.50"></text></g><g><title>needs_drop_raw (591,197 samples, 0.42%)</title><rect x="11.6860%" y="485" width="0.4179%" height="15" fill="rgb(206,188,39)"/><text x="11.9360%" y="495.50"></text></g><g><title>is_copy_raw (349,134 samples, 0.25%)</title><rect x="11.8571%" y="469" width="0.2468%" height="15" fill="rgb(217,207,13)"/><text x="12.1071%" y="479.50"></text></g><g><title>evaluate_obligation (306,924 samples, 0.22%)</title><rect x="11.8870%" y="453" width="0.2169%" height="15" fill="rgb(231,73,38)"/><text x="12.1370%" y="463.50"></text></g><g><title>codegen_fulfill_obligation (208,315 samples, 0.15%)</title><rect x="12.1995%" y="469" width="0.1472%" height="15" fill="rgb(225,20,46)"/><text x="12.4495%" y="479.50"></text></g><g><title>impl_parent (195,354 samples, 0.14%)</title><rect x="12.6236%" y="453" width="0.1381%" height="15" fill="rgb(210,31,41)"/><text x="12.8736%" y="463.50"></text></g><g><title>specialization_graph_of (1,048,701 samples, 0.74%)</title><rect x="12.3789%" y="469" width="0.7412%" height="15" fill="rgb(221,200,47)"/><text x="12.6289%" y="479.50"></text></g><g><title>impl_trait_ref (507,152 samples, 0.36%)</title><rect x="12.7617%" y="453" width="0.3585%" height="15" fill="rgb(226,26,5)"/><text x="13.0117%" y="463.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (445,252 samples, 0.31%)</title><rect x="12.8055%" y="437" width="0.3147%" height="15" fill="rgb(249,33,26)"/><text x="13.0555%" y="447.50"></text></g><g><title>resolve_instance (1,504,447 samples, 1.06%)</title><rect x="12.1039%" y="485" width="1.0634%" height="15" fill="rgb(235,183,28)"/><text x="12.3539%" y="495.50"></text></g><g><title>thir_body (1,074,736 samples, 0.76%)</title><rect x="13.1770%" y="485" width="0.7597%" height="15" fill="rgb(221,5,38)"/><text x="13.4270%" y="495.50"></text></g><g><title>mir_const (7,214,622 samples, 5.10%)</title><rect x="8.8421%" y="533" width="5.0995%" height="15" fill="rgb(247,18,42)"/><text x="9.0921%" y="543.50">mir_co..</text></g><g><title>unsafety_check_result (6,420,610 samples, 4.54%)</title><rect x="9.4033%" y="517" width="4.5383%" height="15" fill="rgb(241,131,45)"/><text x="9.6533%" y="527.50">unsaf..</text></g><g><title>mir_built (5,759,434 samples, 4.07%)</title><rect x="9.8707%" y="501" width="4.0709%" height="15" fill="rgb(249,31,29)"/><text x="10.1207%" y="511.50">mir_..</text></g><g><title>has_structural_eq_impls (164,901 samples, 0.12%)</title><rect x="14.0914%" y="517" width="0.1166%" height="15" fill="rgb(225,111,53)"/><text x="14.3414%" y="527.50"></text></g><g><title>evaluate_obligation (154,511 samples, 0.11%)</title><rect x="14.0988%" y="501" width="0.1092%" height="15" fill="rgb(238,160,17)"/><text x="14.3488%" y="511.50"></text></g><g><title>mir_const (677,417 samples, 0.48%)</title><rect x="14.2490%" y="517" width="0.4788%" height="15" fill="rgb(214,148,48)"/><text x="14.4990%" y="527.50"></text></g><g><title>unsafety_check_result (468,134 samples, 0.33%)</title><rect x="14.3970%" y="501" width="0.3309%" height="15" fill="rgb(232,36,49)"/><text x="14.6470%" y="511.50"></text></g><g><title>mir_built (392,203 samples, 0.28%)</title><rect x="14.4506%" y="485" width="0.2772%" height="15" fill="rgb(209,103,24)"/><text x="14.7006%" y="495.50"></text></g><g><title>mir_promoted (8,999,664 samples, 6.36%)</title><rect x="8.3808%" y="549" width="6.3612%" height="15" fill="rgb(229,88,8)"/><text x="8.6308%" y="559.50">mir_prom..</text></g><g><title>mir_const_qualif (1,132,395 samples, 0.80%)</title><rect x="13.9416%" y="533" width="0.8004%" height="15" fill="rgb(213,181,19)"/><text x="14.1916%" y="543.50"></text></g><g><title>type_op_normalize_fn_sig (489,575 samples, 0.35%)</title><rect x="14.8358%" y="549" width="0.3460%" height="15" fill="rgb(254,191,54)"/><text x="15.0858%" y="559.50"></text></g><g><title>normalize_projection_ty (323,994 samples, 0.23%)</title><rect x="14.9528%" y="533" width="0.2290%" height="15" fill="rgb(241,83,37)"/><text x="15.2028%" y="543.50"></text></g><g><title>type_op_normalize_predicate (211,082 samples, 0.15%)</title><rect x="15.1818%" y="549" width="0.1492%" height="15" fill="rgb(233,36,39)"/><text x="15.4318%" y="559.50"></text></g><g><title>normalize_projection_ty (202,762 samples, 0.14%)</title><rect x="15.1877%" y="533" width="0.1433%" height="15" fill="rgb(226,3,54)"/><text x="15.4377%" y="543.50"></text></g><g><title>type_op_prove_predicate (1,541,068 samples, 1.09%)</title><rect x="15.3838%" y="549" width="1.0893%" height="15" fill="rgb(245,192,40)"/><text x="15.6338%" y="559.50"></text></g><g><title>MIR_borrow_checking (22,082,816 samples, 15.61%)</title><rect x="0.8678%" y="581" width="15.6087%" height="15" fill="rgb(238,167,29)"/><text x="1.1178%" y="591.50">MIR_borrow_checking</text></g><g><title>mir_borrowck (21,939,005 samples, 15.51%)</title><rect x="0.9694%" y="565" width="15.5071%" height="15" fill="rgb(232,182,51)"/><text x="1.2194%" y="575.50">mir_borrowck</text></g><g><title>mir_drops_elaborated_and_const_checked (197,943 samples, 0.14%)</title><rect x="16.8494%" y="549" width="0.1399%" height="15" fill="rgb(231,60,39)"/><text x="17.0994%" y="559.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (610,137 samples, 0.43%)</title><rect x="16.5612%" y="565" width="0.4313%" height="15" fill="rgb(208,69,12)"/><text x="16.8112%" y="575.50"></text></g><g><title>MIR_effect_checking (734,698 samples, 0.52%)</title><rect x="16.4765%" y="581" width="0.5193%" height="15" fill="rgb(235,93,37)"/><text x="16.7265%" y="591.50"></text></g><g><title>hir_module_items (152,581 samples, 0.11%)</title><rect x="16.9958%" y="581" width="0.1078%" height="15" fill="rgb(213,116,39)"/><text x="17.2458%" y="591.50"></text></g><g><title>fn_sig (191,133 samples, 0.14%)</title><rect x="17.3354%" y="533" width="0.1351%" height="15" fill="rgb(222,207,29)"/><text x="17.5854%" y="543.50"></text></g><g><title>codegen_fn_attrs (178,791 samples, 0.13%)</title><rect x="17.5129%" y="517" width="0.1264%" height="15" fill="rgb(206,96,30)"/><text x="17.7629%" y="527.50"></text></g><g><title>codegen_fn_attrs (498,176 samples, 0.35%)</title><rect x="17.2903%" y="549" width="0.3521%" height="15" fill="rgb(218,138,4)"/><text x="17.5403%" y="559.50"></text></g><g><title>should_inherit_track_caller (243,192 samples, 0.17%)</title><rect x="17.4705%" y="533" width="0.1719%" height="15" fill="rgb(250,191,14)"/><text x="17.7205%" y="543.50"></text></g><g><title>check_mod_attrs (735,368 samples, 0.52%)</title><rect x="17.1228%" y="565" width="0.5198%" height="15" fill="rgb(239,60,40)"/><text x="17.3728%" y="575.50"></text></g><g><title>check_mod_unstable_api_usage (310,544 samples, 0.22%)</title><rect x="17.7661%" y="565" width="0.2195%" height="15" fill="rgb(206,27,48)"/><text x="18.0161%" y="575.50"></text></g><g><title>misc_checking_1 (1,309,594 samples, 0.93%)</title><rect x="17.1042%" y="581" width="0.9257%" height="15" fill="rgb(225,35,8)"/><text x="17.3542%" y="591.50"></text></g><g><title>liveness_and_intrinsic_checking (492,756 samples, 0.35%)</title><rect x="18.0309%" y="565" width="0.3483%" height="15" fill="rgb(250,213,24)"/><text x="18.2809%" y="575.50"></text></g><g><title>check_mod_liveness (388,475 samples, 0.27%)</title><rect x="18.1046%" y="549" width="0.2746%" height="15" fill="rgb(247,123,22)"/><text x="18.3546%" y="559.50"></text></g><g><title>misc_checking_2 (918,261 samples, 0.65%)</title><rect x="18.0298%" y="581" width="0.6491%" height="15" fill="rgb(231,138,38)"/><text x="18.2798%" y="591.50"></text></g><g><title>match_checking (423,995 samples, 0.30%)</title><rect x="18.3792%" y="565" width="0.2997%" height="15" fill="rgb(231,145,46)"/><text x="18.6292%" y="575.50"></text></g><g><title>check_match (385,254 samples, 0.27%)</title><rect x="18.4066%" y="549" width="0.2723%" height="15" fill="rgb(251,118,11)"/><text x="18.6566%" y="559.50"></text></g><g><title>check_private_in_public (142,051 samples, 0.10%)</title><rect x="18.6851%" y="565" width="0.1004%" height="15" fill="rgb(217,147,25)"/><text x="18.9351%" y="575.50"></text></g><g><title>death_checking (346,734 samples, 0.25%)</title><rect x="18.7855%" y="565" width="0.2451%" height="15" fill="rgb(247,81,37)"/><text x="19.0355%" y="575.50"></text></g><g><title>eval_to_const_value_raw (179,722 samples, 0.13%)</title><rect x="19.6684%" y="533" width="0.1270%" height="15" fill="rgb(209,12,38)"/><text x="19.9184%" y="543.50"></text></g><g><title>eval_to_const_value_raw (177,442 samples, 0.13%)</title><rect x="19.6700%" y="517" width="0.1254%" height="15" fill="rgb(227,1,9)"/><text x="19.9200%" y="527.50"></text></g><g><title>eval_to_allocation_raw (171,182 samples, 0.12%)</title><rect x="19.6744%" y="501" width="0.1210%" height="15" fill="rgb(248,47,43)"/><text x="19.9244%" y="511.50"></text></g><g><title>param_env (293,311 samples, 0.21%)</title><rect x="19.7954%" y="533" width="0.2073%" height="15" fill="rgb(221,10,30)"/><text x="20.0454%" y="543.50"></text></g><g><title>crate_lints (2,772,441 samples, 1.96%)</title><rect x="19.0318%" y="549" width="1.9596%" height="15" fill="rgb(210,229,1)"/><text x="19.2818%" y="559.50">c..</text></g><g><title>type_of (1,392,876 samples, 0.98%)</title><rect x="20.0069%" y="533" width="0.9845%" height="15" fill="rgb(222,148,37)"/><text x="20.2569%" y="543.50"></text></g><g><title>metadata_decode_entry_type_of (923,549 samples, 0.65%)</title><rect x="20.3387%" y="517" width="0.6528%" height="15" fill="rgb(234,67,33)"/><text x="20.5887%" y="527.50"></text></g><g><title>lint_checking (3,251,306 samples, 2.30%)</title><rect x="19.0306%" y="565" width="2.2981%" height="15" fill="rgb(247,98,35)"/><text x="19.2806%" y="575.50">l..</text></g><g><title>module_lints (477,175 samples, 0.34%)</title><rect x="20.9915%" y="549" width="0.3373%" height="15" fill="rgb(247,138,52)"/><text x="21.2415%" y="559.50"></text></g><g><title>lint_mod (471,875 samples, 0.33%)</title><rect x="20.9952%" y="533" width="0.3335%" height="15" fill="rgb(213,79,30)"/><text x="21.2452%" y="543.50"></text></g><g><title>privacy_access_levels (159,942 samples, 0.11%)</title><rect x="21.3287%" y="565" width="0.1131%" height="15" fill="rgb(246,177,23)"/><text x="21.5787%" y="575.50"></text></g><g><title>privacy_checking_modules (605,437 samples, 0.43%)</title><rect x="21.4418%" y="565" width="0.4279%" height="15" fill="rgb(230,62,27)"/><text x="21.6918%" y="575.50"></text></g><g><title>check_mod_privacy (601,707 samples, 0.43%)</title><rect x="21.4444%" y="549" width="0.4253%" height="15" fill="rgb(216,154,8)"/><text x="21.6944%" y="559.50"></text></g><g><title>misc_checking_3 (4,525,990 samples, 3.20%)</title><rect x="18.6789%" y="581" width="3.1991%" height="15" fill="rgb(244,35,45)"/><text x="18.9289%" y="591.50">mis..</text></g><g><title>impl_trait_ref (152,962 samples, 0.11%)</title><rect x="22.0857%" y="485" width="0.1081%" height="15" fill="rgb(251,115,12)"/><text x="22.3357%" y="495.50"></text></g><g><title>adt_destructor (320,554 samples, 0.23%)</title><rect x="21.9873%" y="533" width="0.2266%" height="15" fill="rgb(240,54,50)"/><text x="22.2373%" y="543.50"></text></g><g><title>coherent_trait (308,124 samples, 0.22%)</title><rect x="21.9961%" y="517" width="0.2178%" height="15" fill="rgb(233,84,52)"/><text x="22.2461%" y="527.50"></text></g><g><title>specialization_graph_of (306,774 samples, 0.22%)</title><rect x="21.9970%" y="501" width="0.2168%" height="15" fill="rgb(207,117,47)"/><text x="22.2470%" y="511.50"></text></g><g><title>impl_parent (1,727,579 samples, 1.22%)</title><rect x="24.3229%" y="517" width="1.2211%" height="15" fill="rgb(249,43,39)"/><text x="24.5729%" y="527.50"></text></g><g><title>metadata_decode_entry_impl_parent (1,049,383 samples, 0.74%)</title><rect x="24.8022%" y="501" width="0.7417%" height="15" fill="rgb(209,38,44)"/><text x="25.0522%" y="511.50"></text></g><g><title>impl_trait_ref (4,319,056 samples, 3.05%)</title><rect x="25.5440%" y="517" width="3.0528%" height="15" fill="rgb(236,212,23)"/><text x="25.7940%" y="527.50">imp..</text></g><g><title>metadata_decode_entry_impl_trait_ref (3,638,252 samples, 2.57%)</title><rect x="26.0252%" y="501" width="2.5716%" height="15" fill="rgb(242,79,21)"/><text x="26.2752%" y="511.50">me..</text></g><g><title>coherent_trait (9,992,611 samples, 7.06%)</title><rect x="21.9617%" y="549" width="7.0630%" height="15" fill="rgb(211,96,35)"/><text x="22.2117%" y="559.50">coherent_..</text></g><g><title>specialization_graph_of (9,428,635 samples, 6.66%)</title><rect x="22.3604%" y="533" width="6.6644%" height="15" fill="rgb(253,215,40)"/><text x="22.6104%" y="543.50">specializ..</text></g><g><title>trait_impls_of (603,748 samples, 0.43%)</title><rect x="28.5980%" y="517" width="0.4267%" height="15" fill="rgb(211,81,21)"/><text x="28.8480%" y="527.50"></text></g><g><title>implementations_of_trait (189,812 samples, 0.13%)</title><rect x="28.8906%" y="501" width="0.1342%" height="15" fill="rgb(208,190,38)"/><text x="29.1406%" y="511.50"></text></g><g><title>coherence_checking (10,110,913 samples, 7.15%)</title><rect x="21.9447%" y="565" width="7.1467%" height="15" fill="rgb(235,213,38)"/><text x="22.1947%" y="575.50">coherence_..</text></g><g><title>associated_item (231,384 samples, 0.16%)</title><rect x="40.7251%" y="501" width="0.1635%" height="15" fill="rgb(237,122,38)"/><text x="40.9751%" y="511.50"></text></g><g><title>metadata_decode_entry_associated_item (186,442 samples, 0.13%)</title><rect x="40.7569%" y="485" width="0.1318%" height="15" fill="rgb(244,218,35)"/><text x="41.0069%" y="495.50"></text></g><g><title>associated_items (327,424 samples, 0.23%)</title><rect x="40.6717%" y="517" width="0.2314%" height="15" fill="rgb(240,68,47)"/><text x="40.9217%" y="527.50"></text></g><g><title>dropck_outlives (145,963 samples, 0.10%)</title><rect x="40.9404%" y="517" width="0.1032%" height="15" fill="rgb(210,16,53)"/><text x="41.1904%" y="527.50"></text></g><g><title>mir_borrowck (145,192 samples, 0.10%)</title><rect x="41.1788%" y="453" width="0.1026%" height="15" fill="rgb(235,124,12)"/><text x="41.4288%" y="463.50"></text></g><g><title>mir_for_ctfe (208,592 samples, 0.15%)</title><rect x="41.1343%" y="485" width="0.1474%" height="15" fill="rgb(224,169,11)"/><text x="41.3843%" y="495.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (189,692 samples, 0.13%)</title><rect x="41.1476%" y="469" width="0.1341%" height="15" fill="rgb(250,166,2)"/><text x="41.3976%" y="479.50"></text></g><g><title>eval_to_allocation_raw (327,494 samples, 0.23%)</title><rect x="41.0506%" y="501" width="0.2315%" height="15" fill="rgb(242,216,29)"/><text x="41.3006%" y="511.50"></text></g><g><title>mir_for_ctfe (174,751 samples, 0.12%)</title><rect x="41.3660%" y="469" width="0.1235%" height="15" fill="rgb(230,116,27)"/><text x="41.6160%" y="479.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (155,710 samples, 0.11%)</title><rect x="41.3794%" y="453" width="0.1101%" height="15" fill="rgb(228,99,48)"/><text x="41.6294%" y="463.50"></text></g><g><title>eval_to_const_value_raw (632,628 samples, 0.45%)</title><rect x="41.0436%" y="517" width="0.4472%" height="15" fill="rgb(253,11,6)"/><text x="41.2936%" y="527.50"></text></g><g><title>eval_to_const_value_raw (295,234 samples, 0.21%)</title><rect x="41.2821%" y="501" width="0.2087%" height="15" fill="rgb(247,143,39)"/><text x="41.5321%" y="511.50"></text></g><g><title>eval_to_allocation_raw (288,394 samples, 0.20%)</title><rect x="41.2869%" y="485" width="0.2038%" height="15" fill="rgb(236,97,10)"/><text x="41.5369%" y="495.50"></text></g><g><title>generics_of (510,818 samples, 0.36%)</title><rect x="43.4348%" y="501" width="0.3611%" height="15" fill="rgb(233,208,19)"/><text x="43.6848%" y="511.50"></text></g><g><title>metadata_decode_entry_generics_of (363,954 samples, 0.26%)</title><rect x="43.5386%" y="485" width="0.2573%" height="15" fill="rgb(216,164,2)"/><text x="43.7886%" y="495.50"></text></g><g><title>impl_trait_ref (894,376 samples, 0.63%)</title><rect x="43.9073%" y="501" width="0.6322%" height="15" fill="rgb(220,129,5)"/><text x="44.1573%" y="511.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (751,376 samples, 0.53%)</title><rect x="44.0083%" y="485" width="0.5311%" height="15" fill="rgb(242,17,10)"/><text x="44.2583%" y="495.50"></text></g><g><title>explicit_predicates_of (363,043 samples, 0.26%)</title><rect x="44.9375%" y="469" width="0.2566%" height="15" fill="rgb(242,107,0)"/><text x="45.1875%" y="479.50"></text></g><g><title>predicates_of (993,360 samples, 0.70%)</title><rect x="44.5745%" y="501" width="0.7021%" height="15" fill="rgb(251,28,31)"/><text x="44.8245%" y="511.50"></text></g><g><title>predicates_defined_on (664,518 samples, 0.47%)</title><rect x="44.8069%" y="485" width="0.4697%" height="15" fill="rgb(233,223,10)"/><text x="45.0569%" y="495.50"></text></g><g><title>specializes (2,113,554 samples, 1.49%)</title><rect x="45.2766%" y="501" width="1.4939%" height="15" fill="rgb(215,21,27)"/><text x="45.5266%" y="511.50"></text></g><g><title>param_env (1,236,525 samples, 0.87%)</title><rect x="45.8965%" y="485" width="0.8740%" height="15" fill="rgb(232,23,21)"/><text x="46.1465%" y="495.50"></text></g><g><title>def_span (569,741 samples, 0.40%)</title><rect x="46.3678%" y="469" width="0.4027%" height="15" fill="rgb(244,5,23)"/><text x="46.6178%" y="479.50"></text></g><g><title>metadata_decode_entry_def_span (505,780 samples, 0.36%)</title><rect x="46.4131%" y="453" width="0.3575%" height="15" fill="rgb(226,81,46)"/><text x="46.6631%" y="463.50"></text></g><g><title>trait_impls_of (576,768 samples, 0.41%)</title><rect x="46.7795%" y="501" width="0.4077%" height="15" fill="rgb(247,70,30)"/><text x="47.0295%" y="511.50"></text></g><g><title>implementations_of_trait (244,086 samples, 0.17%)</title><rect x="47.0147%" y="485" width="0.1725%" height="15" fill="rgb(212,68,19)"/><text x="47.2647%" y="495.50"></text></g><g><title>metadata_decode_entry_implementations_of_trait (166,544 samples, 0.12%)</title><rect x="47.0695%" y="469" width="0.1177%" height="15" fill="rgb(240,187,13)"/><text x="47.3195%" y="479.50"></text></g><g><title>evaluate_obligation (8,073,241 samples, 5.71%)</title><rect x="41.4907%" y="517" width="5.7064%" height="15" fill="rgb(223,113,26)"/><text x="41.7407%" y="527.50">evaluat..</text></g><g><title>impl_trait_ref (154,080 samples, 0.11%)</title><rect x="47.3854%" y="517" width="0.1089%" height="15" fill="rgb(206,192,2)"/><text x="47.6354%" y="527.50"></text></g><g><title>opt_const_param_of (3,464,141 samples, 2.45%)</title><rect x="47.7989%" y="517" width="2.4485%" height="15" fill="rgb(241,108,4)"/><text x="48.0489%" y="527.50">op..</text></g><g><title>typeck (3,420,469 samples, 2.42%)</title><rect x="47.8298%" y="501" width="2.4177%" height="15" fill="rgb(247,173,49)"/><text x="48.0798%" y="511.50">ty..</text></g><g><title>param_env (355,743 samples, 0.25%)</title><rect x="50.2617%" y="517" width="0.2514%" height="15" fill="rgb(224,114,35)"/><text x="50.5117%" y="527.50"></text></g><g><title>predicates_of (165,103 samples, 0.12%)</title><rect x="50.3965%" y="501" width="0.1167%" height="15" fill="rgb(245,159,27)"/><text x="50.6465%" y="511.50"></text></g><g><title>predicates_defined_on (143,483 samples, 0.10%)</title><rect x="50.4118%" y="485" width="0.1014%" height="15" fill="rgb(245,172,44)"/><text x="50.6618%" y="495.50"></text></g><g><title>predicates_of (241,694 samples, 0.17%)</title><rect x="50.5181%" y="517" width="0.1708%" height="15" fill="rgb(236,23,11)"/><text x="50.7681%" y="527.50"></text></g><g><title>predicates_defined_on (166,564 samples, 0.12%)</title><rect x="50.5712%" y="501" width="0.1177%" height="15" fill="rgb(205,117,38)"/><text x="50.8212%" y="511.50"></text></g><g><title>specializes (148,881 samples, 0.11%)</title><rect x="50.7580%" y="517" width="0.1052%" height="15" fill="rgb(237,72,25)"/><text x="51.0080%" y="527.50"></text></g><g><title>associated_item (180,563 samples, 0.13%)</title><rect x="52.5799%" y="485" width="0.1276%" height="15" fill="rgb(244,70,9)"/><text x="52.8299%" y="495.50"></text></g><g><title>associated_items (252,183 samples, 0.18%)</title><rect x="52.5351%" y="501" width="0.1782%" height="15" fill="rgb(217,125,39)"/><text x="52.7851%" y="511.50"></text></g><g><title>eval_to_const_value_raw (182,272 samples, 0.13%)</title><rect x="52.7891%" y="501" width="0.1288%" height="15" fill="rgb(235,36,10)"/><text x="53.0391%" y="511.50"></text></g><g><title>eval_to_const_value_raw (180,832 samples, 0.13%)</title><rect x="52.7901%" y="485" width="0.1278%" height="15" fill="rgb(251,123,47)"/><text x="53.0401%" y="495.50"></text></g><g><title>eval_to_allocation_raw (177,272 samples, 0.13%)</title><rect x="52.7926%" y="469" width="0.1253%" height="15" fill="rgb(221,13,13)"/><text x="53.0426%" y="479.50"></text></g><g><title>generics_of (228,343 samples, 0.16%)</title><rect x="53.5289%" y="485" width="0.1614%" height="15" fill="rgb(238,131,9)"/><text x="53.7789%" y="495.50"></text></g><g><title>metadata_decode_entry_generics_of (178,572 samples, 0.13%)</title><rect x="53.5641%" y="469" width="0.1262%" height="15" fill="rgb(211,50,8)"/><text x="53.8141%" y="479.50"></text></g><g><title>impl_trait_ref (352,233 samples, 0.25%)</title><rect x="53.7096%" y="485" width="0.2490%" height="15" fill="rgb(245,182,24)"/><text x="53.9596%" y="495.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (300,793 samples, 0.21%)</title><rect x="53.7460%" y="469" width="0.2126%" height="15" fill="rgb(242,14,37)"/><text x="53.9960%" y="479.50"></text></g><g><title>specializes (196,122 samples, 0.14%)</title><rect x="54.0309%" y="485" width="0.1386%" height="15" fill="rgb(246,228,12)"/><text x="54.2809%" y="495.50"></text></g><g><title>trait_impls_of (230,712 samples, 0.16%)</title><rect x="54.1735%" y="485" width="0.1631%" height="15" fill="rgb(213,55,15)"/><text x="54.4235%" y="495.50"></text></g><g><title>evaluate_obligation (2,017,112 samples, 1.43%)</title><rect x="52.9179%" y="501" width="1.4257%" height="15" fill="rgb(209,9,3)"/><text x="53.1679%" y="511.50"></text></g><g><title>method_autoderef_steps (151,851 samples, 0.11%)</title><rect x="54.6618%" y="501" width="0.1073%" height="15" fill="rgb(230,59,30)"/><text x="54.9118%" y="511.50"></text></g><g><title>predicates_of (156,783 samples, 0.11%)</title><rect x="54.7745%" y="501" width="0.1108%" height="15" fill="rgb(209,121,21)"/><text x="55.0245%" y="511.50"></text></g><g><title>typeck (5,672,924 samples, 4.01%)</title><rect x="50.9221%" y="517" width="4.0098%" height="15" fill="rgb(220,109,13)"/><text x="51.1721%" y="527.50">type..</text></g><g><title>param_env (159,332 samples, 0.11%)</title><rect x="55.1431%" y="501" width="0.1126%" height="15" fill="rgb(232,18,1)"/><text x="55.3931%" y="511.50"></text></g><g><title>typeck_const_arg (494,854 samples, 0.35%)</title><rect x="54.9318%" y="517" width="0.3498%" height="15" fill="rgb(215,41,42)"/><text x="55.1818%" y="527.50"></text></g><g><title>item_bodies_checking (37,065,643 samples, 26.20%)</title><rect x="29.1066%" y="565" width="26.1990%" height="15" fill="rgb(224,123,36)"/><text x="29.3566%" y="575.50">item_bodies_checking</text></g><g><title>typeck_item_bodies (37,062,093 samples, 26.20%)</title><rect x="29.1091%" y="549" width="26.1965%" height="15" fill="rgb(240,125,3)"/><text x="29.3591%" y="559.50">typeck_item_bodies</text></g><g><title>typeck (36,972,943 samples, 26.13%)</title><rect x="29.1721%" y="533" width="26.1335%" height="15" fill="rgb(205,98,50)"/><text x="29.4221%" y="543.50">typeck</text></g><g><title>evaluate_obligation (276,243 samples, 0.20%)</title><rect x="55.6218%" y="533" width="0.1953%" height="15" fill="rgb(205,185,37)"/><text x="55.8718%" y="543.50"></text></g><g><title>associated_item (154,800 samples, 0.11%)</title><rect x="56.0873%" y="501" width="0.1094%" height="15" fill="rgb(238,207,15)"/><text x="56.3373%" y="511.50"></text></g><g><title>associated_items (200,733 samples, 0.14%)</title><rect x="56.0616%" y="517" width="0.1419%" height="15" fill="rgb(213,199,42)"/><text x="56.3116%" y="527.50"></text></g><g><title>item_types_checking (1,419,596 samples, 1.00%)</title><rect x="55.3056%" y="565" width="1.0034%" height="15" fill="rgb(235,201,11)"/><text x="55.5556%" y="575.50"></text></g><g><title>check_mod_item_types (1,414,656 samples, 1.00%)</title><rect x="55.3091%" y="549" width="0.9999%" height="15" fill="rgb(207,46,11)"/><text x="55.5591%" y="559.50"></text></g><g><title>typeck (546,366 samples, 0.39%)</title><rect x="55.9228%" y="533" width="0.3862%" height="15" fill="rgb(241,35,35)"/><text x="56.1728%" y="543.50"></text></g><g><title>fn_sig (205,104 samples, 0.14%)</title><rect x="56.4258%" y="533" width="0.1450%" height="15" fill="rgb(243,32,47)"/><text x="56.6758%" y="543.50"></text></g><g><title>named_region_map (279,353 samples, 0.20%)</title><rect x="56.6069%" y="517" width="0.1975%" height="15" fill="rgb(247,202,23)"/><text x="56.8569%" y="527.50"></text></g><g><title>resolve_lifetimes (270,983 samples, 0.19%)</title><rect x="56.6128%" y="501" width="0.1915%" height="15" fill="rgb(219,102,11)"/><text x="56.8628%" y="511.50"></text></g><g><title>lint_levels (148,371 samples, 0.10%)</title><rect x="56.6995%" y="485" width="0.1049%" height="15" fill="rgb(243,110,44)"/><text x="56.9495%" y="495.50"></text></g><g><title>generics_of (337,174 samples, 0.24%)</title><rect x="56.5708%" y="533" width="0.2383%" height="15" fill="rgb(222,74,54)"/><text x="56.8208%" y="543.50"></text></g><g><title>predicates_of (169,271 samples, 0.12%)</title><rect x="56.8364%" y="533" width="0.1196%" height="15" fill="rgb(216,99,12)"/><text x="57.0864%" y="543.50"></text></g><g><title>predicates_defined_on (142,791 samples, 0.10%)</title><rect x="56.8552%" y="517" width="0.1009%" height="15" fill="rgb(226,22,26)"/><text x="57.1052%" y="527.50"></text></g><g><title>type_collecting (1,022,792 samples, 0.72%)</title><rect x="56.3114%" y="565" width="0.7229%" height="15" fill="rgb(217,163,10)"/><text x="56.5614%" y="575.50"></text></g><g><title>collect_mod_item_types (1,013,401 samples, 0.72%)</title><rect x="56.3181%" y="549" width="0.7163%" height="15" fill="rgb(213,25,53)"/><text x="56.5681%" y="559.50"></text></g><g><title>evaluate_obligation (227,282 samples, 0.16%)</title><rect x="57.5336%" y="533" width="0.1606%" height="15" fill="rgb(252,105,26)"/><text x="57.7836%" y="543.50"></text></g><g><title>implied_outlives_bounds (200,752 samples, 0.14%)</title><rect x="57.6966%" y="533" width="0.1419%" height="15" fill="rgb(220,39,43)"/><text x="57.9466%" y="543.50"></text></g><g><title>check_impl_item_well_formed (1,185,594 samples, 0.84%)</title><rect x="57.1194%" y="549" width="0.8380%" height="15" fill="rgb(229,68,48)"/><text x="57.3694%" y="559.50"></text></g><g><title>mir_const_qualif (183,333 samples, 0.13%)</title><rect x="58.9309%" y="485" width="0.1296%" height="15" fill="rgb(252,8,32)"/><text x="59.1809%" y="495.50"></text></g><g><title>mir_const (157,503 samples, 0.11%)</title><rect x="58.9491%" y="469" width="0.1113%" height="15" fill="rgb(223,20,43)"/><text x="59.1991%" y="479.50"></text></g><g><title>mir_borrowck (457,195 samples, 0.32%)</title><rect x="59.1791%" y="453" width="0.3232%" height="15" fill="rgb(229,81,49)"/><text x="59.4291%" y="463.50"></text></g><g><title>mir_for_ctfe (625,756 samples, 0.44%)</title><rect x="59.0605%" y="485" width="0.4423%" height="15" fill="rgb(236,28,36)"/><text x="59.3105%" y="495.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (576,586 samples, 0.41%)</title><rect x="59.0952%" y="469" width="0.4075%" height="15" fill="rgb(249,185,26)"/><text x="59.3452%" y="479.50"></text></g><g><title>mir_borrowck (142,222 samples, 0.10%)</title><rect x="59.6111%" y="389" width="0.1005%" height="15" fill="rgb(249,174,33)"/><text x="59.8611%" y="399.50"></text></g><g><title>mir_for_ctfe (201,572 samples, 0.14%)</title><rect x="59.5697%" y="421" width="0.1425%" height="15" fill="rgb(233,201,37)"/><text x="59.8197%" y="431.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (187,612 samples, 0.13%)</title><rect x="59.5795%" y="405" width="0.1326%" height="15" fill="rgb(221,78,26)"/><text x="59.8295%" y="415.50"></text></g><g><title>eval_to_const_value_raw (175,312 samples, 0.12%)</title><rect x="59.8252%" y="85" width="0.1239%" height="15" fill="rgb(250,127,30)"/><text x="60.0752%" y="95.50"></text></g><g><title>eval_to_const_value_raw (174,702 samples, 0.12%)</title><rect x="59.8256%" y="69" width="0.1235%" height="15" fill="rgb(230,49,44)"/><text x="60.0756%" y="79.50"></text></g><g><title>eval_to_allocation_raw (173,362 samples, 0.12%)</title><rect x="59.8266%" y="53" width="0.1225%" height="15" fill="rgb(229,67,23)"/><text x="60.0766%" y="63.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (164,372 samples, 0.12%)</title><rect x="59.8329%" y="37" width="0.1162%" height="15" fill="rgb(249,83,47)"/><text x="60.0829%" y="47.50"></text></g><g><title>eval_to_const_value_raw (209,742 samples, 0.15%)</title><rect x="59.8155%" y="149" width="0.1483%" height="15" fill="rgb(215,43,3)"/><text x="60.0655%" y="159.50"></text></g><g><title>eval_to_const_value_raw (209,292 samples, 0.15%)</title><rect x="59.8158%" y="133" width="0.1479%" height="15" fill="rgb(238,154,13)"/><text x="60.0658%" y="143.50"></text></g><g><title>eval_to_allocation_raw (208,512 samples, 0.15%)</title><rect x="59.8164%" y="117" width="0.1474%" height="15" fill="rgb(219,56,2)"/><text x="60.0664%" y="127.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (199,052 samples, 0.14%)</title><rect x="59.8231%" y="101" width="0.1407%" height="15" fill="rgb(233,0,4)"/><text x="60.0731%" y="111.50"></text></g><g><title>eval_to_const_value_raw (239,342 samples, 0.17%)</title><rect x="59.8083%" y="213" width="0.1692%" height="15" fill="rgb(235,30,7)"/><text x="60.0583%" y="223.50"></text></g><g><title>eval_to_const_value_raw (238,822 samples, 0.17%)</title><rect x="59.8087%" y="197" width="0.1688%" height="15" fill="rgb(250,79,13)"/><text x="60.0587%" y="207.50"></text></g><g><title>eval_to_allocation_raw (238,032 samples, 0.17%)</title><rect x="59.8093%" y="181" width="0.1682%" height="15" fill="rgb(211,146,34)"/><text x="60.0593%" y="191.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (231,932 samples, 0.16%)</title><rect x="59.8136%" y="165" width="0.1639%" height="15" fill="rgb(228,22,38)"/><text x="60.0636%" y="175.50"></text></g><g><title>eval_to_const_value_raw (277,623 samples, 0.20%)</title><rect x="59.7969%" y="277" width="0.1962%" height="15" fill="rgb(235,168,5)"/><text x="60.0469%" y="287.50"></text></g><g><title>eval_to_const_value_raw (271,713 samples, 0.19%)</title><rect x="59.8011%" y="261" width="0.1921%" height="15" fill="rgb(221,155,16)"/><text x="60.0511%" y="271.50"></text></g><g><title>eval_to_allocation_raw (270,253 samples, 0.19%)</title><rect x="59.8021%" y="245" width="0.1910%" height="15" fill="rgb(215,215,53)"/><text x="60.0521%" y="255.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (263,663 samples, 0.19%)</title><rect x="59.8067%" y="229" width="0.1864%" height="15" fill="rgb(223,4,10)"/><text x="60.0567%" y="239.50"></text></g><g><title>eval_to_const_value_raw (367,805 samples, 0.26%)</title><rect x="59.7455%" y="341" width="0.2600%" height="15" fill="rgb(234,103,6)"/><text x="59.9955%" y="351.50"></text></g><g><title>eval_to_const_value_raw (358,234 samples, 0.25%)</title><rect x="59.7523%" y="325" width="0.2532%" height="15" fill="rgb(227,97,0)"/><text x="60.0023%" y="335.50"></text></g><g><title>eval_to_allocation_raw (353,214 samples, 0.25%)</title><rect x="59.7558%" y="309" width="0.2497%" height="15" fill="rgb(234,150,53)"/><text x="60.0058%" y="319.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (297,443 samples, 0.21%)</title><rect x="59.7953%" y="293" width="0.2102%" height="15" fill="rgb(228,201,54)"/><text x="60.0453%" y="303.50"></text></g><g><title>eval_to_const_value_raw (467,816 samples, 0.33%)</title><rect x="59.7151%" y="405" width="0.3307%" height="15" fill="rgb(222,22,37)"/><text x="59.9651%" y="415.50"></text></g><g><title>eval_to_const_value_raw (467,046 samples, 0.33%)</title><rect x="59.7156%" y="389" width="0.3301%" height="15" fill="rgb(237,53,32)"/><text x="59.9656%" y="399.50"></text></g><g><title>eval_to_allocation_raw (466,136 samples, 0.33%)</title><rect x="59.7163%" y="373" width="0.3295%" height="15" fill="rgb(233,25,53)"/><text x="59.9663%" y="383.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (432,165 samples, 0.31%)</title><rect x="59.7403%" y="357" width="0.3055%" height="15" fill="rgb(210,40,34)"/><text x="59.9903%" y="367.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (656,368 samples, 0.46%)</title><rect x="59.7121%" y="421" width="0.4639%" height="15" fill="rgb(241,220,44)"/><text x="59.9621%" y="431.50"></text></g><g><title>resolve_instance (184,362 samples, 0.13%)</title><rect x="60.0458%" y="405" width="0.1303%" height="15" fill="rgb(235,28,35)"/><text x="60.2958%" y="415.50"></text></g><g><title>evaluate_obligation (260,763 samples, 0.18%)</title><rect x="60.3092%" y="405" width="0.1843%" height="15" fill="rgb(210,56,17)"/><text x="60.5592%" y="415.50"></text></g><g><title>eval_to_const_value_raw (1,420,666 samples, 1.00%)</title><rect x="59.5108%" y="469" width="1.0042%" height="15" fill="rgb(224,130,29)"/><text x="59.7608%" y="479.50"></text></g><g><title>eval_to_const_value_raw (1,418,896 samples, 1.00%)</title><rect x="59.5121%" y="453" width="1.0029%" height="15" fill="rgb(235,212,8)"/><text x="59.7621%" y="463.50"></text></g><g><title>eval_to_allocation_raw (1,415,986 samples, 1.00%)</title><rect x="59.5141%" y="437" width="1.0009%" height="15" fill="rgb(223,33,50)"/><text x="59.7641%" y="447.50"></text></g><g><title>typeck (479,486 samples, 0.34%)</title><rect x="60.1761%" y="421" width="0.3389%" height="15" fill="rgb(219,149,13)"/><text x="60.4261%" y="431.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (1,437,556 samples, 1.02%)</title><rect x="59.5031%" y="485" width="1.0161%" height="15" fill="rgb(250,156,29)"/><text x="59.7531%" y="495.50"></text></g><g><title>eval_to_const_value_raw (2,537,668 samples, 1.79%)</title><rect x="58.8229%" y="533" width="1.7937%" height="15" fill="rgb(216,193,19)"/><text x="59.0729%" y="543.50">e..</text></g><g><title>eval_to_const_value_raw (2,526,208 samples, 1.79%)</title><rect x="58.8310%" y="517" width="1.7856%" height="15" fill="rgb(216,135,14)"/><text x="59.0810%" y="527.50">e..</text></g><g><title>eval_to_allocation_raw (2,523,368 samples, 1.78%)</title><rect x="58.8330%" y="501" width="1.7836%" height="15" fill="rgb(241,47,5)"/><text x="59.0830%" y="511.50">e..</text></g><g><title>adt_def (769,228 samples, 0.54%)</title><rect x="61.2357%" y="485" width="0.5437%" height="15" fill="rgb(233,42,35)"/><text x="61.4857%" y="495.50"></text></g><g><title>metadata_decode_entry_adt_def (768,758 samples, 0.54%)</title><rect x="61.2360%" y="469" width="0.5434%" height="15" fill="rgb(231,13,6)"/><text x="61.4860%" y="479.50"></text></g><g><title>item_attrs (761,738 samples, 0.54%)</title><rect x="61.2410%" y="453" width="0.5384%" height="15" fill="rgb(207,181,40)"/><text x="61.4910%" y="463.50"></text></g><g><title>metadata_decode_entry_item_attrs (761,058 samples, 0.54%)</title><rect x="61.2415%" y="437" width="0.5379%" height="15" fill="rgb(254,173,49)"/><text x="61.4915%" y="447.50"></text></g><g><title>adt_sized_constraint (778,318 samples, 0.55%)</title><rect x="61.2327%" y="501" width="0.5501%" height="15" fill="rgb(221,1,38)"/><text x="61.4827%" y="511.50"></text></g><g><title>adt_sized_constraint (872,129 samples, 0.62%)</title><rect x="61.1712%" y="517" width="0.6164%" height="15" fill="rgb(206,124,46)"/><text x="61.4212%" y="527.50"></text></g><g><title>evaluate_obligation (1,892,802 samples, 1.34%)</title><rect x="60.6166%" y="533" width="1.3379%" height="15" fill="rgb(249,21,11)"/><text x="60.8666%" y="543.50"></text></g><g><title>predicates_of (154,573 samples, 0.11%)</title><rect x="62.1981%" y="533" width="0.1093%" height="15" fill="rgb(222,201,40)"/><text x="62.4481%" y="543.50"></text></g><g><title>region_scope_tree (290,390 samples, 0.21%)</title><rect x="62.3073%" y="533" width="0.2053%" height="15" fill="rgb(235,61,29)"/><text x="62.5573%" y="543.50"></text></g><g><title>analysis (87,638,286 samples, 61.95%)</title><rect x="0.6611%" y="597" width="61.9451%" height="15" fill="rgb(219,207,3)"/><text x="0.9111%" y="607.50">analysis</text></g><g><title>type_check_crate (57,621,222 samples, 40.73%)</title><rect x="21.8780%" y="581" width="40.7282%" height="15" fill="rgb(222,56,46)"/><text x="22.1280%" y="591.50">type_check_crate</text></g><g><title>wf_checking (7,874,477 samples, 5.57%)</title><rect x="57.0403%" y="565" width="5.5659%" height="15" fill="rgb(239,76,54)"/><text x="57.2903%" y="575.50">wf_chec..</text></g><g><title>check_item_well_formed (6,576,942 samples, 4.65%)</title><rect x="57.9574%" y="549" width="4.6488%" height="15" fill="rgb(231,124,27)"/><text x="58.2074%" y="559.50">check..</text></g><g><title>codegen_crate (719,398 samples, 0.51%)</title><rect x="62.6145%" y="597" width="0.5085%" height="15" fill="rgb(249,195,6)"/><text x="62.8645%" y="607.50"></text></g><g><title>AST_validation (152,312 samples, 0.11%)</title><rect x="63.2779%" y="581" width="0.1077%" height="15" fill="rgb(237,174,47)"/><text x="63.5279%" y="591.50"></text></g><g><title>metadata_load_macro (407,462 samples, 0.29%)</title><rect x="87.6113%" y="549" width="0.2880%" height="15" fill="rgb(206,201,31)"/><text x="87.8613%" y="559.50"></text></g><g><title>metadata_register_crate (2,947,653 samples, 2.08%)</title><rect x="87.8993%" y="549" width="2.0835%" height="15" fill="rgb(231,57,52)"/><text x="88.1493%" y="559.50">m..</text></g><g><title>metadata_register_crate (2,010,212 samples, 1.42%)</title><rect x="88.5619%" y="533" width="1.4209%" height="15" fill="rgb(248,177,22)"/><text x="88.8119%" y="543.50"></text></g><g><title>metadata_register_crate (803,498 samples, 0.57%)</title><rect x="89.4149%" y="517" width="0.5679%" height="15" fill="rgb(215,211,37)"/><text x="89.6649%" y="527.50"></text></g><g><title>macro_expand_crate (37,874,111 samples, 26.77%)</title><rect x="63.4994%" y="581" width="26.7704%" height="15" fill="rgb(241,128,51)"/><text x="63.7494%" y="591.50">macro_expand_crate</text></g><g><title>expand_crate (37,858,631 samples, 26.76%)</title><rect x="63.5104%" y="565" width="26.7595%" height="15" fill="rgb(227,165,31)"/><text x="63.7604%" y="575.50">expand_crate</text></g><g><title>pre_AST_expansion_lint_checks (406,135 samples, 0.29%)</title><rect x="89.9828%" y="549" width="0.2871%" height="15" fill="rgb(228,167,24)"/><text x="90.2328%" y="559.50"></text></g><g><title>pre_AST_expansion_lint_checks (146,912 samples, 0.10%)</title><rect x="90.2733%" y="581" width="0.1038%" height="15" fill="rgb(228,143,12)"/><text x="90.5233%" y="591.50"></text></g><g><title>finalize_imports (218,252 samples, 0.15%)</title><rect x="90.3807%" y="565" width="0.1543%" height="15" fill="rgb(249,149,8)"/><text x="90.6307%" y="575.50"></text></g><g><title>finalize_macro_resolutions (154,681 samples, 0.11%)</title><rect x="90.5350%" y="565" width="0.1093%" height="15" fill="rgb(243,35,44)"/><text x="90.7850%" y="575.50"></text></g><g><title>late_resolve_crate (1,442,046 samples, 1.02%)</title><rect x="90.6443%" y="565" width="1.0193%" height="15" fill="rgb(246,89,9)"/><text x="90.8943%" y="575.50"></text></g><g><title>configure_and_expand (40,483,001 samples, 28.61%)</title><rect x="63.1230%" y="597" width="28.6145%" height="15" fill="rgb(233,213,13)"/><text x="63.3730%" y="607.50">configure_and_expand</text></g><g><title>resolve_crate (1,924,512 samples, 1.36%)</title><rect x="90.3771%" y="581" width="1.3603%" height="15" fill="rgb(233,141,41)"/><text x="90.6271%" y="591.50"></text></g><g><title>drop_ast (189,862 samples, 0.13%)</title><rect x="91.7374%" y="597" width="0.1342%" height="15" fill="rgb(239,167,4)"/><text x="91.9874%" y="607.50"></text></g><g><title>early_lint_checks (382,275 samples, 0.27%)</title><rect x="91.8846%" y="597" width="0.2702%" height="15" fill="rgb(209,217,16)"/><text x="92.1346%" y="607.50"></text></g><g><title>free_global_ctxt (3,533,880 samples, 2.50%)</title><rect x="92.1548%" y="597" width="2.4978%" height="15" fill="rgb(219,88,35)"/><text x="92.4048%" y="607.50">fr..</text></g><g><title>mir_for_ctfe (208,622 samples, 0.15%)</title><rect x="96.0136%" y="581" width="0.1475%" height="15" fill="rgb(220,193,23)"/><text x="96.2636%" y="591.50"></text></g><g><title>generate_crate_metadata (2,212,175 samples, 1.56%)</title><rect x="94.6527%" y="597" width="1.5636%" height="15" fill="rgb(230,90,52)"/><text x="94.9027%" y="607.50"></text></g><g><title>hir_lowering (2,382,626 samples, 1.68%)</title><rect x="96.2163%" y="597" width="1.6841%" height="15" fill="rgb(252,106,19)"/><text x="96.4663%" y="607.50"></text></g><g><title>parse_crate (1,259,124 samples, 0.89%)</title><rect x="97.9399%" y="597" width="0.8900%" height="15" fill="rgb(206,74,20)"/><text x="98.1899%" y="607.50"></text></g><g><title>prepare_outputs (195,882 samples, 0.14%)</title><rect x="98.8357%" y="597" width="0.1385%" height="15" fill="rgb(230,138,44)"/><text x="99.0857%" y="607.50"></text></g><g><title>self_profile_alloc_query_strings (947,390 samples, 0.67%)</title><rect x="98.9741%" y="597" width="0.6696%" height="15" fill="rgb(235,182,43)"/><text x="99.2241%" y="607.50"></text></g><g><title>all (141,477,417 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(242,16,51)"/><text x="0.2500%" y="639.50"></text></g><g><title>rustc (141,477,417 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(248,9,4)"/><text x="0.2500%" y="623.50">rustc</text></g><g><title>write_crate_metadata (402,455 samples, 0.28%)</title><rect x="99.7155%" y="597" width="0.2845%" height="15" fill="rgb(210,31,22)"/><text x="99.9655%" y="607.50"></text></g></svg></svg>