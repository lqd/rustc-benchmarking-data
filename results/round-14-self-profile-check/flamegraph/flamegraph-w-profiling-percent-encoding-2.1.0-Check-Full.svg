<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="374" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="357.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="357.00"> </text><svg id="frames" x="10" width="1180"><g><title>param_env (239,532 samples, 0.22%)</title><rect x="7.0781%" y="213" width="0.2219%" height="15" fill="rgb(227,0,7)"/><text x="7.3281%" y="223.50"></text></g><g><title>item_attrs (576,647 samples, 0.53%)</title><rect x="7.5787%" y="181" width="0.5342%" height="15" fill="rgb(217,0,24)"/><text x="7.8287%" y="191.50"></text></g><g><title>metadata_decode_entry_item_attrs (568,297 samples, 0.53%)</title><rect x="7.5864%" y="165" width="0.5265%" height="15" fill="rgb(221,193,54)"/><text x="7.8364%" y="175.50"></text></g><g><title>codegen_fn_attrs (680,319 samples, 0.63%)</title><rect x="7.5004%" y="197" width="0.6302%" height="15" fill="rgb(248,212,6)"/><text x="7.7504%" y="207.50"></text></g><g><title>adt_drop_tys (153,112 samples, 0.14%)</title><rect x="9.4019%" y="165" width="0.1418%" height="15" fill="rgb(208,68,35)"/><text x="9.6519%" y="175.50"></text></g><g><title>needs_drop_raw (710,538 samples, 0.66%)</title><rect x="9.3469%" y="181" width="0.6582%" height="15" fill="rgb(232,128,0)"/><text x="9.5969%" y="191.50"></text></g><g><title>is_copy_raw (498,145 samples, 0.46%)</title><rect x="9.5437%" y="165" width="0.4615%" height="15" fill="rgb(207,160,47)"/><text x="9.7937%" y="175.50"></text></g><g><title>evaluate_obligation (432,754 samples, 0.40%)</title><rect x="9.6043%" y="149" width="0.4009%" height="15" fill="rgb(228,23,34)"/><text x="9.8543%" y="159.50"></text></g><g><title>codegen_fulfill_obligation (205,841 samples, 0.19%)</title><rect x="10.1203%" y="165" width="0.1907%" height="15" fill="rgb(218,30,26)"/><text x="10.3703%" y="175.50"></text></g><g><title>impl_parent (113,224 samples, 0.10%)</title><rect x="10.5311%" y="149" width="0.1049%" height="15" fill="rgb(220,122,19)"/><text x="10.7811%" y="159.50"></text></g><g><title>specialization_graph_of (843,961 samples, 0.78%)</title><rect x="10.3573%" y="165" width="0.7818%" height="15" fill="rgb(250,228,42)"/><text x="10.6073%" y="175.50"></text></g><g><title>impl_trait_ref (543,126 samples, 0.50%)</title><rect x="10.6360%" y="149" width="0.5031%" height="15" fill="rgb(240,193,28)"/><text x="10.8860%" y="159.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (505,105 samples, 0.47%)</title><rect x="10.6712%" y="133" width="0.4679%" height="15" fill="rgb(216,20,37)"/><text x="10.9212%" y="143.50"></text></g><g><title>resolve_instance (1,278,646 samples, 1.18%)</title><rect x="10.0052%" y="181" width="1.1845%" height="15" fill="rgb(206,188,39)"/><text x="10.2552%" y="191.50"></text></g><g><title>thir_body (472,555 samples, 0.44%)</title><rect x="11.2003%" y="181" width="0.4378%" height="15" fill="rgb(217,207,13)"/><text x="11.4503%" y="191.50"></text></g><g><title>mir_const (5,320,688 samples, 4.93%)</title><rect x="6.7166%" y="229" width="4.9289%" height="15" fill="rgb(231,73,38)"/><text x="6.9666%" y="239.50">mir_co..</text></g><g><title>unsafety_check_result (4,690,910 samples, 4.35%)</title><rect x="7.3000%" y="213" width="4.3455%" height="15" fill="rgb(225,20,46)"/><text x="7.5500%" y="223.50">unsaf..</text></g><g><title>mir_built (3,794,261 samples, 3.51%)</title><rect x="8.1306%" y="197" width="3.5149%" height="15" fill="rgb(210,31,41)"/><text x="8.3806%" y="207.50">mir..</text></g><g><title>thir_body (146,172 samples, 0.14%)</title><rect x="12.0072%" y="165" width="0.1354%" height="15" fill="rgb(221,200,47)"/><text x="12.2572%" y="175.50"></text></g><g><title>mir_const (446,155 samples, 0.41%)</title><rect x="11.7300%" y="213" width="0.4133%" height="15" fill="rgb(226,26,5)"/><text x="11.9800%" y="223.50"></text></g><g><title>unsafety_check_result (412,575 samples, 0.38%)</title><rect x="11.7611%" y="197" width="0.3822%" height="15" fill="rgb(249,33,26)"/><text x="12.0111%" y="207.50"></text></g><g><title>mir_built (391,695 samples, 0.36%)</title><rect x="11.7804%" y="181" width="0.3629%" height="15" fill="rgb(235,183,28)"/><text x="12.0304%" y="191.50"></text></g><g><title>mir_promoted (6,351,000 samples, 5.88%)</title><rect x="6.2749%" y="245" width="5.8834%" height="15" fill="rgb(221,5,38)"/><text x="6.5249%" y="255.50">mir_pro..</text></g><g><title>mir_const_qualif (553,487 samples, 0.51%)</title><rect x="11.6455%" y="229" width="0.5127%" height="15" fill="rgb(247,18,42)"/><text x="11.8955%" y="239.50"></text></g><g><title>type_op_normalize_fn_sig (384,073 samples, 0.36%)</title><rect x="12.2507%" y="245" width="0.3558%" height="15" fill="rgb(241,131,45)"/><text x="12.5007%" y="255.50"></text></g><g><title>normalize_projection_ty (260,282 samples, 0.24%)</title><rect x="12.3654%" y="229" width="0.2411%" height="15" fill="rgb(249,31,29)"/><text x="12.6154%" y="239.50"></text></g><g><title>type_op_prove_predicate (1,167,301 samples, 1.08%)</title><rect x="12.7017%" y="245" width="1.0814%" height="15" fill="rgb(225,111,53)"/><text x="12.9517%" y="255.50"></text></g><g><title>MIR_borrow_checking (13,955,406 samples, 12.93%)</title><rect x="0.8577%" y="277" width="12.9279%" height="15" fill="rgb(238,160,17)"/><text x="1.1077%" y="287.50">MIR_borrow_checking</text></g><g><title>mir_borrowck (13,903,016 samples, 12.88%)</title><rect x="0.9062%" y="261" width="12.8794%" height="15" fill="rgb(214,148,48)"/><text x="1.1562%" y="271.50">mir_borrowck</text></g><g><title>MIR_effect_checking (181,952 samples, 0.17%)</title><rect x="13.7856%" y="277" width="0.1686%" height="15" fill="rgb(232,36,49)"/><text x="14.0356%" y="287.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (135,951 samples, 0.13%)</title><rect x="13.8282%" y="261" width="0.1259%" height="15" fill="rgb(209,103,24)"/><text x="14.0782%" y="271.50"></text></g><g><title>hir_module_items (188,572 samples, 0.17%)</title><rect x="13.9541%" y="277" width="0.1747%" height="15" fill="rgb(229,88,8)"/><text x="14.2041%" y="287.50"></text></g><g><title>codegen_fn_attrs (138,013 samples, 0.13%)</title><rect x="14.6526%" y="213" width="0.1279%" height="15" fill="rgb(213,181,19)"/><text x="14.9026%" y="223.50"></text></g><g><title>should_inherit_track_caller (253,625 samples, 0.23%)</title><rect x="14.5520%" y="229" width="0.2350%" height="15" fill="rgb(254,191,54)"/><text x="14.8020%" y="239.50"></text></g><g><title>codegen_fn_attrs (474,237 samples, 0.44%)</title><rect x="14.3754%" y="245" width="0.4393%" height="15" fill="rgb(241,83,37)"/><text x="14.6254%" y="255.50"></text></g><g><title>check_mod_attrs (716,018 samples, 0.66%)</title><rect x="14.1516%" y="261" width="0.6633%" height="15" fill="rgb(233,36,39)"/><text x="14.4016%" y="271.50"></text></g><g><title>check_mod_const_bodies (118,631 samples, 0.11%)</title><rect x="14.8149%" y="261" width="0.1099%" height="15" fill="rgb(226,3,54)"/><text x="15.0649%" y="271.50"></text></g><g><title>lookup_deprecation_entry (151,712 samples, 0.14%)</title><rect x="15.1573%" y="245" width="0.1405%" height="15" fill="rgb(245,192,40)"/><text x="15.4073%" y="255.50"></text></g><g><title>check_mod_unstable_api_usage (446,715 samples, 0.41%)</title><rect x="14.9930%" y="261" width="0.4138%" height="15" fill="rgb(238,167,29)"/><text x="15.2430%" y="271.50"></text></g><g><title>misc_checking_1 (1,434,466 samples, 1.33%)</title><rect x="14.1293%" y="277" width="1.3289%" height="15" fill="rgb(232,182,51)"/><text x="14.3793%" y="287.50"></text></g><g><title>liveness_and_intrinsic_checking (271,063 samples, 0.25%)</title><rect x="15.4595%" y="261" width="0.2511%" height="15" fill="rgb(231,60,39)"/><text x="15.7095%" y="271.50"></text></g><g><title>check_mod_liveness (209,762 samples, 0.19%)</title><rect x="15.5163%" y="245" width="0.1943%" height="15" fill="rgb(208,69,12)"/><text x="15.7663%" y="255.50"></text></g><g><title>misc_checking_2 (566,406 samples, 0.52%)</title><rect x="15.4581%" y="277" width="0.5247%" height="15" fill="rgb(235,93,37)"/><text x="15.7081%" y="287.50"></text></g><g><title>match_checking (293,873 samples, 0.27%)</title><rect x="15.7106%" y="261" width="0.2722%" height="15" fill="rgb(213,116,39)"/><text x="15.9606%" y="271.50"></text></g><g><title>check_match (277,203 samples, 0.26%)</title><rect x="15.7261%" y="245" width="0.2568%" height="15" fill="rgb(222,207,29)"/><text x="15.9761%" y="255.50"></text></g><g><title>death_checking (217,712 samples, 0.20%)</title><rect x="16.0795%" y="261" width="0.2017%" height="15" fill="rgb(206,96,30)"/><text x="16.3295%" y="271.50"></text></g><g><title>promoted_mir (113,061 samples, 0.10%)</title><rect x="17.3137%" y="117" width="0.1047%" height="15" fill="rgb(218,138,4)"/><text x="17.5637%" y="127.50"></text></g><g><title>eval_to_const_value_raw (584,367 samples, 0.54%)</title><rect x="16.8779%" y="165" width="0.5413%" height="15" fill="rgb(250,191,14)"/><text x="17.1279%" y="175.50"></text></g><g><title>eval_to_const_value_raw (583,587 samples, 0.54%)</title><rect x="16.8786%" y="149" width="0.5406%" height="15" fill="rgb(239,60,40)"/><text x="17.1286%" y="159.50"></text></g><g><title>eval_to_allocation_raw (580,897 samples, 0.54%)</title><rect x="16.8811%" y="133" width="0.5381%" height="15" fill="rgb(206,27,48)"/><text x="17.1311%" y="143.50"></text></g><g><title>eval_to_const_value_raw (649,838 samples, 0.60%)</title><rect x="16.8189%" y="229" width="0.6020%" height="15" fill="rgb(225,35,8)"/><text x="17.0689%" y="239.50"></text></g><g><title>eval_to_const_value_raw (648,408 samples, 0.60%)</title><rect x="16.8202%" y="213" width="0.6007%" height="15" fill="rgb(250,213,24)"/><text x="17.0702%" y="223.50"></text></g><g><title>eval_to_allocation_raw (645,938 samples, 0.60%)</title><rect x="16.8225%" y="197" width="0.5984%" height="15" fill="rgb(247,123,22)"/><text x="17.0725%" y="207.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (593,407 samples, 0.55%)</title><rect x="16.8711%" y="181" width="0.5497%" height="15" fill="rgb(231,138,38)"/><text x="17.1211%" y="191.50"></text></g><g><title>crate_lints (2,481,207 samples, 2.30%)</title><rect x="16.2825%" y="245" width="2.2985%" height="15" fill="rgb(231,145,46)"/><text x="16.5325%" y="255.50">c..</text></g><g><title>type_of (1,092,343 samples, 1.01%)</title><rect x="17.5692%" y="229" width="1.0119%" height="15" fill="rgb(251,118,11)"/><text x="17.8192%" y="239.50"></text></g><g><title>metadata_decode_entry_type_of (851,969 samples, 0.79%)</title><rect x="17.7918%" y="213" width="0.7892%" height="15" fill="rgb(217,147,25)"/><text x="18.0418%" y="223.50"></text></g><g><title>lint_checking (2,702,390 samples, 2.50%)</title><rect x="16.2812%" y="261" width="2.5034%" height="15" fill="rgb(247,81,37)"/><text x="16.5312%" y="271.50">li..</text></g><g><title>module_lints (219,703 samples, 0.20%)</title><rect x="18.5811%" y="245" width="0.2035%" height="15" fill="rgb(209,12,38)"/><text x="18.8311%" y="255.50"></text></g><g><title>lint_mod (216,393 samples, 0.20%)</title><rect x="18.5841%" y="229" width="0.2005%" height="15" fill="rgb(227,1,9)"/><text x="18.8341%" y="239.50"></text></g><g><title>privacy_access_levels (126,492 samples, 0.12%)</title><rect x="18.7846%" y="261" width="0.1172%" height="15" fill="rgb(248,47,43)"/><text x="19.0346%" y="271.50"></text></g><g><title>privacy_checking_modules (409,584 samples, 0.38%)</title><rect x="18.9018%" y="261" width="0.3794%" height="15" fill="rgb(221,10,30)"/><text x="19.1518%" y="271.50"></text></g><g><title>check_mod_privacy (407,644 samples, 0.38%)</title><rect x="18.9036%" y="245" width="0.3776%" height="15" fill="rgb(210,229,1)"/><text x="19.1536%" y="255.50"></text></g><g><title>misc_checking_3 (3,571,180 samples, 3.31%)</title><rect x="15.9829%" y="277" width="3.3082%" height="15" fill="rgb(222,148,37)"/><text x="16.2329%" y="287.50">mis..</text></g><g><title>impl_parent (2,944,810 samples, 2.73%)</title><rect x="24.7791%" y="213" width="2.7280%" height="15" fill="rgb(234,67,33)"/><text x="25.0291%" y="223.50">im..</text></g><g><title>metadata_decode_entry_impl_parent (1,613,395 samples, 1.49%)</title><rect x="26.0125%" y="197" width="1.4946%" height="15" fill="rgb(247,98,35)"/><text x="26.2625%" y="207.50"></text></g><g><title>impl_trait_ref (8,720,321 samples, 8.08%)</title><rect x="27.5071%" y="213" width="8.0783%" height="15" fill="rgb(247,138,52)"/><text x="27.7571%" y="223.50">impl_trait_..</text></g><g><title>metadata_decode_entry_impl_trait_ref (7,333,899 samples, 6.79%)</title><rect x="28.7915%" y="197" width="6.7939%" height="15" fill="rgb(213,79,30)"/><text x="29.0415%" y="207.50">metadata_..</text></g><g><title>trait_impls_of (1,042,352 samples, 0.97%)</title><rect x="35.6148%" y="213" width="0.9656%" height="15" fill="rgb(246,177,23)"/><text x="35.8648%" y="223.50"></text></g><g><title>implementations_of_trait (267,554 samples, 0.25%)</title><rect x="36.3326%" y="197" width="0.2479%" height="15" fill="rgb(230,62,27)"/><text x="36.5826%" y="207.50"></text></g><g><title>metadata_decode_entry_implementations_of_trait (224,243 samples, 0.21%)</title><rect x="36.3727%" y="181" width="0.2077%" height="15" fill="rgb(216,154,8)"/><text x="36.6227%" y="191.50"></text></g><g><title>coherent_trait (18,598,358 samples, 17.23%)</title><rect x="19.3527%" y="245" width="17.2290%" height="15" fill="rgb(244,35,45)"/><text x="19.6027%" y="255.50">coherent_trait</text></g><g><title>specialization_graph_of (18,578,538 samples, 17.21%)</title><rect x="19.3711%" y="229" width="17.2107%" height="15" fill="rgb(251,115,12)"/><text x="19.6211%" y="239.50">specialization_graph_of</text></g><g><title>coherence_checking (18,697,280 samples, 17.32%)</title><rect x="19.3306%" y="261" width="17.3207%" height="15" fill="rgb(240,54,50)"/><text x="19.5806%" y="271.50">coherence_checking</text></g><g><title>associated_item (529,729 samples, 0.49%)</title><rect x="46.8587%" y="197" width="0.4907%" height="15" fill="rgb(233,84,52)"/><text x="47.1087%" y="207.50"></text></g><g><title>metadata_decode_entry_associated_item (427,387 samples, 0.40%)</title><rect x="46.9535%" y="181" width="0.3959%" height="15" fill="rgb(207,117,47)"/><text x="47.2035%" y="191.50"></text></g><g><title>associated_items (723,110 samples, 0.67%)</title><rect x="46.7087%" y="213" width="0.6699%" height="15" fill="rgb(249,43,39)"/><text x="46.9587%" y="223.50"></text></g><g><title>def_ident_span (255,372 samples, 0.24%)</title><rect x="47.3785%" y="213" width="0.2366%" height="15" fill="rgb(209,38,44)"/><text x="47.6285%" y="223.50"></text></g><g><title>adt_dtorck_constraint (200,493 samples, 0.19%)</title><rect x="47.7558%" y="197" width="0.1857%" height="15" fill="rgb(236,212,23)"/><text x="48.0058%" y="207.50"></text></g><g><title>dropck_outlives (364,504 samples, 0.34%)</title><rect x="47.6313%" y="213" width="0.3377%" height="15" fill="rgb(242,79,21)"/><text x="47.8813%" y="223.50"></text></g><g><title>mir_const (247,854 samples, 0.23%)</title><rect x="48.2240%" y="149" width="0.2296%" height="15" fill="rgb(211,96,35)"/><text x="48.4740%" y="159.50"></text></g><g><title>unsafety_check_result (187,531 samples, 0.17%)</title><rect x="48.2799%" y="133" width="0.1737%" height="15" fill="rgb(253,215,40)"/><text x="48.5299%" y="143.50"></text></g><g><title>mir_built (153,331 samples, 0.14%)</title><rect x="48.3116%" y="117" width="0.1420%" height="15" fill="rgb(211,81,21)"/><text x="48.5616%" y="127.50"></text></g><g><title>mir_const_qualif (288,684 samples, 0.27%)</title><rect x="48.1865%" y="165" width="0.2674%" height="15" fill="rgb(208,190,38)"/><text x="48.4365%" y="175.50"></text></g><g><title>has_structural_eq_impls (149,482 samples, 0.14%)</title><rect x="49.4382%" y="85" width="0.1385%" height="15" fill="rgb(235,213,38)"/><text x="49.6882%" y="95.50"></text></g><g><title>evaluate_obligation (139,972 samples, 0.13%)</title><rect x="49.4470%" y="69" width="0.1297%" height="15" fill="rgb(237,122,38)"/><text x="49.6970%" y="79.50"></text></g><g><title>trait_impls_of (129,352 samples, 0.12%)</title><rect x="49.4568%" y="53" width="0.1198%" height="15" fill="rgb(244,218,35)"/><text x="49.7068%" y="63.50"></text></g><g><title>mir_const_qualif (382,544 samples, 0.35%)</title><rect x="49.4050%" y="101" width="0.3544%" height="15" fill="rgb(240,68,47)"/><text x="49.6550%" y="111.50"></text></g><g><title>mir_const (147,952 samples, 0.14%)</title><rect x="49.6224%" y="85" width="0.1371%" height="15" fill="rgb(210,16,53)"/><text x="49.8724%" y="95.50"></text></g><g><title>unsafety_check_result (130,362 samples, 0.12%)</title><rect x="49.6387%" y="69" width="0.1208%" height="15" fill="rgb(235,124,12)"/><text x="49.8887%" y="79.50"></text></g><g><title>mir_built (121,901 samples, 0.11%)</title><rect x="49.6465%" y="53" width="0.1129%" height="15" fill="rgb(224,169,11)"/><text x="49.8965%" y="63.50"></text></g><g><title>mir_promoted (433,245 samples, 0.40%)</title><rect x="49.3583%" y="117" width="0.4013%" height="15" fill="rgb(250,166,2)"/><text x="49.6083%" y="127.50"></text></g><g><title>mir_borrowck (1,144,702 samples, 1.06%)</title><rect x="48.7297%" y="133" width="1.0604%" height="15" fill="rgb(242,216,29)"/><text x="48.9797%" y="143.50"></text></g><g><title>mir_for_ctfe (1,444,506 samples, 1.34%)</title><rect x="48.4539%" y="165" width="1.3382%" height="15" fill="rgb(230,116,27)"/><text x="48.7039%" y="175.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (1,370,345 samples, 1.27%)</title><rect x="48.5226%" y="149" width="1.2695%" height="15" fill="rgb(228,99,48)"/><text x="48.7726%" y="159.50"></text></g><g><title>mir_borrowck (174,972 samples, 0.16%)</title><rect x="49.8752%" y="69" width="0.1621%" height="15" fill="rgb(253,11,6)"/><text x="50.1252%" y="79.50"></text></g><g><title>mir_for_ctfe (218,153 samples, 0.20%)</title><rect x="49.8356%" y="101" width="0.2021%" height="15" fill="rgb(247,143,39)"/><text x="50.0856%" y="111.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (206,013 samples, 0.19%)</title><rect x="49.8468%" y="85" width="0.1908%" height="15" fill="rgb(236,97,10)"/><text x="50.0968%" y="95.50"></text></g><g><title>eval_to_const_value_raw (362,234 samples, 0.34%)</title><rect x="49.7989%" y="149" width="0.3356%" height="15" fill="rgb(233,208,19)"/><text x="50.0489%" y="159.50"></text></g><g><title>eval_to_const_value_raw (361,424 samples, 0.33%)</title><rect x="49.7996%" y="133" width="0.3348%" height="15" fill="rgb(216,164,2)"/><text x="50.0496%" y="143.50"></text></g><g><title>eval_to_allocation_raw (360,114 samples, 0.33%)</title><rect x="49.8008%" y="117" width="0.3336%" height="15" fill="rgb(220,129,5)"/><text x="50.0508%" y="127.50"></text></g><g><title>eval_to_const_value_raw (2,339,126 samples, 2.17%)</title><rect x="47.9690%" y="213" width="2.1669%" height="15" fill="rgb(242,17,10)"/><text x="48.2190%" y="223.50">e..</text></g><g><title>eval_to_const_value_raw (2,329,726 samples, 2.16%)</title><rect x="47.9777%" y="197" width="2.1582%" height="15" fill="rgb(242,107,0)"/><text x="48.2277%" y="207.50">e..</text></g><g><title>eval_to_allocation_raw (2,318,526 samples, 2.15%)</title><rect x="47.9881%" y="181" width="2.1478%" height="15" fill="rgb(251,28,31)"/><text x="48.2381%" y="191.50">e..</text></g><g><title>try_normalize_mir_const_after_erasing_regions (369,354 samples, 0.34%)</title><rect x="49.7937%" y="165" width="0.3422%" height="15" fill="rgb(233,223,10)"/><text x="50.0437%" y="175.50"></text></g><g><title>adt_sized_constraint (119,511 samples, 0.11%)</title><rect x="51.5757%" y="197" width="0.1107%" height="15" fill="rgb(215,21,27)"/><text x="51.8257%" y="207.50"></text></g><g><title>generics_of (283,798 samples, 0.26%)</title><rect x="51.6864%" y="197" width="0.2629%" height="15" fill="rgb(232,23,21)"/><text x="51.9364%" y="207.50"></text></g><g><title>metadata_decode_entry_generics_of (212,405 samples, 0.20%)</title><rect x="51.7526%" y="181" width="0.1968%" height="15" fill="rgb(244,5,23)"/><text x="52.0026%" y="191.50"></text></g><g><title>impl_trait_ref (318,222 samples, 0.29%)</title><rect x="52.0021%" y="197" width="0.2948%" height="15" fill="rgb(226,81,46)"/><text x="52.2521%" y="207.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (247,500 samples, 0.23%)</title><rect x="52.0676%" y="181" width="0.2293%" height="15" fill="rgb(247,70,30)"/><text x="52.3176%" y="191.50"></text></g><g><title>predicates_of (256,683 samples, 0.24%)</title><rect x="52.3148%" y="197" width="0.2378%" height="15" fill="rgb(212,68,19)"/><text x="52.5648%" y="207.50"></text></g><g><title>predicates_defined_on (158,632 samples, 0.15%)</title><rect x="52.4057%" y="181" width="0.1470%" height="15" fill="rgb(240,187,13)"/><text x="52.6557%" y="191.50"></text></g><g><title>specializes (419,506 samples, 0.39%)</title><rect x="52.5526%" y="197" width="0.3886%" height="15" fill="rgb(223,113,26)"/><text x="52.8026%" y="207.50"></text></g><g><title>param_env (249,283 samples, 0.23%)</title><rect x="52.7103%" y="181" width="0.2309%" height="15" fill="rgb(206,192,2)"/><text x="52.9603%" y="191.50"></text></g><g><title>trait_impls_of (362,742 samples, 0.34%)</title><rect x="52.9499%" y="197" width="0.3360%" height="15" fill="rgb(241,108,4)"/><text x="53.1999%" y="207.50"></text></g><g><title>implementations_of_trait (136,611 samples, 0.13%)</title><rect x="53.1593%" y="181" width="0.1266%" height="15" fill="rgb(247,173,49)"/><text x="53.4093%" y="191.50"></text></g><g><title>evaluate_obligation (3,417,645 samples, 3.17%)</title><rect x="50.1359%" y="213" width="3.1660%" height="15" fill="rgb(224,114,35)"/><text x="50.3859%" y="223.50">eva..</text></g><g><title>fn_sig (117,151 samples, 0.11%)</title><rect x="53.3271%" y="213" width="0.1085%" height="15" fill="rgb(245,159,27)"/><text x="53.5771%" y="223.50"></text></g><g><title>generics_of (118,170 samples, 0.11%)</title><rect x="53.4356%" y="213" width="0.1095%" height="15" fill="rgb(245,172,44)"/><text x="53.6856%" y="223.50"></text></g><g><title>impl_item_implementor_ids (135,102 samples, 0.13%)</title><rect x="53.5451%" y="213" width="0.1252%" height="15" fill="rgb(236,23,11)"/><text x="53.7951%" y="223.50"></text></g><g><title>associated_items (117,622 samples, 0.11%)</title><rect x="53.5613%" y="197" width="0.1090%" height="15" fill="rgb(205,117,38)"/><text x="53.8113%" y="207.50"></text></g><g><title>item_attrs (188,182 samples, 0.17%)</title><rect x="53.7134%" y="213" width="0.1743%" height="15" fill="rgb(237,72,25)"/><text x="53.9634%" y="223.50"></text></g><g><title>metadata_decode_entry_item_attrs (181,262 samples, 0.17%)</title><rect x="53.7198%" y="197" width="0.1679%" height="15" fill="rgb(244,70,9)"/><text x="53.9698%" y="207.50"></text></g><g><title>method_autoderef_steps (154,550 samples, 0.14%)</title><rect x="53.9469%" y="213" width="0.1432%" height="15" fill="rgb(217,125,39)"/><text x="54.1969%" y="223.50"></text></g><g><title>object_safety_violations (132,712 samples, 0.12%)</title><rect x="54.0900%" y="213" width="0.1229%" height="15" fill="rgb(235,36,10)"/><text x="54.3400%" y="223.50"></text></g><g><title>predicates_of (327,195 samples, 0.30%)</title><rect x="54.3077%" y="213" width="0.3031%" height="15" fill="rgb(251,123,47)"/><text x="54.5577%" y="223.50"></text></g><g><title>predicates_defined_on (214,042 samples, 0.20%)</title><rect x="54.4125%" y="197" width="0.1983%" height="15" fill="rgb(221,13,13)"/><text x="54.6625%" y="207.50"></text></g><g><title>associated_items (121,932 samples, 0.11%)</title><rect x="56.2881%" y="197" width="0.1130%" height="15" fill="rgb(238,131,9)"/><text x="56.5381%" y="207.50"></text></g><g><title>evaluate_obligation (436,974 samples, 0.40%)</title><rect x="56.4200%" y="197" width="0.4048%" height="15" fill="rgb(211,50,8)"/><text x="56.6700%" y="207.50"></text></g><g><title>typeck (2,519,688 samples, 2.33%)</title><rect x="54.7534%" y="213" width="2.3342%" height="15" fill="rgb(245,182,24)"/><text x="55.0034%" y="223.50">t..</text></g><g><title>item_bodies_checking (22,081,777 samples, 20.46%)</title><rect x="36.6812%" y="261" width="20.4560%" height="15" fill="rgb(242,14,37)"/><text x="36.9312%" y="271.50">item_bodies_checking</text></g><g><title>typeck_item_bodies (22,078,217 samples, 20.45%)</title><rect x="36.6845%" y="245" width="20.4527%" height="15" fill="rgb(246,228,12)"/><text x="36.9345%" y="255.50">typeck_item_bodies</text></g><g><title>typeck (22,034,257 samples, 20.41%)</title><rect x="36.7252%" y="229" width="20.4119%" height="15" fill="rgb(213,55,15)"/><text x="36.9752%" y="239.50">typeck</text></g><g><title>impl_trait_ref (156,773 samples, 0.15%)</title><rect x="57.6413%" y="181" width="0.1452%" height="15" fill="rgb(209,9,3)"/><text x="57.8913%" y="191.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (136,993 samples, 0.13%)</title><rect x="57.6596%" y="165" width="0.1269%" height="15" fill="rgb(230,59,30)"/><text x="57.9096%" y="175.50"></text></g><g><title>adt_destructor (342,084 samples, 0.32%)</title><rect x="57.4940%" y="229" width="0.3169%" height="15" fill="rgb(209,121,21)"/><text x="57.7440%" y="239.50"></text></g><g><title>coherent_trait (336,924 samples, 0.31%)</title><rect x="57.4987%" y="213" width="0.3121%" height="15" fill="rgb(220,109,13)"/><text x="57.7487%" y="223.50"></text></g><g><title>specialization_graph_of (334,334 samples, 0.31%)</title><rect x="57.5011%" y="197" width="0.3097%" height="15" fill="rgb(232,18,1)"/><text x="57.7511%" y="207.50"></text></g><g><title>generics_of (466,546 samples, 0.43%)</title><rect x="60.9921%" y="197" width="0.4322%" height="15" fill="rgb(215,41,42)"/><text x="61.2421%" y="207.50"></text></g><g><title>metadata_decode_entry_generics_of (328,256 samples, 0.30%)</title><rect x="61.1202%" y="181" width="0.3041%" height="15" fill="rgb(224,123,36)"/><text x="61.3702%" y="191.50"></text></g><g><title>impl_trait_ref (668,386 samples, 0.62%)</title><rect x="61.5270%" y="197" width="0.6192%" height="15" fill="rgb(240,125,3)"/><text x="61.7770%" y="207.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (530,385 samples, 0.49%)</title><rect x="61.6549%" y="181" width="0.4913%" height="15" fill="rgb(205,98,50)"/><text x="61.9049%" y="191.50"></text></g><g><title>opt_def_kind (119,490 samples, 0.11%)</title><rect x="62.5159%" y="181" width="0.1107%" height="15" fill="rgb(205,185,37)"/><text x="62.7659%" y="191.50"></text></g><g><title>predicates_of (812,616 samples, 0.75%)</title><rect x="62.1806%" y="197" width="0.7528%" height="15" fill="rgb(238,207,15)"/><text x="62.4306%" y="207.50"></text></g><g><title>predicates_defined_on (331,203 samples, 0.31%)</title><rect x="62.6266%" y="181" width="0.3068%" height="15" fill="rgb(213,199,42)"/><text x="62.8766%" y="191.50"></text></g><g><title>specializes (1,946,820 samples, 1.80%)</title><rect x="62.9334%" y="197" width="1.8035%" height="15" fill="rgb(235,201,11)"/><text x="63.1834%" y="207.50">s..</text></g><g><title>param_env (1,156,813 samples, 1.07%)</title><rect x="63.6652%" y="181" width="1.0716%" height="15" fill="rgb(207,46,11)"/><text x="63.9152%" y="191.50"></text></g><g><title>def_span (539,855 samples, 0.50%)</title><rect x="64.2368%" y="165" width="0.5001%" height="15" fill="rgb(241,35,35)"/><text x="64.4868%" y="175.50"></text></g><g><title>metadata_decode_entry_def_span (478,125 samples, 0.44%)</title><rect x="64.2940%" y="149" width="0.4429%" height="15" fill="rgb(243,32,47)"/><text x="64.5440%" y="159.50"></text></g><g><title>trait_impls_of (112,632 samples, 0.10%)</title><rect x="64.7397%" y="197" width="0.1043%" height="15" fill="rgb(247,202,23)"/><text x="64.9897%" y="207.50"></text></g><g><title>evaluate_obligation (6,292,081 samples, 5.83%)</title><rect x="59.0230%" y="213" width="5.8288%" height="15" fill="rgb(219,102,11)"/><text x="59.2730%" y="223.50">evaluat..</text></g><g><title>item_types_checking (8,536,386 samples, 7.91%)</title><rect x="57.1372%" y="261" width="7.9079%" height="15" fill="rgb(243,110,44)"/><text x="57.3872%" y="271.50">item_types_..</text></g><g><title>check_mod_item_types (8,532,606 samples, 7.90%)</title><rect x="57.1407%" y="245" width="7.9044%" height="15" fill="rgb(222,74,54)"/><text x="57.3907%" y="255.50">check_mod_i..</text></g><g><title>typeck (7,687,716 samples, 7.12%)</title><rect x="57.9233%" y="229" width="7.1217%" height="15" fill="rgb(216,99,12)"/><text x="58.1733%" y="239.50">typeck</text></g><g><title>fn_sig (325,665 samples, 0.30%)</title><rect x="65.3093%" y="229" width="0.3017%" height="15" fill="rgb(226,22,26)"/><text x="65.5593%" y="239.50"></text></g><g><title>lint_levels (180,532 samples, 0.17%)</title><rect x="66.0631%" y="181" width="0.1672%" height="15" fill="rgb(217,163,10)"/><text x="66.3131%" y="191.50"></text></g><g><title>is_late_bound_map (544,416 samples, 0.50%)</title><rect x="65.7271%" y="213" width="0.5043%" height="15" fill="rgb(213,25,53)"/><text x="65.9771%" y="223.50"></text></g><g><title>resolve_lifetimes (517,476 samples, 0.48%)</title><rect x="65.7521%" y="197" width="0.4794%" height="15" fill="rgb(252,105,26)"/><text x="66.0021%" y="207.50"></text></g><g><title>named_region_map (135,941 samples, 0.13%)</title><rect x="66.2314%" y="213" width="0.1259%" height="15" fill="rgb(220,39,43)"/><text x="66.4814%" y="223.50"></text></g><g><title>resolve_lifetimes (115,291 samples, 0.11%)</title><rect x="66.2506%" y="197" width="0.1068%" height="15" fill="rgb(229,68,48)"/><text x="66.5006%" y="207.50"></text></g><g><title>generics_of (822,379 samples, 0.76%)</title><rect x="65.6110%" y="229" width="0.7618%" height="15" fill="rgb(252,8,32)"/><text x="65.8610%" y="239.50"></text></g><g><title>predicates_of (530,587 samples, 0.49%)</title><rect x="66.4242%" y="229" width="0.4915%" height="15" fill="rgb(223,20,43)"/><text x="66.6742%" y="239.50"></text></g><g><title>predicates_defined_on (483,706 samples, 0.45%)</title><rect x="66.4677%" y="213" width="0.4481%" height="15" fill="rgb(229,81,49)"/><text x="66.7177%" y="223.50"></text></g><g><title>inferred_outlives_of (294,013 samples, 0.27%)</title><rect x="66.6434%" y="197" width="0.2724%" height="15" fill="rgb(236,28,36)"/><text x="66.8934%" y="207.50"></text></g><g><title>inferred_outlives_crate (271,213 samples, 0.25%)</title><rect x="66.6645%" y="181" width="0.2512%" height="15" fill="rgb(249,185,26)"/><text x="66.9145%" y="191.50"></text></g><g><title>type_of (156,480 samples, 0.14%)</title><rect x="66.7708%" y="165" width="0.1450%" height="15" fill="rgb(249,174,33)"/><text x="67.0208%" y="175.50"></text></g><g><title>type_collecting (2,214,645 samples, 2.05%)</title><rect x="65.0459%" y="261" width="2.0516%" height="15" fill="rgb(233,201,37)"/><text x="65.2959%" y="271.50">t..</text></g><g><title>collect_mod_item_types (2,204,225 samples, 2.04%)</title><rect x="65.0556%" y="245" width="2.0419%" height="15" fill="rgb(221,78,26)"/><text x="65.3056%" y="255.50">c..</text></g><g><title>type_of (196,163 samples, 0.18%)</title><rect x="66.9158%" y="229" width="0.1817%" height="15" fill="rgb(250,127,30)"/><text x="67.1658%" y="239.50"></text></g><g><title>evaluate_obligation (272,575 samples, 0.25%)</title><rect x="67.6746%" y="229" width="0.2525%" height="15" fill="rgb(230,49,44)"/><text x="67.9246%" y="239.50"></text></g><g><title>check_impl_item_well_formed (1,129,861 samples, 1.05%)</title><rect x="67.1790%" y="245" width="1.0467%" height="15" fill="rgb(229,67,23)"/><text x="67.4290%" y="255.50"></text></g><g><title>region_scope_tree (132,222 samples, 0.12%)</title><rect x="68.1032%" y="229" width="0.1225%" height="15" fill="rgb(249,83,47)"/><text x="68.3532%" y="239.50"></text></g><g><title>mir_const_qualif (187,922 samples, 0.17%)</title><rect x="69.0987%" y="181" width="0.1741%" height="15" fill="rgb(215,43,3)"/><text x="69.3487%" y="191.50"></text></g><g><title>mir_const (154,952 samples, 0.14%)</title><rect x="69.1293%" y="165" width="0.1435%" height="15" fill="rgb(238,154,13)"/><text x="69.3793%" y="175.50"></text></g><g><title>unsafety_check_result (113,871 samples, 0.11%)</title><rect x="69.1673%" y="149" width="0.1055%" height="15" fill="rgb(219,56,2)"/><text x="69.4173%" y="159.50"></text></g><g><title>mir_borrowck (421,735 samples, 0.39%)</title><rect x="69.3980%" y="149" width="0.3907%" height="15" fill="rgb(233,0,4)"/><text x="69.6480%" y="159.50"></text></g><g><title>mir_for_ctfe (557,746 samples, 0.52%)</title><rect x="69.2728%" y="181" width="0.5167%" height="15" fill="rgb(235,30,7)"/><text x="69.5228%" y="191.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (510,026 samples, 0.47%)</title><rect x="69.3170%" y="165" width="0.4725%" height="15" fill="rgb(250,79,13)"/><text x="69.5670%" y="175.50"></text></g><g><title>mir_const (129,692 samples, 0.12%)</title><rect x="69.9387%" y="101" width="0.1201%" height="15" fill="rgb(211,146,34)"/><text x="70.1887%" y="111.50"></text></g><g><title>mir_const_qualif (150,152 samples, 0.14%)</title><rect x="69.9211%" y="117" width="0.1391%" height="15" fill="rgb(228,22,38)"/><text x="70.1711%" y="127.50"></text></g><g><title>mir_borrowck (306,363 samples, 0.28%)</title><rect x="70.1316%" y="85" width="0.2838%" height="15" fill="rgb(235,168,5)"/><text x="70.3816%" y="95.50"></text></g><g><title>type_op_prove_predicate (166,122 samples, 0.15%)</title><rect x="70.2615%" y="69" width="0.1539%" height="15" fill="rgb(221,155,16)"/><text x="70.5115%" y="79.50"></text></g><g><title>evaluate_obligation (157,161 samples, 0.15%)</title><rect x="70.2698%" y="53" width="0.1456%" height="15" fill="rgb(215,215,53)"/><text x="70.5198%" y="63.50"></text></g><g><title>trait_impls_of (126,381 samples, 0.12%)</title><rect x="70.2983%" y="37" width="0.1171%" height="15" fill="rgb(223,4,10)"/><text x="70.5483%" y="47.50"></text></g><g><title>mir_for_ctfe (384,104 samples, 0.36%)</title><rect x="70.0602%" y="117" width="0.3558%" height="15" fill="rgb(234,103,6)"/><text x="70.3102%" y="127.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (359,193 samples, 0.33%)</title><rect x="70.0833%" y="101" width="0.3327%" height="15" fill="rgb(227,97,0)"/><text x="70.3333%" y="111.50"></text></g><g><title>generics_of (199,622 samples, 0.18%)</title><rect x="70.9720%" y="85" width="0.1849%" height="15" fill="rgb(234,150,53)"/><text x="71.2220%" y="95.50"></text></g><g><title>metadata_decode_entry_generics_of (156,641 samples, 0.15%)</title><rect x="71.0119%" y="69" width="0.1451%" height="15" fill="rgb(228,201,54)"/><text x="71.2619%" y="79.50"></text></g><g><title>impl_trait_ref (340,294 samples, 0.32%)</title><rect x="71.1727%" y="85" width="0.3152%" height="15" fill="rgb(222,22,37)"/><text x="71.4227%" y="95.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (297,994 samples, 0.28%)</title><rect x="71.2119%" y="69" width="0.2761%" height="15" fill="rgb(237,53,32)"/><text x="71.4619%" y="79.50"></text></g><g><title>specializes (177,292 samples, 0.16%)</title><rect x="71.5465%" y="85" width="0.1642%" height="15" fill="rgb(233,25,53)"/><text x="71.7965%" y="95.50"></text></g><g><title>evaluate_obligation (1,292,424 samples, 1.20%)</title><rect x="70.5524%" y="101" width="1.1973%" height="15" fill="rgb(210,40,34)"/><text x="70.8024%" y="111.50"></text></g><g><title>eval_to_const_value_raw (2,215,905 samples, 2.05%)</title><rect x="69.8023%" y="165" width="2.0528%" height="15" fill="rgb(241,220,44)"/><text x="70.0523%" y="175.50">e..</text></g><g><title>eval_to_const_value_raw (2,213,475 samples, 2.05%)</title><rect x="69.8045%" y="149" width="2.0505%" height="15" fill="rgb(235,28,35)"/><text x="70.0545%" y="159.50">e..</text></g><g><title>eval_to_allocation_raw (2,207,855 samples, 2.05%)</title><rect x="69.8097%" y="133" width="2.0453%" height="15" fill="rgb(210,56,17)"/><text x="70.0597%" y="143.50">e..</text></g><g><title>typeck (1,551,737 samples, 1.44%)</title><rect x="70.4176%" y="117" width="1.4375%" height="15" fill="rgb(224,130,29)"/><text x="70.6676%" y="127.50"></text></g><g><title>try_normalize_mir_const_after_erasing_regions (2,235,595 samples, 2.07%)</title><rect x="69.7899%" y="181" width="2.0710%" height="15" fill="rgb(235,212,8)"/><text x="70.0399%" y="191.50">t..</text></g><g><title>evaluate_obligation (436,016 samples, 0.40%)</title><rect x="72.1267%" y="165" width="0.4039%" height="15" fill="rgb(223,33,50)"/><text x="72.3767%" y="175.50"></text></g><g><title>eval_to_const_value_raw (3,939,124 samples, 3.65%)</title><rect x="68.9747%" y="229" width="3.6491%" height="15" fill="rgb(219,149,13)"/><text x="69.2247%" y="239.50">eval..</text></g><g><title>eval_to_const_value_raw (3,920,654 samples, 3.63%)</title><rect x="68.9918%" y="213" width="3.6320%" height="15" fill="rgb(250,156,29)"/><text x="69.2418%" y="223.50">eval..</text></g><g><title>eval_to_allocation_raw (3,919,014 samples, 3.63%)</title><rect x="68.9933%" y="197" width="3.6305%" height="15" fill="rgb(216,193,19)"/><text x="69.2433%" y="207.50">eval..</text></g><g><title>typeck (823,559 samples, 0.76%)</title><rect x="71.8608%" y="181" width="0.7629%" height="15" fill="rgb(216,135,14)"/><text x="72.1108%" y="191.50"></text></g><g><title>evaluate_obligation (150,362 samples, 0.14%)</title><rect x="72.6238%" y="229" width="0.1393%" height="15" fill="rgb(241,47,5)"/><text x="72.8738%" y="239.50"></text></g><g><title>adt_sized_constraint (122,132 samples, 0.11%)</title><rect x="72.6499%" y="213" width="0.1131%" height="15" fill="rgb(233,42,35)"/><text x="72.8999%" y="223.50"></text></g><g><title>param_env (133,072 samples, 0.12%)</title><rect x="72.8367%" y="229" width="0.1233%" height="15" fill="rgb(231,13,6)"/><text x="73.0867%" y="239.50"></text></g><g><title>analysis (78,361,988 samples, 72.59%)</title><rect x="0.5627%" y="293" width="72.5924%" height="15" fill="rgb(207,181,40)"/><text x="0.8127%" y="303.50">analysis</text></g><g><title>type_check_crate (58,145,072 samples, 53.86%)</title><rect x="19.2911%" y="277" width="53.8640%" height="15" fill="rgb(254,173,49)"/><text x="19.5411%" y="287.50">type_check_crate</text></g><g><title>wf_checking (6,535,373 samples, 6.05%)</title><rect x="67.1009%" y="261" width="6.0542%" height="15" fill="rgb(221,1,38)"/><text x="67.3509%" y="271.50">wf_check..</text></g><g><title>check_item_well_formed (5,321,170 samples, 4.93%)</title><rect x="68.2257%" y="245" width="4.9294%" height="15" fill="rgb(206,124,46)"/><text x="68.4757%" y="255.50">check_..</text></g><g><title>codegen_crate (354,293 samples, 0.33%)</title><rect x="73.1657%" y="293" width="0.3282%" height="15" fill="rgb(249,21,11)"/><text x="73.4157%" y="303.50"></text></g><g><title>AST_validation (113,222 samples, 0.10%)</title><rect x="73.6598%" y="277" width="0.1049%" height="15" fill="rgb(222,201,40)"/><text x="73.9098%" y="287.50"></text></g><g><title>metadata_load_macro (321,483 samples, 0.30%)</title><rect x="83.2094%" y="245" width="0.2978%" height="15" fill="rgb(235,61,29)"/><text x="83.4594%" y="255.50"></text></g><g><title>macro_expand_crate (12,751,292 samples, 11.81%)</title><rect x="73.9031%" y="277" width="11.8124%" height="15" fill="rgb(219,207,3)"/><text x="74.1531%" y="287.50">macro_expand_crate</text></g><g><title>expand_crate (12,731,441 samples, 11.79%)</title><rect x="73.9215%" y="261" width="11.7941%" height="15" fill="rgb(222,56,46)"/><text x="74.1715%" y="271.50">expand_crate</text></g><g><title>metadata_register_crate (2,383,797 samples, 2.21%)</title><rect x="83.5072%" y="245" width="2.2083%" height="15" fill="rgb(239,76,54)"/><text x="83.7572%" y="255.50">m..</text></g><g><title>metadata_register_crate (876,969 samples, 0.81%)</title><rect x="84.9031%" y="229" width="0.8124%" height="15" fill="rgb(231,124,27)"/><text x="85.1531%" y="239.50"></text></g><g><title>pre_AST_expansion_lint_checks (179,202 samples, 0.17%)</title><rect x="85.7196%" y="277" width="0.1660%" height="15" fill="rgb(249,195,6)"/><text x="85.9696%" y="287.50"></text></g><g><title>late_resolve_crate (2,552,619 samples, 2.36%)</title><rect x="85.9754%" y="261" width="2.3647%" height="15" fill="rgb(237,174,47)"/><text x="86.2254%" y="271.50">la..</text></g><g><title>configure_and_expand (16,136,549 samples, 14.95%)</title><rect x="73.4939%" y="293" width="14.9485%" height="15" fill="rgb(206,201,31)"/><text x="73.7439%" y="303.50">configure_and_expand</text></g><g><title>resolve_crate (2,759,981 samples, 2.56%)</title><rect x="85.8856%" y="277" width="2.5568%" height="15" fill="rgb(231,57,52)"/><text x="86.1356%" y="287.50">re..</text></g><g><title>drop_ast (184,092 samples, 0.17%)</title><rect x="88.4424%" y="293" width="0.1705%" height="15" fill="rgb(248,177,22)"/><text x="88.6924%" y="303.50"></text></g><g><title>early_lint_checks (389,375 samples, 0.36%)</title><rect x="88.6257%" y="293" width="0.3607%" height="15" fill="rgb(215,211,37)"/><text x="88.8757%" y="303.50"></text></g><g><title>free_global_ctxt (3,563,570 samples, 3.30%)</title><rect x="88.9864%" y="293" width="3.3012%" height="15" fill="rgb(241,128,51)"/><text x="89.2364%" y="303.50">fre..</text></g><g><title>generate_crate_metadata (734,928 samples, 0.68%)</title><rect x="92.2876%" y="293" width="0.6808%" height="15" fill="rgb(227,165,31)"/><text x="92.5376%" y="303.50"></text></g><g><title>hir_lowering (2,601,529 samples, 2.41%)</title><rect x="92.9684%" y="293" width="2.4100%" height="15" fill="rgb(228,167,24)"/><text x="93.2184%" y="303.50">hi..</text></g><g><title>parse_crate (3,294,346 samples, 3.05%)</title><rect x="95.4302%" y="293" width="3.0518%" height="15" fill="rgb(228,143,12)"/><text x="95.6802%" y="303.50">par..</text></g><g><title>prepare_outputs (297,883 samples, 0.28%)</title><rect x="98.4898%" y="293" width="0.2760%" height="15" fill="rgb(249,149,8)"/><text x="98.7398%" y="303.50"></text></g><g><title>self_profile_alloc_query_strings (870,759 samples, 0.81%)</title><rect x="98.7657%" y="293" width="0.8066%" height="15" fill="rgb(243,35,44)"/><text x="99.0157%" y="303.50"></text></g><g><title>setup_global_ctxt (117,761 samples, 0.11%)</title><rect x="99.5825%" y="293" width="0.1091%" height="15" fill="rgb(246,89,9)"/><text x="99.8325%" y="303.50"></text></g><g><title>all (107,947,908 samples, 100%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(233,213,13)"/><text x="0.2500%" y="335.50"></text></g><g><title>rustc (107,947,908 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(233,141,41)"/><text x="0.2500%" y="319.50">rustc</text></g><g><title>write_crate_metadata (332,944 samples, 0.31%)</title><rect x="99.6916%" y="293" width="0.3084%" height="15" fill="rgb(239,167,4)"/><text x="99.9416%" y="303.50"></text></g></svg></svg>