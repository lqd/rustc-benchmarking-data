<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="326" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="309.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="309.00"> </text><svg id="frames" x="10" width="1180"><g><title>param_env (403,995 samples, 0.26%)</title><rect x="6.2068%" y="165" width="0.2590%" height="15" fill="rgb(227,0,7)"/><text x="6.4568%" y="175.50"></text></g><g><title>item_attrs (339,933 samples, 0.22%)</title><rect x="6.7385%" y="133" width="0.2179%" height="15" fill="rgb(217,0,24)"/><text x="6.9885%" y="143.50"></text></g><g><title>metadata_decode_entry_item_attrs (328,633 samples, 0.21%)</title><rect x="6.7458%" y="117" width="0.2107%" height="15" fill="rgb(221,193,54)"/><text x="6.9958%" y="127.50"></text></g><g><title>codegen_fn_attrs (450,535 samples, 0.29%)</title><rect x="6.6778%" y="149" width="0.2888%" height="15" fill="rgb(248,212,6)"/><text x="6.9278%" y="159.50"></text></g><g><title>adt_drop_tys (195,872 samples, 0.13%)</title><rect x="8.1071%" y="117" width="0.1256%" height="15" fill="rgb(208,68,35)"/><text x="8.3571%" y="127.50"></text></g><g><title>needs_drop_raw (880,254 samples, 0.56%)</title><rect x="8.0501%" y="133" width="0.5643%" height="15" fill="rgb(232,128,0)"/><text x="8.3001%" y="143.50"></text></g><g><title>is_copy_raw (595,590 samples, 0.38%)</title><rect x="8.2326%" y="117" width="0.3818%" height="15" fill="rgb(207,160,47)"/><text x="8.4826%" y="127.50"></text></g><g><title>evaluate_obligation (493,687 samples, 0.32%)</title><rect x="8.2980%" y="101" width="0.3165%" height="15" fill="rgb(228,23,34)"/><text x="8.5480%" y="111.50"></text></g><g><title>codegen_fulfill_obligation (225,814 samples, 0.14%)</title><rect x="8.7344%" y="117" width="0.1448%" height="15" fill="rgb(218,30,26)"/><text x="8.9844%" y="127.50"></text></g><g><title>impl_parent (227,512 samples, 0.15%)</title><rect x="9.0992%" y="101" width="0.1459%" height="15" fill="rgb(220,122,19)"/><text x="9.3492%" y="111.50"></text></g><g><title>metadata_decode_entry_impl_parent (157,432 samples, 0.10%)</title><rect x="9.1441%" y="85" width="0.1009%" height="15" fill="rgb(250,228,42)"/><text x="9.3941%" y="95.50"></text></g><g><title>specialization_graph_of (1,386,095 samples, 0.89%)</title><rect x="8.9107%" y="117" width="0.8886%" height="15" fill="rgb(240,193,28)"/><text x="9.1607%" y="127.50"></text></g><g><title>impl_trait_ref (864,520 samples, 0.55%)</title><rect x="9.2451%" y="101" width="0.5542%" height="15" fill="rgb(216,20,37)"/><text x="9.4951%" y="111.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (794,369 samples, 0.51%)</title><rect x="9.2900%" y="85" width="0.5092%" height="15" fill="rgb(206,188,39)"/><text x="9.5400%" y="95.50"></text></g><g><title>resolve_instance (1,936,051 samples, 1.24%)</title><rect x="8.6144%" y="133" width="1.2411%" height="15" fill="rgb(217,207,13)"/><text x="8.8644%" y="143.50"></text></g><g><title>thir_body (656,856 samples, 0.42%)</title><rect x="9.8662%" y="133" width="0.4211%" height="15" fill="rgb(231,73,38)"/><text x="10.1162%" y="143.50"></text></g><g><title>mir_const (6,882,855 samples, 4.41%)</title><rect x="5.8829%" y="181" width="4.4124%" height="15" fill="rgb(225,20,46)"/><text x="6.1329%" y="191.50">mir_c..</text></g><g><title>unsafety_check_result (5,973,537 samples, 3.83%)</title><rect x="6.4658%" y="165" width="3.8295%" height="15" fill="rgb(210,31,41)"/><text x="6.7158%" y="175.50">unsa..</text></g><g><title>mir_built (5,192,308 samples, 3.33%)</title><rect x="6.9666%" y="149" width="3.3286%" height="15" fill="rgb(221,200,47)"/><text x="7.2166%" y="159.50">mir..</text></g><g><title>has_structural_eq_impls (224,352 samples, 0.14%)</title><rect x="10.5426%" y="165" width="0.1438%" height="15" fill="rgb(226,26,5)"/><text x="10.7926%" y="175.50"></text></g><g><title>evaluate_obligation (198,502 samples, 0.13%)</title><rect x="10.5591%" y="149" width="0.1273%" height="15" fill="rgb(249,33,26)"/><text x="10.8091%" y="159.50"></text></g><g><title>trait_impls_of (169,752 samples, 0.11%)</title><rect x="10.5776%" y="133" width="0.1088%" height="15" fill="rgb(235,183,28)"/><text x="10.8276%" y="143.50"></text></g><g><title>mir_const_qualif (959,153 samples, 0.61%)</title><rect x="10.2953%" y="181" width="0.6149%" height="15" fill="rgb(221,5,38)"/><text x="10.5453%" y="191.50"></text></g><g><title>mir_promoted (8,381,482 samples, 5.37%)</title><rect x="5.5386%" y="197" width="5.3731%" height="15" fill="rgb(247,18,42)"/><text x="5.7886%" y="207.50">mir_pro..</text></g><g><title>type_op_ascribe_user_type (518,715 samples, 0.33%)</title><rect x="10.9117%" y="197" width="0.3325%" height="15" fill="rgb(241,131,45)"/><text x="11.1617%" y="207.50"></text></g><g><title>type_op_normalize_fn_sig (384,263 samples, 0.25%)</title><rect x="11.2442%" y="197" width="0.2463%" height="15" fill="rgb(249,31,29)"/><text x="11.4942%" y="207.50"></text></g><g><title>normalize_projection_ty (258,252 samples, 0.17%)</title><rect x="11.3250%" y="181" width="0.1656%" height="15" fill="rgb(225,111,53)"/><text x="11.5750%" y="191.50"></text></g><g><title>type_op_prove_predicate (1,512,621 samples, 0.97%)</title><rect x="11.5361%" y="197" width="0.9697%" height="15" fill="rgb(238,160,17)"/><text x="11.7861%" y="207.50"></text></g><g><title>MIR_borrow_checking (18,708,717 samples, 11.99%)</title><rect x="0.5174%" y="229" width="11.9936%" height="15" fill="rgb(214,148,48)"/><text x="0.7674%" y="239.50">MIR_borrow_checking</text></g><g><title>mir_borrowck (18,620,766 samples, 11.94%)</title><rect x="0.5738%" y="213" width="11.9372%" height="15" fill="rgb(232,36,49)"/><text x="0.8238%" y="223.50">mir_borrowck</text></g><g><title>codegen_fn_attrs (307,644 samples, 0.20%)</title><rect x="12.8263%" y="197" width="0.1972%" height="15" fill="rgb(209,103,24)"/><text x="13.0763%" y="207.50"></text></g><g><title>check_mod_attrs (510,225 samples, 0.33%)</title><rect x="12.6965%" y="213" width="0.3271%" height="15" fill="rgb(229,88,8)"/><text x="12.9465%" y="223.50"></text></g><g><title>check_mod_unstable_api_usage (479,996 samples, 0.31%)</title><rect x="13.1220%" y="213" width="0.3077%" height="15" fill="rgb(213,181,19)"/><text x="13.3720%" y="223.50"></text></g><g><title>misc_checking_1 (1,196,533 samples, 0.77%)</title><rect x="12.6882%" y="229" width="0.7671%" height="15" fill="rgb(254,191,54)"/><text x="12.9382%" y="239.50"></text></g><g><title>liveness_and_intrinsic_checking (525,596 samples, 0.34%)</title><rect x="13.4562%" y="213" width="0.3369%" height="15" fill="rgb(241,83,37)"/><text x="13.7062%" y="223.50"></text></g><g><title>check_mod_liveness (447,315 samples, 0.29%)</title><rect x="13.5064%" y="197" width="0.2868%" height="15" fill="rgb(233,36,39)"/><text x="13.7564%" y="207.50"></text></g><g><title>misc_checking_2 (975,481 samples, 0.63%)</title><rect x="13.4553%" y="229" width="0.6254%" height="15" fill="rgb(226,3,54)"/><text x="13.7053%" y="239.50"></text></g><g><title>match_checking (448,425 samples, 0.29%)</title><rect x="13.7931%" y="213" width="0.2875%" height="15" fill="rgb(245,192,40)"/><text x="14.0431%" y="223.50"></text></g><g><title>check_match (422,024 samples, 0.27%)</title><rect x="13.8101%" y="197" width="0.2705%" height="15" fill="rgb(238,167,29)"/><text x="14.0601%" y="207.50"></text></g><g><title>check_private_in_public (170,102 samples, 0.11%)</title><rect x="14.0852%" y="213" width="0.1090%" height="15" fill="rgb(232,182,51)"/><text x="14.3352%" y="223.50"></text></g><g><title>death_checking (307,083 samples, 0.20%)</title><rect x="14.1943%" y="213" width="0.1969%" height="15" fill="rgb(231,60,39)"/><text x="14.4443%" y="223.50"></text></g><g><title>layout_of (158,332 samples, 0.10%)</title><rect x="15.2439%" y="117" width="0.1015%" height="15" fill="rgb(208,69,12)"/><text x="15.4939%" y="127.50"></text></g><g><title>layout_of (209,432 samples, 0.13%)</title><rect x="15.2146%" y="133" width="0.1343%" height="15" fill="rgb(235,93,37)"/><text x="15.4646%" y="143.50"></text></g><g><title>fn_abi_of_instance (466,108 samples, 0.30%)</title><rect x="15.1157%" y="149" width="0.2988%" height="15" fill="rgb(213,116,39)"/><text x="15.3657%" y="159.50"></text></g><g><title>eval_to_allocation_raw (1,042,763 samples, 0.67%)</title><rect x="14.9214%" y="181" width="0.6685%" height="15" fill="rgb(222,207,29)"/><text x="15.1714%" y="191.50"></text></g><g><title>eval_to_allocation_raw (1,038,583 samples, 0.67%)</title><rect x="14.9241%" y="165" width="0.6658%" height="15" fill="rgb(206,96,30)"/><text x="15.1741%" y="175.50"></text></g><g><title>param_env (188,121 samples, 0.12%)</title><rect x="15.5899%" y="181" width="0.1206%" height="15" fill="rgb(218,138,4)"/><text x="15.8399%" y="191.50"></text></g><g><title>crate_lints (3,301,576 samples, 2.12%)</title><rect x="14.3921%" y="197" width="2.1165%" height="15" fill="rgb(250,191,14)"/><text x="14.6421%" y="207.50">c..</text></g><g><title>type_of (1,200,563 samples, 0.77%)</title><rect x="15.7390%" y="181" width="0.7696%" height="15" fill="rgb(239,60,40)"/><text x="15.9890%" y="191.50"></text></g><g><title>metadata_decode_entry_type_of (932,711 samples, 0.60%)</title><rect x="15.9107%" y="165" width="0.5979%" height="15" fill="rgb(206,27,48)"/><text x="16.1607%" y="175.50"></text></g><g><title>lint_checking (3,780,262 samples, 2.42%)</title><rect x="14.3911%" y="213" width="2.4234%" height="15" fill="rgb(225,35,8)"/><text x="14.6411%" y="223.50">li..</text></g><g><title>module_lints (477,206 samples, 0.31%)</title><rect x="16.5086%" y="197" width="0.3059%" height="15" fill="rgb(250,213,24)"/><text x="16.7586%" y="207.50"></text></g><g><title>lint_mod (473,466 samples, 0.30%)</title><rect x="16.5110%" y="181" width="0.3035%" height="15" fill="rgb(247,123,22)"/><text x="16.7610%" y="191.50"></text></g><g><title>privacy_access_levels (364,024 samples, 0.23%)</title><rect x="16.8145%" y="213" width="0.2334%" height="15" fill="rgb(231,138,38)"/><text x="17.0645%" y="223.50"></text></g><g><title>privacy_checking_modules (997,211 samples, 0.64%)</title><rect x="17.0479%" y="213" width="0.6393%" height="15" fill="rgb(231,145,46)"/><text x="17.2979%" y="223.50"></text></g><g><title>check_mod_privacy (994,791 samples, 0.64%)</title><rect x="17.0494%" y="197" width="0.6377%" height="15" fill="rgb(251,118,11)"/><text x="17.2994%" y="207.50"></text></g><g><title>misc_checking_3 (5,642,762 samples, 3.62%)</title><rect x="14.0806%" y="229" width="3.6174%" height="15" fill="rgb(217,147,25)"/><text x="14.3306%" y="239.50">misc..</text></g><g><title>impl_parent (992,955 samples, 0.64%)</title><rect x="18.5108%" y="165" width="0.6366%" height="15" fill="rgb(247,81,37)"/><text x="18.7608%" y="175.50"></text></g><g><title>metadata_decode_entry_impl_parent (676,553 samples, 0.43%)</title><rect x="18.7137%" y="149" width="0.4337%" height="15" fill="rgb(209,12,38)"/><text x="18.9637%" y="159.50"></text></g><g><title>impl_trait_ref (3,026,977 samples, 1.94%)</title><rect x="19.1474%" y="165" width="1.9405%" height="15" fill="rgb(227,1,9)"/><text x="19.3974%" y="175.50">i..</text></g><g><title>metadata_decode_entry_impl_trait_ref (2,714,383 samples, 1.74%)</title><rect x="19.3478%" y="149" width="1.7401%" height="15" fill="rgb(248,47,43)"/><text x="19.5978%" y="159.50"></text></g><g><title>coherent_trait (5,512,071 samples, 3.53%)</title><rect x="17.7426%" y="197" width="3.5336%" height="15" fill="rgb(221,10,30)"/><text x="17.9926%" y="207.50">coh..</text></g><g><title>specialization_graph_of (5,503,901 samples, 3.53%)</title><rect x="17.7479%" y="181" width="3.5284%" height="15" fill="rgb(210,229,1)"/><text x="17.9979%" y="191.50">spe..</text></g><g><title>trait_impls_of (292,574 samples, 0.19%)</title><rect x="21.0887%" y="165" width="0.1876%" height="15" fill="rgb(222,148,37)"/><text x="21.3387%" y="175.50"></text></g><g><title>coherence_checking (5,559,842 samples, 3.56%)</title><rect x="17.7361%" y="213" width="3.5642%" height="15" fill="rgb(234,67,33)"/><text x="17.9861%" y="223.50">cohe..</text></g><g><title>dropck_outlives (411,105 samples, 0.26%)</title><rect x="29.8236%" y="165" width="0.2635%" height="15" fill="rgb(247,98,35)"/><text x="30.0736%" y="175.50"></text></g><g><title>adt_dtorck_constraint (218,691 samples, 0.14%)</title><rect x="29.9470%" y="149" width="0.1402%" height="15" fill="rgb(247,138,52)"/><text x="30.1970%" y="159.50"></text></g><g><title>trait_impls_of (286,676 samples, 0.18%)</title><rect x="31.0827%" y="149" width="0.1838%" height="15" fill="rgb(213,79,30)"/><text x="31.3327%" y="159.50"></text></g><g><title>evaluate_obligation (1,840,315 samples, 1.18%)</title><rect x="30.0872%" y="165" width="1.1798%" height="15" fill="rgb(246,177,23)"/><text x="30.3372%" y="175.50"></text></g><g><title>fn_sig (366,773 samples, 0.24%)</title><rect x="31.2781%" y="165" width="0.2351%" height="15" fill="rgb(230,62,27)"/><text x="31.5281%" y="175.50"></text></g><g><title>method_autoderef_steps (478,038 samples, 0.31%)</title><rect x="31.7139%" y="165" width="0.3065%" height="15" fill="rgb(216,154,8)"/><text x="31.9639%" y="175.50"></text></g><g><title>evaluate_obligation (235,926 samples, 0.15%)</title><rect x="31.8691%" y="149" width="0.1512%" height="15" fill="rgb(244,35,45)"/><text x="32.1191%" y="159.50"></text></g><g><title>predicates_of (299,714 samples, 0.19%)</title><rect x="32.0619%" y="165" width="0.1921%" height="15" fill="rgb(251,115,12)"/><text x="32.3119%" y="175.50"></text></g><g><title>predicates_defined_on (207,913 samples, 0.13%)</title><rect x="32.1208%" y="149" width="0.1333%" height="15" fill="rgb(240,54,50)"/><text x="32.3708%" y="159.50"></text></g><g><title>item_bodies_checking (17,174,911 samples, 11.01%)</title><rect x="21.3104%" y="213" width="11.0103%" height="15" fill="rgb(233,84,52)"/><text x="21.5604%" y="223.50">item_bodies_chec..</text></g><g><title>typeck_item_bodies (17,172,341 samples, 11.01%)</title><rect x="21.3121%" y="197" width="11.0087%" height="15" fill="rgb(207,117,47)"/><text x="21.5621%" y="207.50">typeck_item_bodi..</text></g><g><title>typeck (17,114,619 samples, 10.97%)</title><rect x="21.3491%" y="181" width="10.9717%" height="15" fill="rgb(249,43,39)"/><text x="21.5991%" y="191.50">typeck</text></g><g><title>explicit_item_bounds (212,351 samples, 0.14%)</title><rect x="32.8788%" y="181" width="0.1361%" height="15" fill="rgb(209,38,44)"/><text x="33.1288%" y="191.50"></text></g><g><title>layout_of (156,072 samples, 0.10%)</title><rect x="33.2326%" y="37" width="0.1001%" height="15" fill="rgb(236,212,23)"/><text x="33.4826%" y="47.50"></text></g><g><title>layout_of (232,053 samples, 0.15%)</title><rect x="33.2108%" y="53" width="0.1488%" height="15" fill="rgb(242,79,21)"/><text x="33.4608%" y="63.50"></text></g><g><title>layout_of (284,553 samples, 0.18%)</title><rect x="33.1929%" y="69" width="0.1824%" height="15" fill="rgb(211,96,35)"/><text x="33.4429%" y="79.50"></text></g><g><title>layout_of (306,474 samples, 0.20%)</title><rect x="33.1856%" y="85" width="0.1965%" height="15" fill="rgb(253,215,40)"/><text x="33.4356%" y="95.50"></text></g><g><title>layout_of (352,004 samples, 0.23%)</title><rect x="33.1577%" y="117" width="0.2257%" height="15" fill="rgb(211,81,21)"/><text x="33.4077%" y="127.50"></text></g><g><title>layout_of (326,014 samples, 0.21%)</title><rect x="33.1744%" y="101" width="0.2090%" height="15" fill="rgb(208,190,38)"/><text x="33.4244%" y="111.50"></text></g><g><title>layout_of (416,585 samples, 0.27%)</title><rect x="33.1231%" y="133" width="0.2671%" height="15" fill="rgb(235,213,38)"/><text x="33.3731%" y="143.50"></text></g><g><title>layout_of (480,035 samples, 0.31%)</title><rect x="33.0913%" y="149" width="0.3077%" height="15" fill="rgb(237,122,38)"/><text x="33.3413%" y="159.50"></text></g><g><title>layout_of (527,426 samples, 0.34%)</title><rect x="33.0744%" y="165" width="0.3381%" height="15" fill="rgb(244,218,35)"/><text x="33.3244%" y="175.50"></text></g><g><title>layout_of (566,946 samples, 0.36%)</title><rect x="33.0530%" y="181" width="0.3635%" height="15" fill="rgb(240,68,47)"/><text x="33.3030%" y="191.50"></text></g><g><title>evaluate_obligation (199,622 samples, 0.13%)</title><rect x="34.4743%" y="149" width="0.1280%" height="15" fill="rgb(210,16,53)"/><text x="34.7243%" y="159.50"></text></g><g><title>mir_const (449,944 samples, 0.29%)</title><rect x="37.5599%" y="117" width="0.2884%" height="15" fill="rgb(235,124,12)"/><text x="37.8099%" y="127.50"></text></g><g><title>mir_promoted (770,290 samples, 0.49%)</title><rect x="37.3584%" y="133" width="0.4938%" height="15" fill="rgb(224,169,11)"/><text x="37.6084%" y="143.50"></text></g><g><title>type_op_normalize_fn_sig (528,275 samples, 0.34%)</title><rect x="37.8766%" y="133" width="0.3387%" height="15" fill="rgb(250,166,2)"/><text x="38.1266%" y="143.50"></text></g><g><title>normalize_projection_ty (362,823 samples, 0.23%)</title><rect x="37.9826%" y="117" width="0.2326%" height="15" fill="rgb(242,216,29)"/><text x="38.2326%" y="127.50"></text></g><g><title>type_op_normalize_predicate (215,224 samples, 0.14%)</title><rect x="38.2152%" y="133" width="0.1380%" height="15" fill="rgb(230,116,27)"/><text x="38.4652%" y="143.50"></text></g><g><title>type_op_prove_predicate (915,045 samples, 0.59%)</title><rect x="38.3625%" y="133" width="0.5866%" height="15" fill="rgb(228,99,48)"/><text x="38.6125%" y="143.50"></text></g><g><title>evaluate_obligation (178,181 samples, 0.11%)</title><rect x="38.8349%" y="117" width="0.1142%" height="15" fill="rgb(253,11,6)"/><text x="39.0849%" y="127.50"></text></g><g><title>mir_borrowck (6,773,835 samples, 4.34%)</title><rect x="34.6104%" y="149" width="4.3425%" height="15" fill="rgb(247,143,39)"/><text x="34.8604%" y="159.50">mir_b..</text></g><g><title>needs_drop_raw (186,943 samples, 0.12%)</title><rect x="39.4672%" y="85" width="0.1198%" height="15" fill="rgb(236,97,10)"/><text x="39.7172%" y="95.50"></text></g><g><title>impl_parent (685,737 samples, 0.44%)</title><rect x="40.3463%" y="53" width="0.4396%" height="15" fill="rgb(233,208,19)"/><text x="40.5963%" y="63.50"></text></g><g><title>metadata_decode_entry_impl_parent (419,096 samples, 0.27%)</title><rect x="40.5172%" y="37" width="0.2687%" height="15" fill="rgb(216,164,2)"/><text x="40.7672%" y="47.50"></text></g><g><title>specialization_graph_of (3,061,804 samples, 1.96%)</title><rect x="39.6310%" y="69" width="1.9628%" height="15" fill="rgb(220,129,5)"/><text x="39.8810%" y="79.50">s..</text></g><g><title>impl_trait_ref (1,260,234 samples, 0.81%)</title><rect x="40.7859%" y="53" width="0.8079%" height="15" fill="rgb(242,17,10)"/><text x="41.0359%" y="63.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (1,004,660 samples, 0.64%)</title><rect x="40.9498%" y="37" width="0.6441%" height="15" fill="rgb(242,107,0)"/><text x="41.1998%" y="47.50"></text></g><g><title>resolve_instance (3,145,594 samples, 2.02%)</title><rect x="39.5870%" y="85" width="2.0165%" height="15" fill="rgb(251,28,31)"/><text x="39.8370%" y="95.50">r..</text></g><g><title>associated_item (205,643 samples, 0.13%)</title><rect x="49.2131%" y="53" width="0.1318%" height="15" fill="rgb(233,223,10)"/><text x="49.4631%" y="63.50"></text></g><g><title>associated_items (339,034 samples, 0.22%)</title><rect x="49.1461%" y="69" width="0.2173%" height="15" fill="rgb(215,21,27)"/><text x="49.3961%" y="79.50"></text></g><g><title>adt_dtorck_constraint (252,631 samples, 0.16%)</title><rect x="49.5523%" y="53" width="0.1620%" height="15" fill="rgb(232,23,21)"/><text x="49.8023%" y="63.50"></text></g><g><title>dropck_outlives (534,614 samples, 0.34%)</title><rect x="49.3876%" y="69" width="0.3427%" height="15" fill="rgb(244,5,23)"/><text x="49.6376%" y="79.50"></text></g><g><title>evaluate_obligation (2,157,339 samples, 1.38%)</title><rect x="49.7383%" y="69" width="1.3830%" height="15" fill="rgb(226,81,46)"/><text x="49.9883%" y="79.50"></text></g><g><title>trait_impls_of (472,514 samples, 0.30%)</title><rect x="50.8184%" y="53" width="0.3029%" height="15" fill="rgb(247,70,30)"/><text x="51.0684%" y="63.50"></text></g><g><title>implementations_of_trait (169,572 samples, 0.11%)</title><rect x="51.0126%" y="37" width="0.1087%" height="15" fill="rgb(212,68,19)"/><text x="51.2626%" y="47.50"></text></g><g><title>is_copy_raw (494,875 samples, 0.32%)</title><rect x="51.3101%" y="69" width="0.3172%" height="15" fill="rgb(240,187,13)"/><text x="51.5601%" y="79.50"></text></g><g><title>evaluate_obligation (404,763 samples, 0.26%)</title><rect x="51.3678%" y="53" width="0.2595%" height="15" fill="rgb(223,113,26)"/><text x="51.6178%" y="63.50"></text></g><g><title>method_autoderef_steps (246,944 samples, 0.16%)</title><rect x="51.8013%" y="69" width="0.1583%" height="15" fill="rgb(206,192,2)"/><text x="52.0513%" y="79.50"></text></g><g><title>predicates_of (199,081 samples, 0.13%)</title><rect x="51.9821%" y="69" width="0.1276%" height="15" fill="rgb(241,108,4)"/><text x="52.2321%" y="79.50"></text></g><g><title>mir_built (20,318,755 samples, 13.03%)</title><rect x="39.2211%" y="101" width="13.0257%" height="15" fill="rgb(247,173,49)"/><text x="39.4711%" y="111.50">mir_built</text></g><g><title>typeck (16,477,583 samples, 10.56%)</title><rect x="41.6835%" y="85" width="10.5633%" height="15" fill="rgb(224,114,35)"/><text x="41.9335%" y="95.50">typeck</text></g><g><title>adt_drop_tys (265,983 samples, 0.17%)</title><rect x="53.2414%" y="53" width="0.1705%" height="15" fill="rgb(245,159,27)"/><text x="53.4914%" y="63.50"></text></g><g><title>is_copy_raw (224,544 samples, 0.14%)</title><rect x="53.4122%" y="53" width="0.1439%" height="15" fill="rgb(245,172,44)"/><text x="53.6622%" y="63.50"></text></g><g><title>evaluate_obligation (186,423 samples, 0.12%)</title><rect x="53.4366%" y="37" width="0.1195%" height="15" fill="rgb(236,23,11)"/><text x="53.6866%" y="47.50"></text></g><g><title>needs_drop_raw (563,228 samples, 0.36%)</title><rect x="53.1973%" y="69" width="0.3611%" height="15" fill="rgb(205,117,38)"/><text x="53.4473%" y="79.50"></text></g><g><title>thir_body (353,121 samples, 0.23%)</title><rect x="53.5701%" y="69" width="0.2264%" height="15" fill="rgb(237,72,25)"/><text x="53.8201%" y="79.50"></text></g><g><title>mir_built (2,125,521 samples, 1.36%)</title><rect x="52.4428%" y="85" width="1.3626%" height="15" fill="rgb(244,70,9)"/><text x="52.6928%" y="95.50"></text></g><g><title>mir_const (23,067,745 samples, 14.79%)</title><rect x="39.0189%" y="133" width="14.7880%" height="15" fill="rgb(217,125,39)"/><text x="39.2689%" y="143.50">mir_const</text></g><g><title>unsafety_check_result (22,870,704 samples, 14.66%)</title><rect x="39.1453%" y="117" width="14.6617%" height="15" fill="rgb(235,36,10)"/><text x="39.3953%" y="127.50">unsafety_check_result</text></g><g><title>unsafety_check_result (2,433,696 samples, 1.56%)</title><rect x="52.2468%" y="101" width="1.5602%" height="15" fill="rgb(251,123,47)"/><text x="52.4968%" y="111.50"></text></g><g><title>mir_promoted (23,181,268 samples, 14.86%)</title><rect x="38.9529%" y="149" width="14.8608%" height="15" fill="rgb(221,13,13)"/><text x="39.2029%" y="159.50">mir_promoted</text></g><g><title>type_of (32,378,887 samples, 20.76%)</title><rect x="33.4249%" y="181" width="20.7571%" height="15" fill="rgb(238,131,9)"/><text x="33.6749%" y="191.50">type_of</text></g><g><title>mir_borrowck (32,304,297 samples, 20.71%)</title><rect x="33.4727%" y="165" width="20.7093%" height="15" fill="rgb(211,50,8)"/><text x="33.7227%" y="175.50">mir_borrowck</text></g><g><title>type_op_prove_predicate (492,335 samples, 0.32%)</title><rect x="53.8664%" y="149" width="0.3156%" height="15" fill="rgb(245,182,24)"/><text x="54.1164%" y="159.50"></text></g><g><title>associated_item (305,552 samples, 0.20%)</title><rect x="56.5721%" y="149" width="0.1959%" height="15" fill="rgb(242,14,37)"/><text x="56.8221%" y="159.50"></text></g><g><title>metadata_decode_entry_associated_item (238,441 samples, 0.15%)</title><rect x="56.6151%" y="133" width="0.1529%" height="15" fill="rgb(246,228,12)"/><text x="56.8651%" y="143.50"></text></g><g><title>associated_items (445,184 samples, 0.29%)</title><rect x="56.4983%" y="165" width="0.2854%" height="15" fill="rgb(213,55,15)"/><text x="56.7483%" y="175.50"></text></g><g><title>adt_def (210,152 samples, 0.13%)</title><rect x="56.9224%" y="133" width="0.1347%" height="15" fill="rgb(209,9,3)"/><text x="57.1724%" y="143.50"></text></g><g><title>metadata_decode_entry_adt_def (207,072 samples, 0.13%)</title><rect x="56.9243%" y="117" width="0.1327%" height="15" fill="rgb(230,59,30)"/><text x="57.1743%" y="127.50"></text></g><g><title>adt_dtorck_constraint (227,671 samples, 0.15%)</title><rect x="57.1671%" y="117" width="0.1460%" height="15" fill="rgb(209,121,21)"/><text x="57.4171%" y="127.50"></text></g><g><title>adt_dtorck_constraint (378,464 samples, 0.24%)</title><rect x="57.0850%" y="133" width="0.2426%" height="15" fill="rgb(220,109,13)"/><text x="57.3350%" y="143.50"></text></g><g><title>adt_dtorck_constraint (779,637 samples, 0.50%)</title><rect x="56.8792%" y="149" width="0.4998%" height="15" fill="rgb(232,18,1)"/><text x="57.1292%" y="159.50"></text></g><g><title>dropck_outlives (914,868 samples, 0.59%)</title><rect x="56.7996%" y="165" width="0.5865%" height="15" fill="rgb(215,41,42)"/><text x="57.0496%" y="175.50"></text></g><g><title>generics_of (397,164 samples, 0.25%)</title><rect x="58.0882%" y="149" width="0.2546%" height="15" fill="rgb(224,123,36)"/><text x="58.3382%" y="159.50"></text></g><g><title>metadata_decode_entry_generics_of (332,584 samples, 0.21%)</title><rect x="58.1296%" y="133" width="0.2132%" height="15" fill="rgb(240,125,3)"/><text x="58.3796%" y="143.50"></text></g><g><title>impl_trait_ref (291,494 samples, 0.19%)</title><rect x="58.3513%" y="149" width="0.1869%" height="15" fill="rgb(205,98,50)"/><text x="58.6013%" y="159.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (225,772 samples, 0.14%)</title><rect x="58.3934%" y="133" width="0.1447%" height="15" fill="rgb(205,185,37)"/><text x="58.6434%" y="143.50"></text></g><g><title>trait_impls_of (411,956 samples, 0.26%)</title><rect x="58.6860%" y="149" width="0.2641%" height="15" fill="rgb(238,207,15)"/><text x="58.9360%" y="159.50"></text></g><g><title>implementations_of_trait (180,420 samples, 0.12%)</title><rect x="58.8344%" y="133" width="0.1157%" height="15" fill="rgb(213,199,42)"/><text x="59.0844%" y="143.50"></text></g><g><title>evaluate_obligation (2,442,066 samples, 1.57%)</title><rect x="57.3861%" y="165" width="1.5655%" height="15" fill="rgb(235,201,11)"/><text x="57.6361%" y="175.50"></text></g><g><title>generics_of (718,659 samples, 0.46%)</title><rect x="59.0006%" y="165" width="0.4607%" height="15" fill="rgb(207,46,11)"/><text x="59.2506%" y="175.50"></text></g><g><title>metadata_decode_entry_generics_of (573,888 samples, 0.37%)</title><rect x="59.0934%" y="149" width="0.3679%" height="15" fill="rgb(241,35,35)"/><text x="59.3434%" y="159.50"></text></g><g><title>impl_trait_ref (653,788 samples, 0.42%)</title><rect x="59.4842%" y="165" width="0.4191%" height="15" fill="rgb(243,32,47)"/><text x="59.7342%" y="175.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (522,618 samples, 0.34%)</title><rect x="59.5683%" y="149" width="0.3350%" height="15" fill="rgb(247,202,23)"/><text x="59.8183%" y="159.50"></text></g><g><title>is_copy_raw (311,014 samples, 0.20%)</title><rect x="59.9294%" y="165" width="0.1994%" height="15" fill="rgb(219,102,11)"/><text x="60.1794%" y="175.50"></text></g><g><title>evaluate_obligation (285,744 samples, 0.18%)</title><rect x="59.9456%" y="149" width="0.1832%" height="15" fill="rgb(243,110,44)"/><text x="60.1956%" y="159.50"></text></g><g><title>trait_impls_of (160,932 samples, 0.10%)</title><rect x="60.0257%" y="133" width="0.1032%" height="15" fill="rgb(222,74,54)"/><text x="60.2757%" y="143.50"></text></g><g><title>method_autoderef_steps (260,643 samples, 0.17%)</title><rect x="60.1820%" y="165" width="0.1671%" height="15" fill="rgb(216,99,12)"/><text x="60.4320%" y="175.50"></text></g><g><title>predicates_of (204,523 samples, 0.13%)</title><rect x="60.3607%" y="165" width="0.1311%" height="15" fill="rgb(226,22,26)"/><text x="60.6107%" y="175.50"></text></g><g><title>item_types_checking (44,231,179 samples, 28.36%)</title><rect x="32.3208%" y="213" width="28.3553%" height="15" fill="rgb(217,163,10)"/><text x="32.5708%" y="223.50">item_types_checking</text></g><g><title>check_mod_item_types (44,226,829 samples, 28.35%)</title><rect x="32.3235%" y="197" width="28.3525%" height="15" fill="rgb(213,25,53)"/><text x="32.5735%" y="207.50">check_mod_item_types</text></g><g><title>typeck (10,130,023 samples, 6.49%)</title><rect x="54.1820%" y="181" width="6.4941%" height="15" fill="rgb(252,105,26)"/><text x="54.4320%" y="191.50">typeck</text></g><g><title>fn_sig (258,543 samples, 0.17%)</title><rect x="60.8111%" y="181" width="0.1657%" height="15" fill="rgb(220,39,43)"/><text x="61.0611%" y="191.50"></text></g><g><title>named_region_map (213,501 samples, 0.14%)</title><rect x="61.0342%" y="165" width="0.1369%" height="15" fill="rgb(229,68,48)"/><text x="61.2842%" y="175.50"></text></g><g><title>resolve_lifetimes (197,681 samples, 0.13%)</title><rect x="61.0443%" y="149" width="0.1267%" height="15" fill="rgb(252,8,32)"/><text x="61.2943%" y="159.50"></text></g><g><title>generics_of (316,064 samples, 0.20%)</title><rect x="60.9768%" y="181" width="0.2026%" height="15" fill="rgb(223,20,43)"/><text x="61.2268%" y="191.50"></text></g><g><title>explicit_predicates_of (334,323 samples, 0.21%)</title><rect x="61.2462%" y="149" width="0.2143%" height="15" fill="rgb(229,81,49)"/><text x="61.4962%" y="159.50"></text></g><g><title>predicates_of (627,417 samples, 0.40%)</title><rect x="61.1886%" y="181" width="0.4022%" height="15" fill="rgb(236,28,36)"/><text x="61.4386%" y="191.50"></text></g><g><title>predicates_defined_on (594,245 samples, 0.38%)</title><rect x="61.2099%" y="165" width="0.3810%" height="15" fill="rgb(249,185,26)"/><text x="61.4599%" y="175.50"></text></g><g><title>inferred_outlives_of (203,242 samples, 0.13%)</title><rect x="61.4605%" y="149" width="0.1303%" height="15" fill="rgb(249,174,33)"/><text x="61.7105%" y="159.50"></text></g><g><title>inferred_outlives_crate (183,962 samples, 0.12%)</title><rect x="61.4729%" y="133" width="0.1179%" height="15" fill="rgb(233,201,37)"/><text x="61.7229%" y="143.50"></text></g><g><title>type_collecting (1,561,477 samples, 1.00%)</title><rect x="60.6773%" y="213" width="1.0010%" height="15" fill="rgb(221,78,26)"/><text x="60.9273%" y="223.50"></text></g><g><title>collect_mod_item_types (1,555,457 samples, 1.00%)</title><rect x="60.6811%" y="197" width="0.9972%" height="15" fill="rgb(250,127,30)"/><text x="60.9311%" y="207.50"></text></g><g><title>evaluate_obligation (673,539 samples, 0.43%)</title><rect x="62.9423%" y="181" width="0.4318%" height="15" fill="rgb(230,49,44)"/><text x="63.1923%" y="191.50"></text></g><g><title>implied_outlives_bounds (197,424 samples, 0.13%)</title><rect x="63.3894%" y="181" width="0.1266%" height="15" fill="rgb(229,67,23)"/><text x="63.6394%" y="191.50"></text></g><g><title>param_env (203,392 samples, 0.13%)</title><rect x="63.5167%" y="181" width="0.1304%" height="15" fill="rgb(249,83,47)"/><text x="63.7667%" y="191.50"></text></g><g><title>region_scope_tree (314,615 samples, 0.20%)</title><rect x="63.6877%" y="181" width="0.2017%" height="15" fill="rgb(215,43,3)"/><text x="63.9377%" y="191.50"></text></g><g><title>trait_impls_of (191,113 samples, 0.12%)</title><rect x="63.8915%" y="181" width="0.1225%" height="15" fill="rgb(238,154,13)"/><text x="64.1415%" y="191.50"></text></g><g><title>check_impl_item_well_formed (3,491,908 samples, 2.24%)</title><rect x="61.7766%" y="197" width="2.2386%" height="15" fill="rgb(219,56,2)"/><text x="62.0266%" y="207.50">c..</text></g><g><title>adt_def (316,433 samples, 0.20%)</title><rect x="64.7956%" y="149" width="0.2029%" height="15" fill="rgb(233,0,4)"/><text x="65.0456%" y="159.50"></text></g><g><title>metadata_decode_entry_adt_def (311,583 samples, 0.20%)</title><rect x="64.7987%" y="133" width="0.1997%" height="15" fill="rgb(235,30,7)"/><text x="65.0487%" y="143.50"></text></g><g><title>item_attrs (260,773 samples, 0.17%)</title><rect x="64.8313%" y="117" width="0.1672%" height="15" fill="rgb(250,79,13)"/><text x="65.0813%" y="127.50"></text></g><g><title>metadata_decode_entry_item_attrs (255,943 samples, 0.16%)</title><rect x="64.8344%" y="101" width="0.1641%" height="15" fill="rgb(211,146,34)"/><text x="65.0844%" y="111.50"></text></g><g><title>adt_sized_constraint (495,503 samples, 0.32%)</title><rect x="64.7816%" y="165" width="0.3177%" height="15" fill="rgb(228,22,38)"/><text x="65.0316%" y="175.50"></text></g><g><title>evaluate_obligation (1,605,466 samples, 1.03%)</title><rect x="64.3726%" y="181" width="1.0292%" height="15" fill="rgb(235,168,5)"/><text x="64.6226%" y="191.50"></text></g><g><title>param_env (184,330 samples, 0.12%)</title><rect x="65.4206%" y="181" width="0.1182%" height="15" fill="rgb(221,155,16)"/><text x="65.6706%" y="191.50"></text></g><g><title>check_item_well_formed (2,549,817 samples, 1.63%)</title><rect x="64.0152%" y="197" width="1.6346%" height="15" fill="rgb(215,215,53)"/><text x="64.2652%" y="207.50"></text></g><g><title>evaluate_obligation (235,594 samples, 0.15%)</title><rect x="65.8404%" y="181" width="0.1510%" height="15" fill="rgb(223,4,10)"/><text x="66.0904%" y="191.50"></text></g><g><title>analysis (102,646,675 samples, 65.80%)</title><rect x="0.3723%" y="245" width="65.8037%" height="15" fill="rgb(234,103,6)"/><text x="0.6223%" y="255.50">analysis</text></g><g><title>type_check_crate (75,620,396 samples, 48.48%)</title><rect x="17.6980%" y="229" width="48.4779%" height="15" fill="rgb(227,97,0)"/><text x="17.9480%" y="239.50">type_check_crate</text></g><g><title>wf_checking (7,010,596 samples, 4.49%)</title><rect x="61.6817%" y="213" width="4.4943%" height="15" fill="rgb(234,150,53)"/><text x="61.9317%" y="223.50">wf_ch..</text></g><g><title>check_trait_item_well_formed (820,759 samples, 0.53%)</title><rect x="65.6498%" y="197" width="0.5262%" height="15" fill="rgb(228,201,54)"/><text x="65.8998%" y="207.50"></text></g><g><title>codegen_crate (588,986 samples, 0.38%)</title><rect x="66.1812%" y="245" width="0.3776%" height="15" fill="rgb(222,22,37)"/><text x="66.4312%" y="255.50"></text></g><g><title>AST_validation (166,292 samples, 0.11%)</title><rect x="66.6551%" y="229" width="0.1066%" height="15" fill="rgb(237,53,32)"/><text x="66.9051%" y="239.50"></text></g><g><title>metadata_register_crate (3,410,269 samples, 2.19%)</title><rect x="76.9230%" y="197" width="2.1862%" height="15" fill="rgb(233,25,53)"/><text x="77.1730%" y="207.50">m..</text></g><g><title>metadata_register_crate (1,629,567 samples, 1.04%)</title><rect x="78.0646%" y="181" width="1.0447%" height="15" fill="rgb(210,40,34)"/><text x="78.3146%" y="191.50"></text></g><g><title>metadata_register_crate (178,080 samples, 0.11%)</title><rect x="78.9951%" y="165" width="0.1142%" height="15" fill="rgb(241,220,44)"/><text x="79.2451%" y="175.50"></text></g><g><title>macro_expand_crate (19,160,121 samples, 12.28%)</title><rect x="66.8447%" y="229" width="12.2830%" height="15" fill="rgb(235,28,35)"/><text x="67.0947%" y="239.50">macro_expand_crate</text></g><g><title>expand_crate (19,141,571 samples, 12.27%)</title><rect x="66.8566%" y="213" width="12.2711%" height="15" fill="rgb(210,56,17)"/><text x="67.1066%" y="223.50">expand_crate</text></g><g><title>pre_AST_expansion_lint_checks (273,123 samples, 0.18%)</title><rect x="79.1300%" y="229" width="0.1751%" height="15" fill="rgb(224,130,29)"/><text x="79.3800%" y="239.50"></text></g><g><title>late_resolve_crate (9,856,278 samples, 6.32%)</title><rect x="79.4209%" y="213" width="6.3186%" height="15" fill="rgb(235,212,8)"/><text x="79.6709%" y="223.50">late_res..</text></g><g><title>configure_and_expand (30,097,342 samples, 19.29%)</title><rect x="66.5588%" y="245" width="19.2945%" height="15" fill="rgb(223,33,50)"/><text x="66.8088%" y="255.50">configure_and_expand</text></g><g><title>resolve_crate (10,214,473 samples, 6.55%)</title><rect x="79.3051%" y="229" width="6.5482%" height="15" fill="rgb(219,149,13)"/><text x="79.5551%" y="239.50">resolve_c..</text></g><g><title>early_lint_checks (270,763 samples, 0.17%)</title><rect x="85.9494%" y="245" width="0.1736%" height="15" fill="rgb(250,156,29)"/><text x="86.1994%" y="255.50"></text></g><g><title>free_global_ctxt (4,355,749 samples, 2.79%)</title><rect x="86.1230%" y="245" width="2.7923%" height="15" fill="rgb(216,193,19)"/><text x="86.3730%" y="255.50">fr..</text></g><g><title>crate_host_hash (254,452 samples, 0.16%)</title><rect x="89.7023%" y="229" width="0.1631%" height="15" fill="rgb(216,135,14)"/><text x="89.9523%" y="239.50"></text></g><g><title>layout_of (346,006 samples, 0.22%)</title><rect x="91.6518%" y="213" width="0.2218%" height="15" fill="rgb(241,47,5)"/><text x="91.9018%" y="223.50"></text></g><g><title>layout_of (263,133 samples, 0.17%)</title><rect x="91.7049%" y="197" width="0.1687%" height="15" fill="rgb(233,42,35)"/><text x="91.9549%" y="207.50"></text></g><g><title>layout_of (214,991 samples, 0.14%)</title><rect x="91.7358%" y="181" width="0.1378%" height="15" fill="rgb(231,13,6)"/><text x="91.9858%" y="191.50"></text></g><g><title>layout_of (175,490 samples, 0.11%)</title><rect x="91.7611%" y="165" width="0.1125%" height="15" fill="rgb(207,181,40)"/><text x="92.0111%" y="175.50"></text></g><g><title>is_copy_raw (636,378 samples, 0.41%)</title><rect x="94.0223%" y="181" width="0.4080%" height="15" fill="rgb(254,173,49)"/><text x="94.2723%" y="191.50"></text></g><g><title>evaluate_obligation (503,456 samples, 0.32%)</title><rect x="94.1075%" y="165" width="0.3228%" height="15" fill="rgb(221,1,38)"/><text x="94.3575%" y="175.50"></text></g><g><title>needs_drop_raw (949,502 samples, 0.61%)</title><rect x="93.9104%" y="197" width="0.6087%" height="15" fill="rgb(206,124,46)"/><text x="94.1604%" y="207.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (4,170,566 samples, 2.67%)</title><rect x="91.8736%" y="213" width="2.6736%" height="15" fill="rgb(249,21,11)"/><text x="92.1236%" y="223.50">mi..</text></g><g><title>optimized_mir (7,188,449 samples, 4.61%)</title><rect x="89.9479%" y="229" width="4.6083%" height="15" fill="rgb(222,201,40)"/><text x="90.1979%" y="239.50">optim..</text></g><g><title>generate_crate_metadata (8,825,737 samples, 5.66%)</title><rect x="88.9154%" y="245" width="5.6579%" height="15" fill="rgb(235,61,29)"/><text x="89.1654%" y="255.50">generat..</text></g><g><title>hir_lowering (2,153,294 samples, 1.38%)</title><rect x="94.5733%" y="245" width="1.3804%" height="15" fill="rgb(219,207,3)"/><text x="94.8233%" y="255.50"></text></g><g><title>parse_crate (4,551,710 samples, 2.92%)</title><rect x="95.9897%" y="245" width="2.9180%" height="15" fill="rgb(222,56,46)"/><text x="96.2397%" y="255.50">pa..</text></g><g><title>prepare_outputs (272,643 samples, 0.17%)</title><rect x="98.9115%" y="245" width="0.1748%" height="15" fill="rgb(239,76,54)"/><text x="99.1615%" y="255.50"></text></g><g><title>self_profile_alloc_query_strings (968,261 samples, 0.62%)</title><rect x="99.0863%" y="245" width="0.6207%" height="15" fill="rgb(231,124,27)"/><text x="99.3363%" y="255.50"></text></g><g><title>all (155,989,274 samples, 100%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(249,195,6)"/><text x="0.2500%" y="287.50"></text></g><g><title>rustc (155,989,274 samples, 100.00%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(237,174,47)"/><text x="0.2500%" y="271.50">rustc</text></g><g><title>write_crate_metadata (384,105 samples, 0.25%)</title><rect x="99.7538%" y="245" width="0.2462%" height="15" fill="rgb(206,201,31)"/><text x="100.0038%" y="255.50"></text></g></svg></svg>