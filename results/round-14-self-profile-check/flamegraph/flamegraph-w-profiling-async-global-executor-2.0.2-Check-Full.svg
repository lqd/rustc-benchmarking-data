<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="374" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="357.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="357.00"> </text><svg id="frames" x="10" width="1180"><g><title>implied_outlives_bounds (228,002 samples, 0.17%)</title><rect x="6.6222%" y="245" width="0.1709%" height="15" fill="rgb(227,0,7)"/><text x="6.8722%" y="255.50"></text></g><g><title>param_env (251,713 samples, 0.19%)</title><rect x="7.6193%" y="213" width="0.1887%" height="15" fill="rgb(217,0,24)"/><text x="7.8693%" y="223.50"></text></g><g><title>item_attrs (216,802 samples, 0.16%)</title><rect x="8.0437%" y="181" width="0.1625%" height="15" fill="rgb(221,193,54)"/><text x="8.2937%" y="191.50"></text></g><g><title>metadata_decode_entry_item_attrs (207,742 samples, 0.16%)</title><rect x="8.0505%" y="165" width="0.1557%" height="15" fill="rgb(248,212,6)"/><text x="8.3005%" y="175.50"></text></g><g><title>codegen_fn_attrs (296,943 samples, 0.22%)</title><rect x="7.9914%" y="197" width="0.2226%" height="15" fill="rgb(208,68,35)"/><text x="8.2414%" y="207.50"></text></g><g><title>is_copy_raw (445,123 samples, 0.33%)</title><rect x="9.4171%" y="165" width="0.3336%" height="15" fill="rgb(232,128,0)"/><text x="9.6671%" y="175.50"></text></g><g><title>evaluate_obligation (333,532 samples, 0.25%)</title><rect x="9.5008%" y="149" width="0.2500%" height="15" fill="rgb(207,160,47)"/><text x="9.7508%" y="159.50"></text></g><g><title>needs_drop_raw (633,497 samples, 0.47%)</title><rect x="9.2764%" y="181" width="0.4748%" height="15" fill="rgb(228,23,34)"/><text x="9.5264%" y="191.50"></text></g><g><title>specialization_graph_of (481,435 samples, 0.36%)</title><rect x="9.9140%" y="165" width="0.3608%" height="15" fill="rgb(218,30,26)"/><text x="10.1640%" y="175.50"></text></g><g><title>impl_trait_ref (157,892 samples, 0.12%)</title><rect x="10.1565%" y="149" width="0.1183%" height="15" fill="rgb(220,122,19)"/><text x="10.4065%" y="159.50"></text></g><g><title>resolve_instance (756,499 samples, 0.57%)</title><rect x="9.7512%" y="181" width="0.5670%" height="15" fill="rgb(250,228,42)"/><text x="10.0012%" y="191.50"></text></g><g><title>thir_body (461,483 samples, 0.35%)</title><rect x="10.3395%" y="181" width="0.3459%" height="15" fill="rgb(240,193,28)"/><text x="10.5895%" y="191.50"></text></g><g><title>mir_const (4,564,158 samples, 3.42%)</title><rect x="7.2870%" y="229" width="3.4209%" height="15" fill="rgb(216,20,37)"/><text x="7.5370%" y="239.50">mir..</text></g><g><title>unsafety_check_result (3,869,098 samples, 2.90%)</title><rect x="7.8080%" y="213" width="2.8999%" height="15" fill="rgb(206,188,39)"/><text x="8.0580%" y="223.50">un..</text></g><g><title>mir_built (3,327,391 samples, 2.49%)</title><rect x="8.2140%" y="197" width="2.4939%" height="15" fill="rgb(217,207,13)"/><text x="8.4640%" y="207.50">mi..</text></g><g><title>mir_const (320,156 samples, 0.24%)</title><rect x="11.2625%" y="213" width="0.2400%" height="15" fill="rgb(231,73,38)"/><text x="11.5125%" y="223.50"></text></g><g><title>unsafety_check_result (200,094 samples, 0.15%)</title><rect x="11.3525%" y="197" width="0.1500%" height="15" fill="rgb(225,20,46)"/><text x="11.6025%" y="207.50"></text></g><g><title>mir_built (142,754 samples, 0.11%)</title><rect x="11.3955%" y="181" width="0.1070%" height="15" fill="rgb(210,31,41)"/><text x="11.6455%" y="191.50"></text></g><g><title>needs_drop_raw (172,873 samples, 0.13%)</title><rect x="11.5025%" y="213" width="0.1296%" height="15" fill="rgb(221,200,47)"/><text x="11.7525%" y="223.50"></text></g><g><title>mir_const_qualif (1,241,574 samples, 0.93%)</title><rect x="10.7079%" y="229" width="0.9306%" height="15" fill="rgb(226,26,5)"/><text x="10.9579%" y="239.50"></text></g><g><title>mir_promoted (6,315,087 samples, 4.73%)</title><rect x="6.9055%" y="245" width="4.7332%" height="15" fill="rgb(249,33,26)"/><text x="7.1555%" y="255.50">mir_pr..</text></g><g><title>type_op_ascribe_user_type (317,213 samples, 0.24%)</title><rect x="11.6387%" y="245" width="0.2378%" height="15" fill="rgb(235,183,28)"/><text x="11.8887%" y="255.50"></text></g><g><title>type_op_normalize_fn_sig (229,832 samples, 0.17%)</title><rect x="11.8765%" y="245" width="0.1723%" height="15" fill="rgb(221,5,38)"/><text x="12.1265%" y="255.50"></text></g><g><title>type_op_normalize_predicate (147,086 samples, 0.11%)</title><rect x="12.0487%" y="245" width="0.1102%" height="15" fill="rgb(247,18,42)"/><text x="12.2987%" y="255.50"></text></g><g><title>type_op_prove_predicate (2,630,713 samples, 1.97%)</title><rect x="12.2004%" y="245" width="1.9718%" height="15" fill="rgb(241,131,45)"/><text x="12.4504%" y="255.50">t..</text></g><g><title>evaluate_obligation (140,201 samples, 0.11%)</title><rect x="14.0670%" y="229" width="0.1051%" height="15" fill="rgb(249,31,29)"/><text x="14.3170%" y="239.50"></text></g><g><title>MIR_borrow_checking (17,686,446 samples, 13.26%)</title><rect x="0.9223%" y="277" width="13.2562%" height="15" fill="rgb(225,111,53)"/><text x="1.1723%" y="287.50">MIR_borrow_checking</text></g><g><title>mir_borrowck (17,592,246 samples, 13.19%)</title><rect x="0.9929%" y="261" width="13.1856%" height="15" fill="rgb(238,160,17)"/><text x="1.2429%" y="271.50">mir_borrowck</text></g><g><title>MIR_effect_checking (390,824 samples, 0.29%)</title><rect x="14.1785%" y="277" width="0.2929%" height="15" fill="rgb(214,148,48)"/><text x="14.4285%" y="287.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (205,112 samples, 0.15%)</title><rect x="14.3177%" y="261" width="0.1537%" height="15" fill="rgb(232,36,49)"/><text x="14.5677%" y="271.50"></text></g><g><title>hir_module_items (266,034 samples, 0.20%)</title><rect x="14.4714%" y="277" width="0.1994%" height="15" fill="rgb(209,103,24)"/><text x="14.7214%" y="287.50"></text></g><g><title>codegen_fn_attrs (272,772 samples, 0.20%)</title><rect x="15.0601%" y="213" width="0.2044%" height="15" fill="rgb(229,88,8)"/><text x="15.3101%" y="223.50"></text></g><g><title>codegen_fn_attrs (439,585 samples, 0.33%)</title><rect x="14.9443%" y="245" width="0.3295%" height="15" fill="rgb(213,181,19)"/><text x="15.1943%" y="255.50"></text></g><g><title>should_inherit_track_caller (361,634 samples, 0.27%)</title><rect x="15.0027%" y="229" width="0.2710%" height="15" fill="rgb(254,191,54)"/><text x="15.2527%" y="239.50"></text></g><g><title>check_mod_attrs (756,028 samples, 0.57%)</title><rect x="14.7073%" y="261" width="0.5667%" height="15" fill="rgb(241,83,37)"/><text x="14.9573%" y="271.50"></text></g><g><title>check_mod_const_bodies (167,601 samples, 0.13%)</title><rect x="15.2739%" y="261" width="0.1256%" height="15" fill="rgb(233,36,39)"/><text x="15.5239%" y="271.50"></text></g><g><title>lookup_deprecation_entry (226,871 samples, 0.17%)</title><rect x="15.6993%" y="245" width="0.1700%" height="15" fill="rgb(226,3,54)"/><text x="15.9493%" y="255.50"></text></g><g><title>check_mod_unstable_api_usage (663,137 samples, 0.50%)</title><rect x="15.4860%" y="261" width="0.4970%" height="15" fill="rgb(245,192,40)"/><text x="15.7360%" y="271.50"></text></g><g><title>misc_checking_1 (1,854,561 samples, 1.39%)</title><rect x="14.6711%" y="277" width="1.3900%" height="15" fill="rgb(238,167,29)"/><text x="14.9211%" y="287.50"></text></g><g><title>liveness_and_intrinsic_checking (406,105 samples, 0.30%)</title><rect x="16.0621%" y="261" width="0.3044%" height="15" fill="rgb(232,182,51)"/><text x="16.3121%" y="271.50"></text></g><g><title>check_mod_liveness (338,674 samples, 0.25%)</title><rect x="16.1127%" y="245" width="0.2538%" height="15" fill="rgb(231,60,39)"/><text x="16.3627%" y="255.50"></text></g><g><title>misc_checking_2 (732,448 samples, 0.55%)</title><rect x="16.0611%" y="277" width="0.5490%" height="15" fill="rgb(208,69,12)"/><text x="16.3111%" y="287.50"></text></g><g><title>match_checking (324,983 samples, 0.24%)</title><rect x="16.3665%" y="261" width="0.2436%" height="15" fill="rgb(235,93,37)"/><text x="16.6165%" y="271.50"></text></g><g><title>check_match (300,263 samples, 0.23%)</title><rect x="16.3850%" y="245" width="0.2251%" height="15" fill="rgb(213,116,39)"/><text x="16.6350%" y="255.50"></text></g><g><title>death_checking (253,673 samples, 0.19%)</title><rect x="16.7058%" y="261" width="0.1901%" height="15" fill="rgb(222,207,29)"/><text x="16.9558%" y="271.50"></text></g><g><title>layout_of (149,202 samples, 0.11%)</title><rect x="18.2386%" y="69" width="0.1118%" height="15" fill="rgb(206,96,30)"/><text x="18.4886%" y="79.50"></text></g><g><title>layout_of (201,562 samples, 0.15%)</title><rect x="18.2080%" y="85" width="0.1511%" height="15" fill="rgb(218,138,4)"/><text x="18.4580%" y="95.50"></text></g><g><title>layout_of (256,293 samples, 0.19%)</title><rect x="18.1743%" y="101" width="0.1921%" height="15" fill="rgb(250,191,14)"/><text x="18.4243%" y="111.50"></text></g><g><title>layout_of (362,973 samples, 0.27%)</title><rect x="18.1129%" y="117" width="0.2721%" height="15" fill="rgb(239,60,40)"/><text x="18.3629%" y="127.50"></text></g><g><title>layout_of (418,284 samples, 0.31%)</title><rect x="18.0887%" y="133" width="0.3135%" height="15" fill="rgb(206,27,48)"/><text x="18.3387%" y="143.50"></text></g><g><title>layout_of (479,175 samples, 0.36%)</title><rect x="18.0599%" y="149" width="0.3591%" height="15" fill="rgb(225,35,8)"/><text x="18.3099%" y="159.50"></text></g><g><title>layout_of (504,965 samples, 0.38%)</title><rect x="18.0441%" y="165" width="0.3785%" height="15" fill="rgb(250,213,24)"/><text x="18.2941%" y="175.50"></text></g><g><title>layout_of (579,556 samples, 0.43%)</title><rect x="17.9938%" y="181" width="0.4344%" height="15" fill="rgb(247,123,22)"/><text x="18.2438%" y="191.50"></text></g><g><title>fn_abi_of_instance (882,149 samples, 0.66%)</title><rect x="17.8592%" y="197" width="0.6612%" height="15" fill="rgb(231,138,38)"/><text x="18.1092%" y="207.50"></text></g><g><title>mir_for_ctfe (143,180 samples, 0.11%)</title><rect x="18.6473%" y="197" width="0.1073%" height="15" fill="rgb(231,145,46)"/><text x="18.8973%" y="207.50"></text></g><g><title>eval_to_allocation_raw (1,781,191 samples, 1.34%)</title><rect x="17.4860%" y="229" width="1.3350%" height="15" fill="rgb(251,118,11)"/><text x="17.7360%" y="239.50"></text></g><g><title>eval_to_allocation_raw (1,772,371 samples, 1.33%)</title><rect x="17.4926%" y="213" width="1.3284%" height="15" fill="rgb(217,147,25)"/><text x="17.7426%" y="223.50"></text></g><g><title>eval_to_const_value_raw (159,971 samples, 0.12%)</title><rect x="18.8210%" y="229" width="0.1199%" height="15" fill="rgb(247,81,37)"/><text x="19.0710%" y="239.50"></text></g><g><title>eval_to_const_value_raw (158,431 samples, 0.12%)</title><rect x="18.8222%" y="213" width="0.1187%" height="15" fill="rgb(209,12,38)"/><text x="19.0722%" y="223.50"></text></g><g><title>eval_to_allocation_raw (154,661 samples, 0.12%)</title><rect x="18.8250%" y="197" width="0.1159%" height="15" fill="rgb(227,1,9)"/><text x="19.0750%" y="207.50"></text></g><g><title>param_env (304,223 samples, 0.23%)</title><rect x="18.9409%" y="229" width="0.2280%" height="15" fill="rgb(248,47,43)"/><text x="19.1909%" y="239.50"></text></g><g><title>predicates_of (153,232 samples, 0.11%)</title><rect x="19.0541%" y="213" width="0.1148%" height="15" fill="rgb(221,10,30)"/><text x="19.3041%" y="223.50"></text></g><g><title>crate_lints (4,423,919 samples, 3.32%)</title><rect x="16.8974%" y="245" width="3.3158%" height="15" fill="rgb(210,229,1)"/><text x="17.1474%" y="255.50">cra..</text></g><g><title>type_of (1,307,439 samples, 0.98%)</title><rect x="19.2332%" y="229" width="0.9799%" height="15" fill="rgb(222,148,37)"/><text x="19.4832%" y="239.50"></text></g><g><title>metadata_decode_entry_type_of (1,040,098 samples, 0.78%)</title><rect x="19.4336%" y="213" width="0.7796%" height="15" fill="rgb(234,67,33)"/><text x="19.6836%" y="223.50"></text></g><g><title>lint_checking (4,790,913 samples, 3.59%)</title><rect x="16.8959%" y="261" width="3.5909%" height="15" fill="rgb(247,98,35)"/><text x="17.1459%" y="271.50">lint..</text></g><g><title>module_lints (365,014 samples, 0.27%)</title><rect x="20.2132%" y="245" width="0.2736%" height="15" fill="rgb(247,138,52)"/><text x="20.4632%" y="255.50"></text></g><g><title>lint_mod (358,144 samples, 0.27%)</title><rect x="20.2183%" y="229" width="0.2684%" height="15" fill="rgb(213,79,30)"/><text x="20.4683%" y="239.50"></text></g><g><title>privacy_access_levels (193,672 samples, 0.15%)</title><rect x="20.4868%" y="261" width="0.1452%" height="15" fill="rgb(246,177,23)"/><text x="20.7368%" y="271.50"></text></g><g><title>privacy_checking_modules (734,419 samples, 0.55%)</title><rect x="20.6319%" y="261" width="0.5505%" height="15" fill="rgb(230,62,27)"/><text x="20.8819%" y="271.50"></text></g><g><title>check_mod_privacy (730,319 samples, 0.55%)</title><rect x="20.6350%" y="245" width="0.5474%" height="15" fill="rgb(216,154,8)"/><text x="20.8850%" y="255.50"></text></g><g><title>misc_checking_3 (6,111,878 samples, 4.58%)</title><rect x="16.6101%" y="277" width="4.5809%" height="15" fill="rgb(244,35,45)"/><text x="16.8601%" y="287.50">misc_..</text></g><g><title>impl_parent (1,542,184 samples, 1.16%)</title><rect x="22.7587%" y="213" width="1.1559%" height="15" fill="rgb(251,115,12)"/><text x="23.0087%" y="223.50"></text></g><g><title>metadata_decode_entry_impl_parent (1,013,575 samples, 0.76%)</title><rect x="23.1549%" y="197" width="0.7597%" height="15" fill="rgb(240,54,50)"/><text x="23.4049%" y="207.50"></text></g><g><title>impl_trait_ref (5,267,154 samples, 3.95%)</title><rect x="23.9146%" y="213" width="3.9478%" height="15" fill="rgb(233,84,52)"/><text x="24.1646%" y="223.50">impl..</text></g><g><title>metadata_decode_entry_impl_trait_ref (4,723,041 samples, 3.54%)</title><rect x="24.3225%" y="197" width="3.5400%" height="15" fill="rgb(207,117,47)"/><text x="24.5725%" y="207.50">met..</text></g><g><title>coherent_trait (9,423,544 samples, 7.06%)</title><rect x="21.2558%" y="245" width="7.0631%" height="15" fill="rgb(249,43,39)"/><text x="21.5058%" y="255.50">coherent_..</text></g><g><title>specialization_graph_of (9,412,704 samples, 7.05%)</title><rect x="21.2639%" y="229" width="7.0549%" height="15" fill="rgb(209,38,44)"/><text x="21.5139%" y="239.50">specializ..</text></g><g><title>trait_impls_of (607,477 samples, 0.46%)</title><rect x="27.8635%" y="213" width="0.4553%" height="15" fill="rgb(236,212,23)"/><text x="28.1135%" y="223.50"></text></g><g><title>implementations_of_trait (177,010 samples, 0.13%)</title><rect x="28.1862%" y="197" width="0.1327%" height="15" fill="rgb(242,79,21)"/><text x="28.4362%" y="207.50"></text></g><g><title>coherence_checking (9,493,526 samples, 7.12%)</title><rect x="21.2394%" y="261" width="7.1155%" height="15" fill="rgb(211,96,35)"/><text x="21.4894%" y="271.50">coherence_..</text></g><g><title>dropck_outlives (178,421 samples, 0.13%)</title><rect x="30.6556%" y="213" width="0.1337%" height="15" fill="rgb(253,215,40)"/><text x="30.9056%" y="223.50"></text></g><g><title>evaluate_obligation (665,650 samples, 0.50%)</title><rect x="30.7893%" y="213" width="0.4989%" height="15" fill="rgb(211,81,21)"/><text x="31.0393%" y="223.50"></text></g><g><title>associated_item (157,512 samples, 0.12%)</title><rect x="37.4337%" y="181" width="0.1181%" height="15" fill="rgb(208,190,38)"/><text x="37.6837%" y="191.50"></text></g><g><title>associated_items (214,653 samples, 0.16%)</title><rect x="37.3986%" y="197" width="0.1609%" height="15" fill="rgb(235,213,38)"/><text x="37.6486%" y="207.50"></text></g><g><title>dropck_outlives (222,651 samples, 0.17%)</title><rect x="37.5911%" y="197" width="0.1669%" height="15" fill="rgb(237,122,38)"/><text x="37.8411%" y="207.50"></text></g><g><title>adt_def (417,384 samples, 0.31%)</title><rect x="38.4933%" y="149" width="0.3128%" height="15" fill="rgb(244,218,35)"/><text x="38.7433%" y="159.50"></text></g><g><title>metadata_decode_entry_adt_def (416,904 samples, 0.31%)</title><rect x="38.4937%" y="133" width="0.3125%" height="15" fill="rgb(240,68,47)"/><text x="38.7437%" y="143.50"></text></g><g><title>item_attrs (410,064 samples, 0.31%)</title><rect x="38.4988%" y="117" width="0.3073%" height="15" fill="rgb(210,16,53)"/><text x="38.7488%" y="127.50"></text></g><g><title>metadata_decode_entry_item_attrs (409,264 samples, 0.31%)</title><rect x="38.4994%" y="101" width="0.3067%" height="15" fill="rgb(235,124,12)"/><text x="38.7494%" y="111.50"></text></g><g><title>adt_sized_constraint (430,574 samples, 0.32%)</title><rect x="38.4911%" y="165" width="0.3227%" height="15" fill="rgb(224,169,11)"/><text x="38.7411%" y="175.50"></text></g><g><title>adt_sized_constraint (476,765 samples, 0.36%)</title><rect x="38.4585%" y="181" width="0.3573%" height="15" fill="rgb(250,166,2)"/><text x="38.7085%" y="191.50"></text></g><g><title>evaluate_obligation (1,920,386 samples, 1.44%)</title><rect x="37.7582%" y="197" width="1.4394%" height="15" fill="rgb(242,216,29)"/><text x="38.0082%" y="207.50"></text></g><g><title>trait_impls_of (342,244 samples, 0.26%)</title><rect x="38.9410%" y="181" width="0.2565%" height="15" fill="rgb(230,116,27)"/><text x="39.1910%" y="191.50"></text></g><g><title>implementations_of_trait (134,234 samples, 0.10%)</title><rect x="39.0969%" y="165" width="0.1006%" height="15" fill="rgb(228,99,48)"/><text x="39.3469%" y="175.50"></text></g><g><title>is_copy_raw (229,822 samples, 0.17%)</title><rect x="39.3984%" y="197" width="0.1723%" height="15" fill="rgb(253,11,6)"/><text x="39.6484%" y="207.50"></text></g><g><title>evaluate_obligation (174,261 samples, 0.13%)</title><rect x="39.4401%" y="181" width="0.1306%" height="15" fill="rgb(247,143,39)"/><text x="39.6901%" y="191.50"></text></g><g><title>method_autoderef_steps (270,084 samples, 0.20%)</title><rect x="39.6757%" y="197" width="0.2024%" height="15" fill="rgb(236,97,10)"/><text x="39.9257%" y="207.50"></text></g><g><title>predicates_of (231,142 samples, 0.17%)</title><rect x="39.9801%" y="197" width="0.1732%" height="15" fill="rgb(233,208,19)"/><text x="40.2301%" y="207.50"></text></g><g><title>predicates_defined_on (167,432 samples, 0.13%)</title><rect x="40.0279%" y="181" width="0.1255%" height="15" fill="rgb(216,164,2)"/><text x="40.2779%" y="191.50"></text></g><g><title>typeck (11,571,889 samples, 8.67%)</title><rect x="31.5806%" y="213" width="8.6733%" height="15" fill="rgb(220,129,5)"/><text x="31.8306%" y="223.50">typeck</text></g><g><title>item_bodies_checking (15,853,695 samples, 11.88%)</title><rect x="28.3799%" y="261" width="11.8826%" height="15" fill="rgb(242,17,10)"/><text x="28.6299%" y="271.50">item_bodies_checki..</text></g><g><title>typeck_item_bodies (15,848,995 samples, 11.88%)</title><rect x="28.3834%" y="245" width="11.8790%" height="15" fill="rgb(242,107,0)"/><text x="28.6334%" y="255.50">typeck_item_bodies</text></g><g><title>typeck (15,808,535 samples, 11.85%)</title><rect x="28.4137%" y="229" width="11.8487%" height="15" fill="rgb(251,28,31)"/><text x="28.6637%" y="239.50">typeck</text></g><g><title>layout_of (162,512 samples, 0.12%)</title><rect x="40.7933%" y="101" width="0.1218%" height="15" fill="rgb(233,223,10)"/><text x="41.0433%" y="111.50"></text></g><g><title>layout_of (213,373 samples, 0.16%)</title><rect x="40.7675%" y="117" width="0.1599%" height="15" fill="rgb(215,21,27)"/><text x="41.0175%" y="127.50"></text></g><g><title>layout_of (266,693 samples, 0.20%)</title><rect x="40.7486%" y="133" width="0.1999%" height="15" fill="rgb(232,23,21)"/><text x="40.9986%" y="143.50"></text></g><g><title>layout_of (328,684 samples, 0.25%)</title><rect x="40.7037%" y="165" width="0.2464%" height="15" fill="rgb(244,5,23)"/><text x="40.9537%" y="175.50"></text></g><g><title>layout_of (288,094 samples, 0.22%)</title><rect x="40.7342%" y="149" width="0.2159%" height="15" fill="rgb(226,81,46)"/><text x="40.9842%" y="159.50"></text></g><g><title>layout_of (379,354 samples, 0.28%)</title><rect x="40.6691%" y="181" width="0.2843%" height="15" fill="rgb(247,70,30)"/><text x="40.9191%" y="191.50"></text></g><g><title>layout_of (468,065 samples, 0.35%)</title><rect x="40.6259%" y="197" width="0.3508%" height="15" fill="rgb(212,68,19)"/><text x="40.8759%" y="207.50"></text></g><g><title>layout_of (547,026 samples, 0.41%)</title><rect x="40.5831%" y="213" width="0.4100%" height="15" fill="rgb(240,187,13)"/><text x="40.8331%" y="223.50"></text></g><g><title>layout_of (590,208 samples, 0.44%)</title><rect x="40.5583%" y="229" width="0.4424%" height="15" fill="rgb(223,113,26)"/><text x="40.8083%" y="239.50"></text></g><g><title>mir_borrowck (452,156 samples, 0.34%)</title><rect x="44.2941%" y="181" width="0.3389%" height="15" fill="rgb(206,192,2)"/><text x="44.5441%" y="191.50"></text></g><g><title>mir_const (289,004 samples, 0.22%)</title><rect x="44.7882%" y="165" width="0.2166%" height="15" fill="rgb(241,108,4)"/><text x="45.0382%" y="175.50"></text></g><g><title>has_structural_eq_impls (173,122 samples, 0.13%)</title><rect x="45.0624%" y="149" width="0.1298%" height="15" fill="rgb(247,173,49)"/><text x="45.3124%" y="159.50"></text></g><g><title>evaluate_obligation (162,402 samples, 0.12%)</title><rect x="45.0704%" y="133" width="0.1217%" height="15" fill="rgb(224,114,35)"/><text x="45.3204%" y="143.50"></text></g><g><title>trait_impls_of (146,032 samples, 0.11%)</title><rect x="45.0827%" y="117" width="0.1095%" height="15" fill="rgb(245,159,27)"/><text x="45.3327%" y="127.50"></text></g><g><title>mir_const_qualif (343,943 samples, 0.26%)</title><rect x="45.0048%" y="165" width="0.2578%" height="15" fill="rgb(245,172,44)"/><text x="45.2548%" y="175.50"></text></g><g><title>mir_promoted (840,330 samples, 0.63%)</title><rect x="44.6330%" y="181" width="0.6298%" height="15" fill="rgb(236,23,11)"/><text x="44.8830%" y="191.50"></text></g><g><title>type_op_normalize_fn_sig (406,173 samples, 0.30%)</title><rect x="45.2779%" y="181" width="0.3044%" height="15" fill="rgb(205,117,38)"/><text x="45.5279%" y="191.50"></text></g><g><title>normalize_projection_ty (251,041 samples, 0.19%)</title><rect x="45.3942%" y="165" width="0.1882%" height="15" fill="rgb(237,72,25)"/><text x="45.6442%" y="175.50"></text></g><g><title>type_op_prove_predicate (727,277 samples, 0.55%)</title><rect x="45.6322%" y="181" width="0.5451%" height="15" fill="rgb(244,70,9)"/><text x="45.8822%" y="191.50"></text></g><g><title>mir_borrowck (6,064,157 samples, 4.55%)</title><rect x="41.6430%" y="197" width="4.5452%" height="15" fill="rgb(217,125,39)"/><text x="41.8930%" y="207.50">mir_b..</text></g><g><title>associated_item (257,743 samples, 0.19%)</title><rect x="52.3118%" y="101" width="0.1932%" height="15" fill="rgb(235,36,10)"/><text x="52.5618%" y="111.50"></text></g><g><title>metadata_decode_entry_associated_item (208,463 samples, 0.16%)</title><rect x="52.3487%" y="85" width="0.1562%" height="15" fill="rgb(251,123,47)"/><text x="52.5987%" y="95.50"></text></g><g><title>associated_items (361,574 samples, 0.27%)</title><rect x="52.2482%" y="117" width="0.2710%" height="15" fill="rgb(221,13,13)"/><text x="52.4982%" y="127.50"></text></g><g><title>dropck_outlives (336,594 samples, 0.25%)</title><rect x="52.5453%" y="117" width="0.2523%" height="15" fill="rgb(238,131,9)"/><text x="52.7953%" y="127.50"></text></g><g><title>adt_dtorck_constraint (175,301 samples, 0.13%)</title><rect x="52.6662%" y="101" width="0.1314%" height="15" fill="rgb(211,50,8)"/><text x="52.9162%" y="111.50"></text></g><g><title>adt_def (174,693 samples, 0.13%)</title><rect x="53.5171%" y="85" width="0.1309%" height="15" fill="rgb(245,182,24)"/><text x="53.7671%" y="95.50"></text></g><g><title>metadata_decode_entry_adt_def (171,373 samples, 0.13%)</title><rect x="53.5196%" y="69" width="0.1284%" height="15" fill="rgb(242,14,37)"/><text x="53.7696%" y="79.50"></text></g><g><title>item_attrs (138,071 samples, 0.10%)</title><rect x="53.5446%" y="53" width="0.1035%" height="15" fill="rgb(246,228,12)"/><text x="53.7946%" y="63.50"></text></g><g><title>metadata_decode_entry_item_attrs (134,271 samples, 0.10%)</title><rect x="53.5474%" y="37" width="0.1006%" height="15" fill="rgb(213,55,15)"/><text x="53.7974%" y="47.50"></text></g><g><title>adt_sized_constraint (226,193 samples, 0.17%)</title><rect x="53.5061%" y="101" width="0.1695%" height="15" fill="rgb(209,9,3)"/><text x="53.7561%" y="111.50"></text></g><g><title>trait_impls_of (935,844 samples, 0.70%)</title><rect x="53.9603%" y="101" width="0.7014%" height="15" fill="rgb(230,59,30)"/><text x="54.2103%" y="111.50"></text></g><g><title>implementations_of_trait (373,033 samples, 0.28%)</title><rect x="54.3821%" y="85" width="0.2796%" height="15" fill="rgb(209,121,21)"/><text x="54.6321%" y="95.50"></text></g><g><title>metadata_decode_entry_implementations_of_trait (222,371 samples, 0.17%)</title><rect x="54.4950%" y="69" width="0.1667%" height="15" fill="rgb(220,109,13)"/><text x="54.7450%" y="79.50"></text></g><g><title>evaluate_obligation (2,487,078 samples, 1.86%)</title><rect x="52.7983%" y="117" width="1.8641%" height="15" fill="rgb(232,18,1)"/><text x="53.0483%" y="127.50">e..</text></g><g><title>is_copy_raw (545,657 samples, 0.41%)</title><rect x="54.9388%" y="117" width="0.4090%" height="15" fill="rgb(215,41,42)"/><text x="55.1888%" y="127.50"></text></g><g><title>evaluate_obligation (486,026 samples, 0.36%)</title><rect x="54.9835%" y="101" width="0.3643%" height="15" fill="rgb(224,123,36)"/><text x="55.2335%" y="111.50"></text></g><g><title>trait_impls_of (180,692 samples, 0.14%)</title><rect x="55.2124%" y="85" width="0.1354%" height="15" fill="rgb(240,125,3)"/><text x="55.4624%" y="95.50"></text></g><g><title>item_attrs (168,551 samples, 0.13%)</title><rect x="55.3478%" y="117" width="0.1263%" height="15" fill="rgb(205,98,50)"/><text x="55.5978%" y="127.50"></text></g><g><title>metadata_decode_entry_item_attrs (163,121 samples, 0.12%)</title><rect x="55.3519%" y="101" width="0.1223%" height="15" fill="rgb(205,185,37)"/><text x="55.6019%" y="111.50"></text></g><g><title>predicates_of (316,703 samples, 0.24%)</title><rect x="55.7558%" y="117" width="0.2374%" height="15" fill="rgb(238,207,15)"/><text x="56.0058%" y="127.50"></text></g><g><title>predicates_defined_on (216,683 samples, 0.16%)</title><rect x="55.8307%" y="101" width="0.1624%" height="15" fill="rgb(213,199,42)"/><text x="56.0807%" y="111.50"></text></g><g><title>mir_built (13,197,487 samples, 9.89%)</title><rect x="46.3603%" y="149" width="9.8917%" height="15" fill="rgb(235,201,11)"/><text x="46.6103%" y="159.50">mir_built</text></g><g><title>typeck (12,834,283 samples, 9.62%)</title><rect x="46.6325%" y="133" width="9.6195%" height="15" fill="rgb(207,46,11)"/><text x="46.8825%" y="143.50">typeck</text></g><g><title>adt_drop_tys (191,251 samples, 0.14%)</title><rect x="57.0013%" y="101" width="0.1433%" height="15" fill="rgb(241,35,35)"/><text x="57.2513%" y="111.50"></text></g><g><title>needs_drop_raw (315,803 samples, 0.24%)</title><rect x="56.9741%" y="117" width="0.2367%" height="15" fill="rgb(243,32,47)"/><text x="57.2241%" y="127.50"></text></g><g><title>thir_body (239,002 samples, 0.18%)</title><rect x="57.2150%" y="117" width="0.1791%" height="15" fill="rgb(247,202,23)"/><text x="57.4650%" y="127.50"></text></g><g><title>mir_built (1,278,603 samples, 0.96%)</title><rect x="56.4403%" y="133" width="0.9583%" height="15" fill="rgb(219,102,11)"/><text x="56.6903%" y="143.50"></text></g><g><title>mir_const (15,011,917 samples, 11.25%)</title><rect x="46.2478%" y="181" width="11.2516%" height="15" fill="rgb(243,110,44)"/><text x="46.4978%" y="191.50">mir_const</text></g><g><title>unsafety_check_result (14,891,255 samples, 11.16%)</title><rect x="46.3382%" y="165" width="11.1612%" height="15" fill="rgb(222,74,54)"/><text x="46.5882%" y="175.50">unsafety_check_r..</text></g><g><title>unsafety_check_result (1,664,368 samples, 1.25%)</title><rect x="56.2520%" y="149" width="1.2475%" height="15" fill="rgb(216,99,12)"/><text x="56.5020%" y="159.50"></text></g><g><title>unsafety_check_result (133,621 samples, 0.10%)</title><rect x="57.3993%" y="133" width="0.1002%" height="15" fill="rgb(226,22,26)"/><text x="57.6493%" y="143.50"></text></g><g><title>mir_promoted (15,098,738 samples, 11.32%)</title><rect x="46.1882%" y="197" width="11.3167%" height="15" fill="rgb(217,163,10)"/><text x="46.4382%" y="207.50">mir_promoted</text></g><g><title>type_of (22,192,265 samples, 16.63%)</title><rect x="41.0038%" y="229" width="16.6334%" height="15" fill="rgb(213,25,53)"/><text x="41.2538%" y="239.50">type_of</text></g><g><title>mir_borrowck (22,154,275 samples, 16.60%)</title><rect x="41.0323%" y="213" width="16.6049%" height="15" fill="rgb(252,105,26)"/><text x="41.2823%" y="223.50">mir_borrowck</text></g><g><title>adt_def (249,333 samples, 0.19%)</title><rect x="58.7852%" y="181" width="0.1869%" height="15" fill="rgb(220,39,43)"/><text x="59.0352%" y="191.50"></text></g><g><title>metadata_decode_entry_adt_def (244,273 samples, 0.18%)</title><rect x="58.7890%" y="165" width="0.1831%" height="15" fill="rgb(229,68,48)"/><text x="59.0390%" y="175.50"></text></g><g><title>adt_def (233,213 samples, 0.17%)</title><rect x="59.0549%" y="165" width="0.1748%" height="15" fill="rgb(252,8,32)"/><text x="59.3049%" y="175.50"></text></g><g><title>metadata_decode_entry_adt_def (229,883 samples, 0.17%)</title><rect x="59.0574%" y="149" width="0.1723%" height="15" fill="rgb(223,20,43)"/><text x="59.3074%" y="159.50"></text></g><g><title>item_attrs (181,293 samples, 0.14%)</title><rect x="59.0938%" y="133" width="0.1359%" height="15" fill="rgb(229,81,49)"/><text x="59.3438%" y="143.50"></text></g><g><title>metadata_decode_entry_item_attrs (177,623 samples, 0.13%)</title><rect x="59.0966%" y="117" width="0.1331%" height="15" fill="rgb(236,28,36)"/><text x="59.3466%" y="127.50"></text></g><g><title>impl_parent (320,252 samples, 0.24%)</title><rect x="59.5418%" y="69" width="0.2400%" height="15" fill="rgb(249,185,26)"/><text x="59.7918%" y="79.50"></text></g><g><title>impl_trait_ref (197,841 samples, 0.15%)</title><rect x="59.7818%" y="69" width="0.1483%" height="15" fill="rgb(249,174,33)"/><text x="60.0318%" y="79.50"></text></g><g><title>metadata_decode_entry_impl_trait_ref (169,701 samples, 0.13%)</title><rect x="59.8029%" y="53" width="0.1272%" height="15" fill="rgb(233,201,37)"/><text x="60.0529%" y="63.50"></text></g><g><title>coherent_trait (780,369 samples, 0.58%)</title><rect x="59.3779%" y="101" width="0.5849%" height="15" fill="rgb(221,78,26)"/><text x="59.6279%" y="111.50"></text></g><g><title>specialization_graph_of (778,099 samples, 0.58%)</title><rect x="59.3796%" y="85" width="0.5832%" height="15" fill="rgb(250,127,30)"/><text x="59.6296%" y="95.50"></text></g><g><title>adt_destructor (788,529 samples, 0.59%)</title><rect x="59.3729%" y="133" width="0.5910%" height="15" fill="rgb(230,49,44)"/><text x="59.6229%" y="143.50"></text></g><g><title>metadata_decode_entry_adt_destructor (787,339 samples, 0.59%)</title><rect x="59.3738%" y="117" width="0.5901%" height="15" fill="rgb(229,67,23)"/><text x="59.6238%" y="127.50"></text></g><g><title>adt_dtorck_constraint (813,749 samples, 0.61%)</title><rect x="59.3598%" y="149" width="0.6099%" height="15" fill="rgb(249,83,47)"/><text x="59.6098%" y="159.50"></text></g><g><title>adt_dtorck_constraint (998,091 samples, 0.75%)</title><rect x="59.2497%" y="165" width="0.7481%" height="15" fill="rgb(215,43,3)"/><text x="59.4997%" y="175.50"></text></g><g><title>adt_dtorck_constraint (1,355,557 samples, 1.02%)</title><rect x="59.0233%" y="181" width="1.0160%" height="15" fill="rgb(238,154,13)"/><text x="59.2733%" y="191.50"></text></g><g><title>dropck_outlives (2,058,513 samples, 1.54%)</title><rect x="58.6071%" y="213" width="1.5429%" height="15" fill="rgb(219,56,2)"/><text x="58.8571%" y="223.50"></text></g><g><title>adt_dtorck_constraint (1,936,173 samples, 1.45%)</title><rect x="58.6988%" y="197" width="1.4512%" height="15" fill="rgb(233,0,4)"/><text x="58.9488%" y="207.50"></text></g><g><title>item_types_checking (26,834,867 samples, 20.11%)</title><rect x="40.2624%" y="261" width="20.1131%" height="15" fill="rgb(235,30,7)"/><text x="40.5124%" y="271.50">item_types_checking</text></g><g><title>check_mod_item_types (26,825,467 samples, 20.11%)</title><rect x="40.2695%" y="245" width="20.1060%" height="15" fill="rgb(250,79,13)"/><text x="40.5195%" y="255.50">check_mod_item_types</text></g><g><title>typeck (3,653,508 samples, 2.74%)</title><rect x="57.6372%" y="229" width="2.7384%" height="15" fill="rgb(211,146,34)"/><text x="57.8872%" y="239.50">ty..</text></g><g><title>late_bound_vars_map (184,742 samples, 0.14%)</title><rect x="60.7314%" y="213" width="0.1385%" height="15" fill="rgb(228,22,38)"/><text x="60.9814%" y="223.50"></text></g><g><title>resolve_lifetimes (159,521 samples, 0.12%)</title><rect x="60.7503%" y="197" width="0.1196%" height="15" fill="rgb(235,168,5)"/><text x="61.0003%" y="207.50"></text></g><g><title>fn_sig (344,715 samples, 0.26%)</title><rect x="60.6260%" y="229" width="0.2584%" height="15" fill="rgb(221,155,16)"/><text x="60.8760%" y="239.50"></text></g><g><title>named_region_map (134,922 samples, 0.10%)</title><rect x="60.9909%" y="213" width="0.1011%" height="15" fill="rgb(215,215,53)"/><text x="61.2409%" y="223.50"></text></g><g><title>generics_of (293,313 samples, 0.22%)</title><rect x="60.8843%" y="229" width="0.2198%" height="15" fill="rgb(223,4,10)"/><text x="61.1343%" y="239.50"></text></g><g><title>explicit_predicates_of (367,765 samples, 0.28%)</title><rect x="61.2221%" y="197" width="0.2756%" height="15" fill="rgb(234,103,6)"/><text x="61.4721%" y="207.50"></text></g><g><title>predicates_of (1,293,044 samples, 0.97%)</title><rect x="61.1193%" y="229" width="0.9692%" height="15" fill="rgb(227,97,0)"/><text x="61.3693%" y="239.50"></text></g><g><title>predicates_defined_on (1,245,704 samples, 0.93%)</title><rect x="61.1548%" y="213" width="0.9337%" height="15" fill="rgb(234,150,53)"/><text x="61.4048%" y="223.50"></text></g><g><title>inferred_outlives_of (788,129 samples, 0.59%)</title><rect x="61.4977%" y="197" width="0.5907%" height="15" fill="rgb(228,201,54)"/><text x="61.7477%" y="207.50"></text></g><g><title>inferred_outlives_crate (761,819 samples, 0.57%)</title><rect x="61.5175%" y="181" width="0.5710%" height="15" fill="rgb(222,22,37)"/><text x="61.7675%" y="191.50"></text></g><g><title>type_of (621,847 samples, 0.47%)</title><rect x="61.6224%" y="165" width="0.4661%" height="15" fill="rgb(237,53,32)"/><text x="61.8724%" y="175.50"></text></g><g><title>type_collecting (2,655,129 samples, 1.99%)</title><rect x="60.3773%" y="261" width="1.9901%" height="15" fill="rgb(233,25,53)"/><text x="60.6273%" y="271.50">t..</text></g><g><title>collect_mod_item_types (2,627,959 samples, 1.97%)</title><rect x="60.3977%" y="245" width="1.9697%" height="15" fill="rgb(210,40,34)"/><text x="60.6477%" y="255.50">c..</text></g><g><title>type_of (372,103 samples, 0.28%)</title><rect x="62.0885%" y="229" width="0.2789%" height="15" fill="rgb(241,220,44)"/><text x="62.3385%" y="239.50"></text></g><g><title>type_of (156,863 samples, 0.12%)</title><rect x="62.2498%" y="213" width="0.1176%" height="15" fill="rgb(235,28,35)"/><text x="62.4998%" y="223.50"></text></g><g><title>check_impl_item_well_formed (553,235 samples, 0.41%)</title><rect x="62.4382%" y="245" width="0.4147%" height="15" fill="rgb(210,56,17)"/><text x="62.6882%" y="255.50"></text></g><g><title>adt_sized_constraint (178,453 samples, 0.13%)</title><rect x="63.8352%" y="197" width="0.1338%" height="15" fill="rgb(224,130,29)"/><text x="64.0852%" y="207.50"></text></g><g><title>adt_sized_constraint (355,564 samples, 0.27%)</title><rect x="63.7218%" y="213" width="0.2665%" height="15" fill="rgb(235,212,8)"/><text x="63.9718%" y="223.50"></text></g><g><title>evaluate_obligation (913,720 samples, 0.68%)</title><rect x="63.4357%" y="229" width="0.6848%" height="15" fill="rgb(223,33,50)"/><text x="63.6857%" y="239.50"></text></g><g><title>object_safety_violations (377,474 samples, 0.28%)</title><rect x="64.1949%" y="229" width="0.2829%" height="15" fill="rgb(219,149,13)"/><text x="64.4449%" y="239.50"></text></g><g><title>param_env (214,941 samples, 0.16%)</title><rect x="64.4778%" y="229" width="0.1611%" height="15" fill="rgb(250,156,29)"/><text x="64.7278%" y="239.50"></text></g><g><title>region_scope_tree (247,945 samples, 0.19%)</title><rect x="64.6929%" y="229" width="0.1858%" height="15" fill="rgb(216,193,19)"/><text x="64.9429%" y="239.50"></text></g><g><title>analysis (85,807,059 samples, 64.31%)</title><rect x="0.6160%" y="293" width="64.3135%" height="15" fill="rgb(216,135,14)"/><text x="0.8660%" y="303.50">analysis</text></g><g><title>type_check_crate (58,355,945 samples, 43.74%)</title><rect x="21.1910%" y="277" width="43.7385%" height="15" fill="rgb(241,47,5)"/><text x="21.4410%" y="287.50">type_check_crate</text></g><g><title>wf_checking (3,412,907 samples, 2.56%)</title><rect x="62.3715%" y="261" width="2.5580%" height="15" fill="rgb(233,42,35)"/><text x="62.6215%" y="271.50">wf..</text></g><g><title>check_item_well_formed (2,770,679 samples, 2.08%)</title><rect x="62.8529%" y="245" width="2.0767%" height="15" fill="rgb(231,13,6)"/><text x="63.1029%" y="255.50">c..</text></g><g><title>codegen_crate (849,039 samples, 0.64%)</title><rect x="64.9379%" y="293" width="0.6364%" height="15" fill="rgb(207,181,40)"/><text x="65.1879%" y="303.50"></text></g><g><title>AST_validation (207,073 samples, 0.16%)</title><rect x="65.7544%" y="277" width="0.1552%" height="15" fill="rgb(254,173,49)"/><text x="66.0044%" y="287.50"></text></g><g><title>metadata_load_macro (492,957 samples, 0.37%)</title><rect x="79.8121%" y="245" width="0.3695%" height="15" fill="rgb(221,1,38)"/><text x="80.0621%" y="255.50"></text></g><g><title>metadata_register_crate (4,136,746 samples, 3.10%)</title><rect x="80.1816%" y="245" width="3.1005%" height="15" fill="rgb(206,124,46)"/><text x="80.4316%" y="255.50">met..</text></g><g><title>metadata_register_crate (1,841,209 samples, 1.38%)</title><rect x="81.9021%" y="229" width="1.3800%" height="15" fill="rgb(249,21,11)"/><text x="82.1521%" y="239.50"></text></g><g><title>metadata_register_crate (197,331 samples, 0.15%)</title><rect x="83.1343%" y="213" width="0.1479%" height="15" fill="rgb(222,201,40)"/><text x="83.3843%" y="223.50"></text></g><g><title>macro_expand_crate (23,258,127 samples, 17.43%)</title><rect x="66.0348%" y="277" width="17.4323%" height="15" fill="rgb(235,61,29)"/><text x="66.2848%" y="287.50">macro_expand_crate</text></g><g><title>expand_crate (23,240,537 samples, 17.42%)</title><rect x="66.0480%" y="261" width="17.4191%" height="15" fill="rgb(219,207,3)"/><text x="66.2980%" y="271.50">expand_crate</text></g><g><title>pre_AST_expansion_lint_checks (246,742 samples, 0.18%)</title><rect x="83.2822%" y="245" width="0.1849%" height="15" fill="rgb(222,56,46)"/><text x="83.5322%" y="255.50"></text></g><g><title>finalize_imports (175,882 samples, 0.13%)</title><rect x="83.5697%" y="261" width="0.1318%" height="15" fill="rgb(239,76,54)"/><text x="83.8197%" y="271.50"></text></g><g><title>late_resolve_crate (5,109,286 samples, 3.83%)</title><rect x="83.7624%" y="261" width="3.8295%" height="15" fill="rgb(231,124,27)"/><text x="84.0124%" y="271.50">late..</text></g><g><title>metadata_register_crate (646,638 samples, 0.48%)</title><rect x="87.1072%" y="245" width="0.4847%" height="15" fill="rgb(249,195,6)"/><text x="87.3572%" y="255.50"></text></g><g><title>metadata_register_crate (250,553 samples, 0.19%)</title><rect x="87.4040%" y="229" width="0.1878%" height="15" fill="rgb(237,174,47)"/><text x="87.6540%" y="239.50"></text></g><g><title>configure_and_expand (29,514,506 samples, 22.12%)</title><rect x="65.5742%" y="293" width="22.1215%" height="15" fill="rgb(206,201,31)"/><text x="65.8242%" y="303.50">configure_and_expand</text></g><g><title>resolve_crate (5,515,321 samples, 4.13%)</title><rect x="83.5619%" y="277" width="4.1338%" height="15" fill="rgb(231,57,52)"/><text x="83.8119%" y="287.50">resol..</text></g><g><title>drop_ast (228,052 samples, 0.17%)</title><rect x="87.6957%" y="293" width="0.1709%" height="15" fill="rgb(248,177,22)"/><text x="87.9457%" y="303.50"></text></g><g><title>early_lint_checks (455,326 samples, 0.34%)</title><rect x="87.8840%" y="293" width="0.3413%" height="15" fill="rgb(215,211,37)"/><text x="88.1340%" y="303.50"></text></g><g><title>free_global_ctxt (3,648,061 samples, 2.73%)</title><rect x="88.2253%" y="293" width="2.7343%" height="15" fill="rgb(241,128,51)"/><text x="88.4753%" y="303.50">fr..</text></g><g><title>layout_of (185,471 samples, 0.14%)</title><rect x="93.6284%" y="261" width="0.1390%" height="15" fill="rgb(227,165,31)"/><text x="93.8784%" y="271.50"></text></g><g><title>layout_of (144,161 samples, 0.11%)</title><rect x="93.6593%" y="245" width="0.1081%" height="15" fill="rgb(228,167,24)"/><text x="93.9093%" y="255.50"></text></g><g><title>is_copy_raw (288,654 samples, 0.22%)</title><rect x="95.5011%" y="229" width="0.2163%" height="15" fill="rgb(228,143,12)"/><text x="95.7511%" y="239.50"></text></g><g><title>evaluate_obligation (224,804 samples, 0.17%)</title><rect x="95.5490%" y="213" width="0.1685%" height="15" fill="rgb(249,149,8)"/><text x="95.7990%" y="223.50"></text></g><g><title>needs_drop_raw (387,465 samples, 0.29%)</title><rect x="95.4294%" y="245" width="0.2904%" height="15" fill="rgb(243,35,44)"/><text x="95.6794%" y="255.50"></text></g><g><title>mir_drops_elaborated_and_const_checked (2,686,070 samples, 2.01%)</title><rect x="93.7674%" y="261" width="2.0132%" height="15" fill="rgb(246,89,9)"/><text x="94.0174%" y="271.50">m..</text></g><g><title>optimized_mir (5,232,979 samples, 3.92%)</title><rect x="91.8645%" y="277" width="3.9222%" height="15" fill="rgb(233,213,13)"/><text x="92.1145%" y="287.50">opti..</text></g><g><title>generate_crate_metadata (6,481,731 samples, 4.86%)</title><rect x="90.9595%" y="293" width="4.8581%" height="15" fill="rgb(233,141,41)"/><text x="91.2095%" y="303.50">genera..</text></g><g><title>hir_lowering (3,462,008 samples, 2.59%)</title><rect x="95.8177%" y="293" width="2.5948%" height="15" fill="rgb(239,167,4)"/><text x="96.0677%" y="303.50">hi..</text></g><g><title>parse_crate (391,274 samples, 0.29%)</title><rect x="98.4567%" y="293" width="0.2933%" height="15" fill="rgb(209,217,16)"/><text x="98.7067%" y="303.50"></text></g><g><title>prepare_outputs (337,483 samples, 0.25%)</title><rect x="98.7561%" y="293" width="0.2529%" height="15" fill="rgb(219,88,35)"/><text x="99.0061%" y="303.50"></text></g><g><title>self_profile_alloc_query_strings (815,609 samples, 0.61%)</title><rect x="99.0090%" y="293" width="0.6113%" height="15" fill="rgb(220,193,23)"/><text x="99.2590%" y="303.50"></text></g><g><title>setup_global_ctxt (144,892 samples, 0.11%)</title><rect x="99.6288%" y="293" width="0.1086%" height="15" fill="rgb(230,90,52)"/><text x="99.8788%" y="303.50"></text></g><g><title>all (133,419,965 samples, 100%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(252,106,19)"/><text x="0.2500%" y="335.50"></text></g><g><title>rustc (133,419,965 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(206,74,20)"/><text x="0.2500%" y="319.50">rustc</text></g><g><title>write_crate_metadata (350,384 samples, 0.26%)</title><rect x="99.7374%" y="293" width="0.2626%" height="15" fill="rgb(230,138,44)"/><text x="99.9874%" y="303.50"></text></g></svg></svg>