time:   0.002; rss:   58MB ->   58MB (   +0MB)	parse_crate
time:   0.000; rss:   58MB ->   58MB (   +0MB)	attributes_injection
time:   0.000; rss:   61MB ->   61MB (   +0MB)	plugin_loading
time:   0.000; rss:   61MB ->   61MB (   +0MB)	plugin_registration
time:   0.000; rss:   61MB ->   64MB (   +3MB)	crate_injection
time:   0.012; rss:   64MB ->   91MB (  +27MB)	expand_crate
time:   0.000; rss:   91MB ->   91MB (   +0MB)	check_unused_macros
time:   0.012; rss:   64MB ->   91MB (  +27MB)	macro_expand_crate
time:   0.000; rss:   91MB ->   91MB (   +0MB)	maybe_building_test_harness
time:   0.000; rss:   91MB ->   91MB (   +0MB)	AST_validation
time:   0.000; rss:   91MB ->   91MB (   +0MB)	maybe_create_a_macro_crate
time:   0.000; rss:   91MB ->   91MB (   +0MB)	finalize_imports
time:   0.000; rss:   91MB ->   91MB (   +0MB)	resolve_access_levels
time:   0.000; rss:   91MB ->   91MB (   +0MB)	finalize_macro_resolutions
time:   0.001; rss:   91MB ->   93MB (   +2MB)	late_resolve_crate
time:   0.000; rss:   93MB ->   93MB (   +0MB)	resolve_main
time:   0.000; rss:   93MB ->   93MB (   +0MB)	resolve_check_unused
time:   0.000; rss:   93MB ->   93MB (   +0MB)	resolve_report_errors
time:   0.000; rss:   93MB ->   93MB (   +0MB)	resolve_postprocess
time:   0.002; rss:   91MB ->   93MB (   +2MB)	resolve_crate
time:   0.000; rss:   93MB ->   93MB (   +0MB)	complete_gated_feature_checking
time:   0.015; rss:   61MB ->   93MB (  +32MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmpZfX4D3/target/debug/deps/shell_escape-48a87b8ded0f97f1.d","emit":"dep-info"}
time:   0.000; rss:   93MB ->   93MB (   +0MB)	prepare_outputs
time:   0.001; rss:   93MB ->   93MB (   +0MB)	hir_lowering
{"message":"`...` range patterns are deprecated","code":{"code":"ellipsis_inclusive_range_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":2959,"byte_end":2962,"line_start":95,"line_end":95,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"            'a'...'z' | 'A'...'Z' | '0'...'9' | '-' | '_' | '=' | '/' | ',' | '.' | '+' => false,","highlight_start":16,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(ellipsis_inclusive_range_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `..=` for an inclusive range","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":2959,"byte_end":2962,"line_start":95,"line_end":95,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"            'a'...'z' | 'A'...'Z' | '0'...'9' | '-' | '_' | '=' | '/' | ',' | '.' | '+' => false,","highlight_start":16,"highlight_end":19}],"label":null,"suggested_replacement":"..=","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `...` range patterns are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:95:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            'a'...'z' | 'A'...'Z' | '0'...'9' | '-' | '_' | '=' | '/' | ',' | '.' | '+' => false,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `..=` for an inclusive range\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\n"}
{"message":"`...` range patterns are deprecated","code":{"code":"ellipsis_inclusive_range_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":2971,"byte_end":2974,"line_start":95,"line_end":95,"column_start":28,"column_end":31,"is_primary":true,"text":[{"text":"            'a'...'z' | 'A'...'Z' | '0'...'9' | '-' | '_' | '=' | '/' | ',' | '.' | '+' => false,","highlight_start":28,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `..=` for an inclusive range","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":2971,"byte_end":2974,"line_start":95,"line_end":95,"column_start":28,"column_end":31,"is_primary":true,"text":[{"text":"            'a'...'z' | 'A'...'Z' | '0'...'9' | '-' | '_' | '=' | '/' | ',' | '.' | '+' => false,","highlight_start":28,"highlight_end":31}],"label":null,"suggested_replacement":"..=","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `...` range patterns are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:95:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            'a'...'z' | 'A'...'Z' | '0'...'9' | '-' | '_' | '=' | '/' | ',' | '.' | '+' => false,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `..=` for an inclusive range\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\n"}
{"message":"`...` range patterns are deprecated","code":{"code":"ellipsis_inclusive_range_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":2983,"byte_end":2986,"line_start":95,"line_end":95,"column_start":40,"column_end":43,"is_primary":true,"text":[{"text":"            'a'...'z' | 'A'...'Z' | '0'...'9' | '-' | '_' | '=' | '/' | ',' | '.' | '+' => false,","highlight_start":40,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `..=` for an inclusive range","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":2983,"byte_end":2986,"line_start":95,"line_end":95,"column_start":40,"column_end":43,"is_primary":true,"text":[{"text":"            'a'...'z' | 'A'...'Z' | '0'...'9' | '-' | '_' | '=' | '/' | ',' | '.' | '+' => false,","highlight_start":40,"highlight_end":43}],"label":null,"suggested_replacement":"..=","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `...` range patterns are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:95:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            'a'...'z' | 'A'...'Z' | '0'...'9' | '-' | '_' | '=' | '/' | ',' | '.' | '+' => false,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `..=` for an inclusive range\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\n"}
time:   0.001; rss:   93MB ->   95MB (   +2MB)	early_lint_checks
time:   0.000; rss:   95MB ->   95MB (   +0MB)	drop_ast
time:   0.000; rss:   95MB ->   95MB (   +0MB)	setup_global_ctxt
time:   0.000; rss:   98MB ->   98MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:   98MB ->   98MB (   +0MB)	looking_for_derive_registrar
time:   0.001; rss:   98MB ->   98MB (   +0MB)	misc_checking_1
time:   0.001; rss:   98MB ->  102MB (   +4MB)	type_collecting
time:   0.000; rss:  102MB ->  102MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  102MB ->  102MB (   +0MB)	unsafety_checking
time:   0.000; rss:  102MB ->  102MB (   +0MB)	coherence_checking
time:   0.001; rss:  102MB ->  107MB (   +4MB)	wf_checking
time:   0.000; rss:  107MB ->  107MB (   +0MB)	item_types_checking
time:   0.016; rss:  107MB ->  122MB (  +15MB)	item_bodies_checking
time:   0.018; rss:   98MB ->  122MB (  +24MB)	type_check_crate
time:   0.000; rss:  122MB ->  122MB (   +0MB)	match_checking
time:   0.000; rss:  122MB ->  122MB (   +0MB)	liveness_and_intrinsic_checking
time:   0.000; rss:  122MB ->  122MB (   +0MB)	misc_checking_2
time:   0.005; rss:  122MB ->  131MB (   +9MB)	MIR_borrow_checking
time:   0.000; rss:  131MB ->  131MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  131MB ->  131MB (   +0MB)	layout_testing
time:   0.000; rss:  131MB ->  131MB (   +0MB)	death_checking
time:   0.000; rss:  131MB ->  131MB (   +0MB)	unused_lib_feature_checking
time:   0.000; rss:  131MB ->  131MB (   +0MB)	crate_lints
time:   0.000; rss:  131MB ->  131MB (   +0MB)	module_lints
time:   0.000; rss:  131MB ->  131MB (   +0MB)	lint_checking
time:   0.000; rss:  131MB ->  131MB (   +0MB)	privacy_checking_modules
time:   0.001; rss:  131MB ->  131MB (   +0MB)	misc_checking_3
time:   0.000; rss:  131MB ->  131MB (   +0MB)	monomorphization_collector_root_collections
time:   0.020; rss:  131MB ->  151MB (  +20MB)	monomorphization_collector_graph_walk
time:   0.002; rss:  151MB ->  152MB (   +1MB)	partition_and_assert_distinct_symbols
time:   0.022; rss:  131MB ->  152MB (  +20MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmpZfX4D3/target/debug/deps/libshell_escape-48a87b8ded0f97f1.rmeta","emit":"metadata"}
time:   0.000; rss:  152MB ->  152MB (   +0MB)	find_cgu_reuse
time:   0.053; rss:  152MB ->  177MB (  +25MB)	codegen_to_LLVM_IR
time:   0.056; rss:  152MB ->  177MB (  +25MB)	codegen_crate
time:   0.000; rss:  177MB ->  177MB (   +0MB)	serialize_dep_graph
time:   0.005; rss:  177MB ->  126MB (  -51MB)	free_global_ctxt
time:   0.070; rss:  158MB ->  127MB (  -31MB)	LLVM_passes(crate)
time:   0.000; rss:  127MB ->  127MB (   +0MB)	join_worker_thread
time:   0.016; rss:  126MB ->  127MB (   +1MB)	finish_ongoing_codegen
time:   0.000; rss:  127MB ->  127MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  127MB ->  127MB (   +0MB)	serialize_work_products
time:   0.000; rss:  127MB ->  127MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.002; rss:  127MB ->  127MB (   +0MB)	link_rlib
{"artifact":"/usr/home/liquid/tmp/.tmpZfX4D3/target/debug/deps/libshell_escape-48a87b8ded0f97f1.rlib","emit":"link"}
time:   0.000; rss:  127MB ->  127MB (   +0MB)	link_binary_remove_temps
time:   0.002; rss:  127MB ->  127MB (   +0MB)	link_binary
time:   0.002; rss:  127MB ->  127MB (   +0MB)	link_crate
time:   0.018; rss:  126MB ->  127MB (   +1MB)	link
{"message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}
time:   0.152; rss:   46MB ->  126MB (  +80MB)	total
