time:   0.002; rss:   56MB ->   61MB (   +4MB)	parse_crate
time:   0.000; rss:   61MB ->   61MB (   +0MB)	attributes_injection
time:   0.000; rss:   61MB ->   61MB (   +0MB)	plugin_loading
time:   0.000; rss:   61MB ->   61MB (   +0MB)	plugin_registration
time:   0.000; rss:   63MB ->   63MB (   +0MB)	crate_injection
time:   0.016; rss:   63MB ->   92MB (  +29MB)	expand_crate
time:   0.000; rss:   92MB ->   92MB (   +0MB)	check_unused_macros
time:   0.017; rss:   63MB ->   92MB (  +29MB)	macro_expand_crate
time:   0.000; rss:   92MB ->   92MB (   +0MB)	maybe_building_test_harness
time:   0.000; rss:   92MB ->   92MB (   +0MB)	AST_validation
time:   0.000; rss:   92MB ->   92MB (   +0MB)	maybe_create_a_macro_crate
time:   0.000; rss:   92MB ->   92MB (   +0MB)	finalize_imports
time:   0.000; rss:   92MB ->   92MB (   +0MB)	resolve_access_levels
time:   0.000; rss:   92MB ->   92MB (   +0MB)	finalize_macro_resolutions
time:   0.002; rss:   92MB ->   97MB (   +5MB)	late_resolve_crate
time:   0.000; rss:   97MB ->   97MB (   +0MB)	resolve_main
time:   0.000; rss:   97MB ->   97MB (   +0MB)	resolve_check_unused
time:   0.000; rss:   97MB ->   97MB (   +0MB)	resolve_report_errors
time:   0.000; rss:   97MB ->   97MB (   +0MB)	resolve_postprocess
time:   0.003; rss:   92MB ->   97MB (   +5MB)	resolve_crate
time:   0.000; rss:   97MB ->   97MB (   +0MB)	complete_gated_feature_checking
time:   0.021; rss:   61MB ->   97MB (  +37MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmp1ig2rY/target/debug/deps/futf-b2ef8d4963a71306.d","emit":"dep-info"}
time:   0.000; rss:   97MB ->   97MB (   +0MB)	prepare_outputs
time:   0.002; rss:   97MB ->   99MB (   +2MB)	hir_lowering
{"message":"`...` range patterns are deprecated","code":{"code":"ellipsis_inclusive_range_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":4002,"byte_end":4005,"line_start":123,"line_end":123,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"                0x0000 ... 0x07FF => return None,  // Overlong","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(ellipsis_inclusive_range_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `..=` for an inclusive range","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":4002,"byte_end":4005,"line_start":123,"line_end":123,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"                0x0000 ... 0x07FF => return None,  // Overlong","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":"..=","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `...` range patterns are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:123:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                0x0000 ... 0x07FF => return None,  // Overlong\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `..=` for an inclusive range\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\n"}
{"message":"`...` range patterns are deprecated","code":{"code":"ellipsis_inclusive_range_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":4065,"byte_end":4068,"line_start":124,"line_end":124,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"                0xD800 ... 0xDBFF => return Some(Meaning::LeadSurrogate(n as u16 - 0xD800)),","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `..=` for an inclusive range","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":4065,"byte_end":4068,"line_start":124,"line_end":124,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"                0xD800 ... 0xDBFF => return Some(Meaning::LeadSurrogate(n as u16 - 0xD800)),","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":"..=","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `...` range patterns are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:124:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                0xD800 ... 0xDBFF => return Some(Meaning::LeadSurrogate(n as u16 - 0xD800)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `..=` for an inclusive range\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\n"}
{"message":"`...` range patterns are deprecated","code":{"code":"ellipsis_inclusive_range_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":4158,"byte_end":4161,"line_start":125,"line_end":125,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"                0xDC00 ... 0xDFFF => return Some(Meaning::TrailSurrogate(n as u16 - 0xDC00)),","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `..=` for an inclusive range","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":4158,"byte_end":4161,"line_start":125,"line_end":125,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"                0xDC00 ... 0xDFFF => return Some(Meaning::TrailSurrogate(n as u16 - 0xDC00)),","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":"..=","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `...` range patterns are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:125:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                0xDC00 ... 0xDFFF => return Some(Meaning::TrailSurrogate(n as u16 - 0xDC00)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `..=` for an inclusive range\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\n"}
time:   0.001; rss:   99MB ->   99MB (   +0MB)	early_lint_checks
time:   0.000; rss:   99MB ->   99MB (   +0MB)	drop_ast
time:   0.000; rss:   99MB ->  101MB (   +2MB)	setup_global_ctxt
time:   0.000; rss:  101MB ->  101MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:  101MB ->  101MB (   +0MB)	looking_for_derive_registrar
time:   0.001; rss:  101MB ->  106MB (   +4MB)	misc_checking_1
time:   0.001; rss:  106MB ->  106MB (   +0MB)	type_collecting
time:   0.000; rss:  106MB ->  106MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  106MB ->  106MB (   +0MB)	unsafety_checking
time:   0.009; rss:  106MB ->  131MB (  +25MB)	coherence_checking
time:   0.003; rss:  131MB ->  132MB (   +2MB)	wf_checking
time:   0.001; rss:  132MB ->  132MB (   +0MB)	item_types_checking
time:   0.022; rss:  132MB ->  143MB (  +11MB)	item_bodies_checking
time:   0.036; rss:  106MB ->  143MB (  +38MB)	type_check_crate
time:   0.001; rss:  143MB ->  143MB (   +0MB)	match_checking
time:   0.000; rss:  143MB ->  143MB (   +0MB)	liveness_and_intrinsic_checking
time:   0.001; rss:  143MB ->  143MB (   +0MB)	misc_checking_2
time:   0.014; rss:  143MB ->  151MB (   +7MB)	MIR_borrow_checking
time:   0.000; rss:  151MB ->  151MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  151MB ->  151MB (   +0MB)	layout_testing
time:   0.000; rss:  151MB ->  151MB (   +0MB)	death_checking
time:   0.000; rss:  151MB ->  151MB (   +0MB)	unused_lib_feature_checking
time:   0.001; rss:  151MB ->  151MB (   +0MB)	crate_lints
time:   0.000; rss:  151MB ->  151MB (   +0MB)	module_lints
time:   0.002; rss:  151MB ->  151MB (   +0MB)	lint_checking
time:   0.001; rss:  151MB ->  151MB (   +0MB)	privacy_checking_modules
time:   0.003; rss:  151MB ->  151MB (   +0MB)	misc_checking_3
time:   0.000; rss:  153MB ->  153MB (   +0MB)	monomorphization_collector_root_collections
time:   0.003; rss:  153MB ->  154MB (   +1MB)	monomorphization_collector_graph_walk
time:   0.001; rss:  154MB ->  155MB (   +0MB)	partition_and_assert_distinct_symbols
time:   0.009; rss:  151MB ->  155MB (   +3MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmp1ig2rY/target/debug/deps/libfutf-b2ef8d4963a71306.rmeta","emit":"metadata"}
time:   0.000; rss:  155MB ->  155MB (   +0MB)	find_cgu_reuse
time:   0.013; rss:  155MB ->  174MB (  +20MB)	codegen_to_LLVM_IR
time:   0.014; rss:  155MB ->  174MB (  +20MB)	codegen_crate
time:   0.000; rss:  174MB ->  174MB (   +0MB)	serialize_dep_graph
time:   0.005; rss:  174MB ->  120MB (  -54MB)	free_global_ctxt
time:   0.017; rss:  160MB ->  121MB (  -39MB)	LLVM_passes(crate)
time:   0.000; rss:  121MB ->  121MB (   +0MB)	join_worker_thread
time:   0.001; rss:  120MB ->  121MB (   +0MB)	finish_ongoing_codegen
time:   0.000; rss:  121MB ->  121MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  121MB ->  121MB (   +0MB)	serialize_work_products
time:   0.000; rss:  121MB ->  121MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.001; rss:  121MB ->  121MB (   +1MB)	link_rlib
{"artifact":"/usr/home/liquid/tmp/.tmp1ig2rY/target/debug/deps/libfutf-b2ef8d4963a71306.rlib","emit":"link"}
time:   0.000; rss:  121MB ->  121MB (   +0MB)	link_binary_remove_temps
time:   0.001; rss:  121MB ->  121MB (   +1MB)	link_binary
time:   0.001; rss:  121MB ->  121MB (   +1MB)	link_crate
time:   0.002; rss:  120MB ->  121MB (   +1MB)	link
{"message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}
time:   0.117; rss:   46MB ->  121MB (  +74MB)	total
