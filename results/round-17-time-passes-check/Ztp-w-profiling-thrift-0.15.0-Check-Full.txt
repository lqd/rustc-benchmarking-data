time:   0.000; rss:   56MB ->   58MB (   +3MB)	parse_crate
time:   0.000; rss:   58MB ->   58MB (   +0MB)	attributes_injection
time:   0.000; rss:   58MB ->   58MB (   +0MB)	plugin_loading
time:   0.000; rss:   58MB ->   58MB (   +0MB)	plugin_registration
time:   0.000; rss:   62MB ->   62MB (   +0MB)	crate_injection
time:   0.044; rss:   62MB ->  105MB (  +43MB)	expand_crate
time:   0.000; rss:  105MB ->  105MB (   +0MB)	check_unused_macros
time:   0.044; rss:   62MB ->  105MB (  +43MB)	macro_expand_crate
time:   0.000; rss:  105MB ->  105MB (   +0MB)	maybe_building_test_harness
time:   0.000; rss:  105MB ->  105MB (   +0MB)	AST_validation
time:   0.000; rss:  105MB ->  105MB (   +0MB)	maybe_create_a_macro_crate
time:   0.000; rss:  105MB ->  105MB (   +1MB)	finalize_imports
time:   0.000; rss:  105MB ->  105MB (   +0MB)	resolve_access_levels
time:   0.000; rss:  105MB ->  105MB (   +0MB)	finalize_macro_resolutions
time:   0.007; rss:  105MB ->  108MB (   +2MB)	late_resolve_crate
time:   0.000; rss:  108MB ->  108MB (   +0MB)	resolve_main
time:   0.000; rss:  108MB ->  108MB (   +0MB)	resolve_check_unused
time:   0.000; rss:  108MB ->  108MB (   +0MB)	resolve_report_errors
time:   0.000; rss:  108MB ->  108MB (   +0MB)	resolve_postprocess
time:   0.009; rss:  105MB ->  108MB (   +3MB)	resolve_crate
time:   0.000; rss:  108MB ->  108MB (   +0MB)	complete_gated_feature_checking
time:   0.054; rss:   58MB ->  108MB (  +49MB)	configure_and_expand
{"artifact":"/usr/home/liquid/tmp/.tmpL7L5Eg/target/debug/deps/thrift-1205b088bf82a310.d","emit":"dep-info"}
time:   0.000; rss:  108MB ->  108MB (   +0MB)	prepare_outputs
time:   0.016; rss:  108MB ->  114MB (   +6MB)	hir_lowering
time:   0.002; rss:  114MB ->  114MB (   +0MB)	early_lint_checks
time:   0.001; rss:  114MB ->  114MB (   +0MB)	drop_ast
time:   0.000; rss:  113MB ->  113MB (   +0MB)	setup_global_ctxt
time:   0.000; rss:  117MB ->  117MB (   +0MB)	looking_for_entry_point
time:   0.000; rss:  117MB ->  117MB (   +0MB)	looking_for_derive_registrar
time:   0.004; rss:  117MB ->  117MB (   +0MB)	misc_checking_1
time:   0.014; rss:  117MB ->  134MB (  +17MB)	type_collecting
time:   0.000; rss:  134MB ->  134MB (   +0MB)	impl_wf_inference
time:   0.000; rss:  134MB ->  134MB (   +0MB)	unsafety_checking
time:   0.012; rss:  134MB ->  152MB (  +18MB)	coherence_checking
time:   0.033; rss:  152MB ->  154MB (   +2MB)	wf_checking
time:   0.006; rss:  154MB ->  154MB (   +0MB)	item_types_checking
time:   0.167; rss:  154MB ->  171MB (  +18MB)	item_bodies_checking
time:   0.232; rss:  117MB ->  171MB (  +55MB)	type_check_crate
time:   0.004; rss:  171MB ->  171MB (   +0MB)	match_checking
time:   0.003; rss:  171MB ->  172MB (   +0MB)	liveness_and_intrinsic_checking
time:   0.006; rss:  171MB ->  172MB (   +0MB)	misc_checking_2
time:   0.142; rss:  172MB ->  179MB (   +7MB)	MIR_borrow_checking
time:   0.000; rss:  179MB ->  179MB (   +0MB)	MIR_effect_checking
time:   0.000; rss:  179MB ->  179MB (   +0MB)	layout_testing
time:   0.002; rss:  179MB ->  180MB (   +1MB)	death_checking
time:   0.000; rss:  180MB ->  180MB (   +0MB)	unused_lib_feature_checking
{"message":"panic message is not a string literal","code":{"code":"non_fmt_panics","explanation":null},"level":"warning","spans":[{"file_name":"src/protocol/compact.rs","byte_start":20783,"byte_end":20885,"line_start":641,"line_end":644,"column_start":21,"column_end":10,"is_primary":true,"text":[{"text":"        _ => panic!(format!(","highlight_start":21,"highlight_end":29},{"text":"            \"should not have attempted to convert {} to u8\",","highlight_start":1,"highlight_end":61},{"text":"            field_type","highlight_start":1,"highlight_end":23},{"text":"        )),","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_fmt_panics)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this usage of panic!() is deprecated; it will be a hard error in Rust 2021","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the panic!() macro supports formatting, so there's no need for the format!() macro here","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the `format!(..)` macro call","code":null,"level":"help","spans":[{"file_name":"src/protocol/compact.rs","byte_start":20783,"byte_end":20791,"line_start":641,"line_end":641,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"        _ => panic!(format!(","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/protocol/compact.rs","byte_start":20884,"byte_end":20885,"line_start":644,"line_end":644,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        )),","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: panic message is not a string literal\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocol/compact.rs:641:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m641\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m        _ => panic!(format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m_____________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m642\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"should not have attempted to convert {} to u8\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m643\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            field_type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m644\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_fmt_panics)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the panic!() macro supports formatting, so there's no need for the format!() macro here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the `format!(..)` macro call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m641\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        _ => panic!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m642\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \"should not have attempted to convert {} to u8\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m643\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            field_type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m644\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        ),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
time:   0.006; rss:  180MB ->  181MB (   +1MB)	crate_lints
time:   0.003; rss:  181MB ->  181MB (   +0MB)	module_lints
time:   0.009; rss:  180MB ->  181MB (   +1MB)	lint_checking
time:   0.005; rss:  181MB ->  181MB (   +0MB)	privacy_checking_modules
time:   0.019; rss:  179MB ->  181MB (   +2MB)	misc_checking_3
time:   0.004; rss:  181MB ->  182MB (   +1MB)	generate_crate_metadata
{"artifact":"/usr/home/liquid/tmp/.tmpL7L5Eg/target/debug/deps/libthrift-1205b088bf82a310.rmeta","emit":"metadata"}
time:   0.001; rss:  182MB ->  183MB (   +1MB)	codegen_crate
time:   0.000; rss:  183MB ->  183MB (   +0MB)	serialize_dep_graph
time:   0.007; rss:  183MB ->  119MB (  -64MB)	free_global_ctxt
time:   0.000; rss:  119MB ->  119MB (   +0MB)	join_worker_thread
time:   0.000; rss:  119MB ->  119MB (   +0MB)	finish_ongoing_codegen
time:   0.000; rss:  119MB ->  119MB (   +0MB)	llvm_dump_timing_file
time:   0.000; rss:  119MB ->  119MB (   +0MB)	serialize_work_products
time:   0.000; rss:  119MB ->  119MB (   +0MB)	link_binary_check_files_are_writeable
time:   0.000; rss:  119MB ->  119MB (   +0MB)	link_binary_remove_temps
time:   0.000; rss:  119MB ->  119MB (   +0MB)	link_binary
time:   0.000; rss:  119MB ->  119MB (   +0MB)	link_crate
time:   0.000; rss:  119MB ->  119MB (   +0MB)	link
{"message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
time:   0.499; rss:   46MB ->   97MB (  +51MB)	total
